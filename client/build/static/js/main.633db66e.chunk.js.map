{"version":3,"sources":["context/AuthContext.js","components/navbar/Navbar.jsx","context/SearchContext.js","listObject.js","components/header/Header.jsx","hooks/useFetch.js","components/featured/Featured.jsx","components/propertyList/PropertyList.jsx","components/recentSeenHotel/RecentSeenHotel.jsx","components/footer/Footer.jsx","pages/clientPages/home/Home.jsx","components/searchItem/SearchItem.jsx","function.js","formSource.js","pages/clientPages/list/List.jsx","components/ListRoomClient/ListRoomClient.jsx","pages/clientPages/hotel/Hotel.jsx","pages/clientPages/login/Login.jsx","pages/clientPages/register/Register.jsx","components/adminComponents/sidebar/Sidebar.jsx","components/adminComponents/navbarAdmin/NavbarAdmin.jsx","pages/adminPages/adminHome/AdminHome.jsx","pages/adminPages/ListHotel/ListHotel.jsx","pages/adminPages/newHotel/NewHotel.jsx","pages/adminPages/ModifyHotel/ModifyHotel.jsx","datatablesource.js","pages/adminPages/ListRoom/ListRoom.jsx","pages/clientPages/listBooking/ListBooking.jsx","pages/clientPages/reserve/Reserve.jsx","pages/adminPages/newRoom/NewRoom.jsx","pages/adminPages/ModifyRoom/ModifyRoom.jsx","pages/adminPages/ListReservation/ListReservation.jsx","pages/adminPages/HotelStatistics/HotelStatistics.jsx","components/adminComponents/sidebarAdministrator/SidebarAdministrator.jsx","pages/administratorPages/administrator/Administrator.jsx","pages/administratorPages/AllHotelPayment/AllHotelPayment.jsx","pages/adminPages/RoomDetails/RoomDetails.jsx","pages/adminPages/ModifyRoomCount/ModifyRoomCount.jsx","pages/clientPages/StatusTransaction/StatusTransaction.jsx","pages/adminPages/modifyUser/ModifyUser.jsx","pages/adminPages/UpdatePaymentInfo/UpdatePaymentInfo.jsx","pages/clientPages/Policy/Policy.jsx","App.js","index.js"],"names":["INITIAL_STATE","user","JSON","parse","localStorage","getItem","loading","error","AuthContext","createContext","AuthReducer","state","action","type","payload","AuthContextProvider","_ref","children","dispatch","useReducer","useEffect","_state$user","userInfoLocalStorage","username","setItem","stringify","React","createElement","Provider","value","Navbar","setUser","useState","useContext","showInfoUser","setShowInfoUser","navigate","useNavigate","checkUserData","item","setTimeout","window","addEventListener","removeEventListener","className","Link","to","style","color","textDecoration","onClick","toggleOptions","fontWeight","cursor","handleChangePassword","async","axios","post","utc","Date","getTimezoneOffset","currentDate","addHours","setHours","startDate","destination","dates","endDate","addDays","key","options","adult","room","SearchContext","SearchReducer","SearchContextProvider","listProvinces","name","imageUrl","Header","searchContext","setDestination","setDates","openDate","setOpenDate","setOptions","timeZone","openOptions","setOpenOptions","suggestedDestination","setSuggestedDestination","handleOption","operation","prev","[object Object]","Fragment","FontAwesomeIcon","icon","faBed","fontSize","onChange","e","target","filteredSuggestions","filter","province","toLowerCase","startsWith","map","length","suggestion","index","handleSuggestionClick","faCalendarDays","concat","format","DateRange","editableDateInputs","newSelection","selection","moveRangeOnFirstSelection","ranges","minDate","maxDate","faPerson","disabled","handleSearch","useFetch","url","data","setData","setLoading","setError","res","get","err","response","status","location","href","console","log","fetchData","reFetch","Featured","_data$","_data$2","_data$3","_data$4","_data$5","_data$6","_data$7","_data$8","_data$9","getImageProvinceUrl","provinceName","provinceFound","find","city","src","alt","quantity","PropertyList","img","i","_data$i2","_data$i3","_data$i4","_data$i","typeFromPropertyList","navigateByType","count","RecentSeenHotel","mostViewedCity","setMostViewedCity","allHotelData","suggestedHotel","loadingSuggestedHotel","errorSuggestedHotel","reFetchSuggestedHotel","recentHotelIds","setRecentHotelIds","idHotelSeenString","idHotelSeen","cityCount","id","hotel","_id","maxCount","filteredHotels","_item$cheapestPrice","_item$cheapestPrice2","includes","cheapestPrice","price","undefined","limitedSuggestedHotels","slice","photos","Intl","NumberFormat","rating","Footer","Home","SearchItem","_item$facilities","roomInSearchItem","setroomInSearchItem","allTypeRoom","MILLISECONDS_PER_DAY","days","date1","date2","timeDiff","Math","abs","getTime","ceil","dayDifference","calculateRoom","totalPeople","parseInt","parseFloat","floor","people","alldates","getDatesInRange","start","end","date","push","setDate","getDate","isAvailable","roomNumber","dateToCheck","unavailableDates","some","dateMinusOneDay","totalRooms","caculateTotalRoomsAvailable","reduce","total","typeRoom","roomNumbers","roomAvailable","dateAvailableCount","calculateAvailableRoomsEveryTypeRoom","distance","address","facilities","facility","width","totalPrice","calculatePrice","hotelInputs","label","placeholder","roomInputs","hotelFacilities","List","_location$state$typeF","_location$state","useLocation","min","setMin","max","setMax","setType","selectedFacilities","setSelectedFacilities","sortOrder","setSortOrder","handleOptionChange","optionName","prevOptions","handleDayChange","height","event","display","justifyContent","alignItems","gap","marginTop","prevSelected","handleCheckboxChange","checked","handleClick","textAlign","marginBottom","renderSearchItem","filteredData","sort","a","b","priceA","priceB","random","every","_hotel$facilities","ListRoomClient","hotelId","hotelType","selectedRooms","setSelectedRooms","openExpandPhoto","setOpenExpandPhoto","slideNumber","setSlideNumber","indexItem","setIndexItem","selectedRoomIds","setSelectedRoomIds","setKey","selectedRoomDetais","totalPriceReservation","setTotalPriceReservation","handleMove","direction","newSlideNumber","_item$photos","border","title","maxPeople","desc","photo","handleOpen","fontStyle","faCircleXmark","faCircleArrowLeft","faCircleArrowRight","handleSelectChange","roomQuantitySelected","forEach","dataItem","selectedValue","document","getElementById","updatedSelectedRoomsCopy","findIndex","selectedRoom","splice","roomId","rn","roomTypeId","seletedRoomIdsReserved","toast","Hotel","_data$photos","_data$facilities","_data$cheapestPrice","pathname","split","open","setOpen","openModal","setOpenModal","faLocationDot","whiteSpace","Login","credentials","setCredentials","password","handleChange","preventDefault","isAdmin","message","Register","email","passwordRepeat","alert","Sidebar","selectedItem","setSelectedItem","handleChangeSelectedItem","backgroundColor","StoreIcon","HouseIcon","BookOnlineIcon","AccountCircleOutlinedIcon","ExitToAppIcon","NavbarAdmin","AdminHome","endLessDate","addYears","ListHotel","reservationData","reservationLoading","reservationError","reservationReFetch","deleteHotel","delete","success","itemId","previousPath","handleStatisticHotel","handleEditHotel","confirmAlert","buttons","handleDelete","NewHotel","files","setFiles","info","setInfo","customFacilities","setCustomFacilities","isSending","setIsSending","trim","file","position","URL","createObjectURL","newFiles","_","removeImage","top","right","borderRadius","htmlFor","DriveFolderUploadOutlinedIcon","multiple","input","rows","maxLength","padding","boxSizing","customFacilitiesArray","allSelectedFacilities","validateInputs","list","Promise","all","Object","values","FormData","append","uploadRes","newhotel","warning","autoClose","ModifyHotel","idHotel","defaultType","_data$facilities2","initialSelectedFacilities","initialCustomFacilities","join","hidden","newModifyHotel","put","roomColumns","field","headerName","hide","align","headerAlign","flex","renderHeader","params","lineHeight","colDef","cellClassName","valueFormatter","formattedValue","renderCell","row","formatDate","toLocaleDateString","ReservationColumns","comparator","roomDetails","guest","statusText","statusColor","RenenueAllHotelColumn","multipliedValue","valueGetter","totalRevenue","allHotelPaymentColumn","ListRoom","hotelData","hotelLoading","hotelError","hotelReFetch","setHotelId","roomData","roomLoading","roomError","roomReFetch","reservationDataFuture","hotelIdFromAddModifyRoom","_hotelData$","handleNavigation","path","hotelIdFromListRoom","deleteRoom","typeRoomId","actionColumn","currentStatus","changeStatusRoomType","reservation","roomTypeIdsReserved","selected","DataGrid","autoHeight","getRowHeight","columns","pageSize","rowsPerPageOptions","getRowId","localeText","noRowsLabel","margin","ListBooking","deleteAvailability","cancelFee","selectedReservation","hasError","allDatesReserve","unavailableRangeDates","startDateRange","endDateRange","cancelDetails","isAdminCancel","hotelName","hotelAddress","roomsDetail","toLocaleString","subHours","hotelContact","flexWrap","createdAt","handleCancelReserve","Reserve","_hotelData$photos","setAlldates","setStartDate","setEndDate","roomsDetailFromListClient","setRoomsDetailFromListClient","reFreshRoomData","setReFreshRoomData","phoneNumber","setPhoneNumber","paymentType","setPaymentType","handlePaymentTypeChange","roomCounts","detailRooms","entries","alignContent","reservationId","idOwnerHotel","ownerId","paymentUrl","amount","startIndex","indexOf","substring","NewRoom","numberOfRooms","roomQuantity","Array","from","newRoom","ModifyRoom","idRoom","newModifyRoom","subYears","ListReservation","datesToFilter","setDatesToFilter","modalIsOpen","setModalIsOpen","isRequesting","setIsRequesting","reasonCancel","setReasonCancel","selectedCancelReservation","setSelectedCancelReservation","minWidth","canceledReservation","openRequestCancelModal","closeModalCancelRequest","filterByDates","cancelFilterByDates","sx","&.MuiDataGrid-root--densityCompact .MuiDataGrid-cell","py","&.MuiDataGrid-root--densityStandard .MuiDataGrid-cell","&.MuiDataGrid-root--densityComfortable .MuiDataGrid-cell","HotelStatistics","month","setMonth","hotelDataByMonth","loadinghotelDataByMonth","errorhotelDataByMonth","reFetchhotelDataByMonth","formatCurrency","currency","Highcharts","chart","text","xAxis","categories","year","reverse","yAxis","labels","formatter","this","tooltip","y","credits","enabled","accessibility","series","revenue","soldRoomsData","soldRooms","pieChartData","roomType","hasOwnProperty","totalGuests","totalOrders","marginLeft","SidebarAdministrator","CreditCardIcon","Administrator","hotelRevenue","hotelRevenueLoading","hotelRevenueError","hotelRevenueReFetch","checkboxSelection","AllHotelPayment","exportToExcel","col","rowData","worksheet","XLSX","json_to_sheet","header","wpx","workbook","book_new","book_append_sheet","excelBuffer","bookType","dataBlob","Blob","saveAs","slots","toolbar","GridToolbar","RoomDetails","_roomTypeData$roomNum","roomTypeData","roomTypeDataReFetch","roomCountStatus","loadingroomCountStatus","errorroomCountStatus","reFetchRoomCountStatus","roomCloseData","loadingroomCloseData","errorroomCloseData","roomCloseDataReFetch","openDate30Days","setOpenDate30Days","selectedRoomIdsToDelete","setSelectedRoomIdsToDelete","roomQuantityToClose","setRoomQuantityToClose","handleCancelCloseRoom","allDatesClose","startDateClose","endDateClose","quantityRoomClosed","roomCloseId","handleDayChangeFilter30Days","_roomTypeData$roomNum2","_roomTypeData$roomNum3","_roomTypeData$roomNum4","day","countAvailable","closeRoomCount","isArray","startClose","endClose","allDatesClosed","roomClose","openHandleCancelCloseRoom","ModifyRoomCount","roomCountToAdd","setRoomCountToAdd","roomCountToDelete","setRoomCountToDelete","canDelete","StatusTransaction","flexDirection","ModifyUser","modify","oldPassword","newPassword","newPasswordRepeat","UpdatePaymentInfo","dataUser","paymentInfo","Policy","App","ProtectedRoute","isLoggedIn","setIsLoggedIn","firstLoad","setFirstLoad","fetch","checkAccessToken","Navigate","ProtectedAdministratorRoute","_ref2","BrowserRouter","Routes","Route","element","ToastContainer","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.633db66e.chunk.js","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\r\nimport React from \"react\";\r\n// khi dispatch co user,loading,error, user tra ve action.payload la thong tin tk trong csdl\r\nconst INITIAL_STATE = {\r\n  user:  JSON.parse(localStorage.getItem(\"user\")) ||null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n// khi mà user = AuthContext() thì mặc định user sẽ có những thứ trên\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\n// quản lý các trạng thái của context- các action như LOGIN_START để cập nhật trạng thái context\r\nconst AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    //   luc bam nut dang nhap\r\n    case \"LOGIN_START\": \r\n      return {\r\n        user: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        user: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n      // khi co action gui sang  dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n      // sẽ có thuộc tính payload, action.payload để truy cập vào đó\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n  useEffect(() => {\r\n      // luu giu user khi refresh, luu state thanh 1 chuoi vao local storage, khi biến user thay đổi thì hàm này gọi, thônng\r\n      // tin user sẽ lưu trong localstorage\r\n    // const userWithoutAdmin = { ...state.user };\r\n    // delete userWithoutAdmin.isAdmin;\r\n    const userInfoLocalStorage = { username: state.user?.username };\r\n    localStorage.setItem(\"user\", JSON.stringify(userInfoLocalStorage));\r\n  }, [state.user]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","import React, { useContext, useState, useEffect } from 'react'\r\nimport \"./navbar.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(\"\")\r\n  const { dispatch } = useContext(AuthContext)\r\n  const [showInfoUser, setShowInfoUser] = useState(false);\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    function checkUserData() {\r\n      const item = JSON.parse(localStorage.getItem('user'));\r\n      if (item) {\r\n        setUser(item)\r\n      }\r\n    }\r\n    // đợi cho localstorage cập nhật\r\n    setTimeout(checkUserData, 1);\r\n    window.addEventListener('storage', checkUserData)\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', checkUserData)\r\n    }\r\n  }, [])\r\n  const handleUpdateInfo = () => {\r\n    navigate('/update-info');\r\n  };\r\n\r\n  const handleChangePassword = (item) => {\r\n    navigate('/admin/changePassword', { state: { item } });\r\n  };\r\n  const handleLogout = async () => {\r\n\r\n    const res = await axios.post(\"/auth/logout\");\r\n    navigate(\"/login\");\r\n    dispatch({ type: \"LOGOUT\" });\r\n\r\n  }\r\n\r\n  const toggleOptions = () => {\r\n    setShowInfoUser(!showInfoUser);\r\n  };\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navContainer\">\r\n        {/* LOGO */}\r\n        <Link to=\"/\" style={{ color: \"inherit\", textDecoration: \"none\" }}>\r\n          <h1 className=\"logo_name\">HotelBooking</h1>\r\n          {/* <img className=\"logo\" src=\"https://www.hilton.com/modules/assets/svgs/logos/WW.svg\" alt=\"\" /> */}\r\n        </Link>\r\n\r\n\r\n        {user?.username ? (\r\n          <div className=\"logout\">\r\n            <Link to=\"/admin/hotels\">\r\n              <button className=\"navButton\" >Quản lý chỗ nghỉ của bạn</button>\r\n            </Link>\r\n\r\n            <Link to=\"/bookings\">\r\n              <button className=\"navButton\" >Đơn đặt phòng của bạn</button>\r\n            </Link>\r\n\r\n            <div className=\"account\" >\r\n              <h1 onClick={toggleOptions}>Xin chào, {user?.username}</h1>\r\n              {showInfoUser && (\r\n                <div className=\"account_options\" >\r\n                  {/* <div style={{fontWeight:'bold', cursor:'pointer'}} onClick={handleUpdateInfo}>Cập nhật thông tin</div> */}\r\n                  <div style={{ fontWeight: 'bold', cursor: 'pointer' }} onClick={() => handleChangePassword(\"changePassword\")}>Đổi mật khẩu</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {/* <Link to=\"/login\"> */}\r\n\r\n            <button className=\"navButton\" onClick={handleLogout} >Đăng xuất</button>\r\n            {/* </Link> */}\r\n          </div>\r\n\r\n        ) : (\r\n          <div className=\"navItems\">\r\n            {/* <button className=\"navButton\" >List your Hotel</button> */}\r\n            <Link to=\"/register\">\r\n\r\n              <button className=\"navButton\" >Đăng ký</button>\r\n            </Link>\r\n            <Link to=\"/login\">\r\n\r\n              <button className=\"navButton\" >Đăng nhập</button>\r\n            </Link>\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { createContext, useReducer } from \"react\";\r\nimport React from \"react\";\r\nimport { format,addDays,addHours  } from \"date-fns\";\r\nconst utc = new Date().getTimezoneOffset() / 60 //-7\r\n// nếu qua 14h thì mặc định để  khoảng ngày là ngày tới + ngày tiếp theo\r\nconst currentDate = addHours(new Date(),10+(-7-utc));\r\ncurrentDate.setHours(0, 0, 0, 0);\r\nconst startDate = addHours(currentDate, 7 - utc);\r\nconst INITIAL_STATE = {\r\n  destination: \"Hà Nội\",\r\n  dates: [\r\n    {\r\n      // nếu máy ở múi giờ VN thì đang là 14h\r\n      startDate: startDate,\r\n      endDate: addDays(startDate, 1),\r\n      key: \"selection\",\r\n    },\r\n  ],\r\n  options: {\r\n    adult: 2,\r\n    children: 0,\r\n    room: 1,\r\n  },\r\n};\r\n\r\nexport const SearchContext = createContext(INITIAL_STATE);\r\n\r\nconst SearchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"NEW_SEARCH\": // MÕI KHI thay đổi thông tin thanh search\r\n      return action.payload; // GỒM CITY, DATE RANGE, OPTION\r\n    case \"RESET_SEARCH\":\r\n      return INITIAL_STATE;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const SearchContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(SearchReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <SearchContext.Provider\r\n      value={{\r\n        destination: state.destination,\r\n        dates: state.dates,\r\n        options: state.options,\r\n        dispatch,  // dispatch khi muốn dùng SearchReducer\r\n      }}\r\n    >\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};","export const listProvinces = [\r\n    {\r\n        name: \"Hà Nội\",\r\n        imageUrl: \"https://ik.imagekit.io/tvlk/blog/2023/09/ho-guom-1.jpg?tr=dpr-2,w-675\"\r\n    },\r\n    {\r\n        name: \"Ninh Bình\",\r\n        imageUrl: \"https://cdn.tgdd.vn/Files/2022/03/28/1422795/kinh-nghiem-du-lich-chua-bai-dinh-ninh-binh-day-du-tu-a-z-202203282349275615.jpg\"\r\n    },\r\n    {\r\n        name: \"Đà Nẵng\",\r\n        imageUrl: \"https://vietnam.travel/sites/default/files/2018-10/danang%20travel%20guide.jpg\"\r\n    },\r\n    {\r\n        name: \"Hải Phòng\",\r\n        imageUrl: \"https://example.com/haiphong.jpg\"\r\n    },\r\n    {\r\n        name: \"Cần Thơ\",\r\n        imageUrl: \"https://example.com/cantho.jpg\"\r\n    },\r\n    {\r\n        name: \"Hồ Chí Minh\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/a/a6/Ho_Chi_Minh_City.jpg\"\r\n    },\r\n    {\r\n        name: \"Quảng Ninh\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/e/e6/Ha_Long_Bay.jpg\"\r\n    },\r\n    {\r\n        name: \"Lào Cai\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/5/51/Sa_Pa_Town.jpg\"\r\n    },\r\n    {\r\n        name: \"Thái Nguyên\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/2/2b/Thai_Nguyen_city.jpg\"\r\n    },\r\n    {\r\n        name: \"Phú Thọ\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/7/79/Hung_Temple_Festival.jpg\"\r\n    },\r\n    {\r\n        name: \"Hà Tĩnh\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/1/1e/Ke_Go_Lake.jpg\"\r\n    },\r\n    {\r\n        name: \"Huế\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Hue_City.jpg\"\r\n    },\r\n    {\r\n        name: \"Khánh Hòa\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/3/3a/Nha_Trang_Beach.jpg\"\r\n    },\r\n    {\r\n        name: \"Bình Thuận\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/7/7d/Mui_Ne.jpg\"\r\n    },\r\n    {\r\n        name: \"Bà Rịa - Vũng Tàu\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/9/91/Vung_Tau_Beach.jpg\"\r\n    },\r\n    {\r\n        name: \"Cà Mau\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/9/91/Vung_Tau_Beach.jpg\"\r\n    }\r\n];","\r\nimport React from 'react';\r\nimport Navbar from '../navbar/Navbar';\r\nimport {\r\n  faBed,\r\n  faCalendarDays,\r\n  faPerson,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport { useState, useContext } from \"react\";\r\n// hien calendar\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport { format, addDays, addHours, addYears } from \"date-fns\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { listProvinces } from '../../listObject';\r\nconst Header = ({ type }) => {\r\n  const searchContext = useContext(SearchContext);\r\n  const [destination, setDestination] = useState(searchContext.destination);\r\n  const [dates, setDates] = useState(searchContext.dates);\r\n  const [openDate, setOpenDate] = useState(false);\r\n  const [options, setOptions] = useState(searchContext.options);\r\n  const timeZone = new Date().getTimezoneOffset() / 60  // độ lệch múi giờ so với UTC của máy hiện tại\r\n  const [openOptions, setOpenOptions] = useState(false);\r\n  const [suggestedDestination, setSuggestedDestination] = useState([]);\r\n  const navigate = useNavigate();\r\n  const handleDestinationChange = (e) => {\r\n    const value = e.target.value;\r\n    setDestination(value);\r\n    if (value) {\r\n      const filteredSuggestions = listProvinces.filter(province =>\r\n        province.name.toLowerCase().startsWith(value.toLowerCase())\r\n      ).map(province => province.name);\r\n      setSuggestedDestination(filteredSuggestions);\r\n    } else {\r\n      setSuggestedDestination([]);\r\n    }\r\n  }\r\n  // chỉnh list gợi ý\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setDestination(suggestion);\r\n    setSuggestedDestination([]);\r\n  };\r\n  // sự kiện chỉnh sửa số người, room\r\n  const handleOption = (name, operation) => {\r\n\r\n    setOptions((prev) => {\r\n      return {\r\n        ...prev,\r\n        // dùng [] để truy cập vì name là biến, chưa xác định rõ (hoặc giá trị chứa dấu cách), chỉ khi xđ rõ mới dùng dấu .\r\n        [name]: operation === \"i\" ? options[name] + 1 : options[name] - 1,\r\n      };\r\n    });\r\n    dispatch({ type: \"NEW_SEARCH\", payload: { destination, dates, options } });\r\n  };\r\n\r\n  // Search Context\r\n  const { dispatch } = useContext(SearchContext);\r\n\r\n  const { user } = useContext(AuthContext)\r\n\r\n  const handleSearch = () => {\r\n    // luu nhung lua chon de dung cho page sau\r\n    dispatch({ type: \"NEW_SEARCH\", payload: { destination, dates, options } });\r\n\r\n    navigate(\"/hotels\", { state: { destination, dates, options } });\r\n  };\r\n  // console.log(dates)\r\n  return (\r\n    <div className=\"header\">\r\n      <div\r\n        className={\r\n          type === \"list\" ? \"headerContainer listMode\" : \"headerContainer\"\r\n        }\r\n      >\r\n        {/* <div className=\"headerList\">\r\n          <div className=\"headerListItem active\">\r\n            <FontAwesomeIcon icon={faBed} />\r\n            <span>Stays</span>\r\n          </div>\r\n          <div className=\"headerListItem\">\r\n            <FontAwesomeIcon icon={faPlane} />\r\n            <span>Flights</span>\r\n          </div>\r\n          <div className=\"headerListItem\">\r\n            <FontAwesomeIcon icon={faCar} />\r\n            <span>Car rentals</span>\r\n          </div>\r\n          <div className=\"headerListItem\">\r\n            <FontAwesomeIcon icon={faBed} />\r\n            <span>Attractions</span>\r\n          </div>\r\n          <div className=\"headerListItem\">\r\n            <FontAwesomeIcon icon={faTaxi} />\r\n            <span>Airport taxis</span>\r\n          </div>\r\n        </div> */}\r\n        {type !== \"list\" && (\r\n          <>\r\n            <h1 className=\"headerTitle\">\r\n              Du lịch đến bất cứ đâu trên Việt Nam\r\n            </h1>\r\n            <p className=\"headerDesc\">\r\n              Chọn khách sạn với giá rẻ nhất dành cho bạn\r\n            </p>\r\n            {/* {!user && <button className=\"headerBtn\">Sign in / Register</button>} */}\r\n            <div className=\"headerSearch\">\r\n              {/* thanh search city */}\r\n              <div className=\"headerSearchItem\">\r\n                <FontAwesomeIcon icon={faBed} className=\"headerIcon\" />\r\n                <input style ={{fontSize:'16px',color: 'black'}}\r\n                  type=\"text\"\r\n                  value={destination}\r\n                  className=\"headerSearchInput \"\r\n                  // doi trang thai state destination moi khi thay doi\r\n                  onChange={handleDestinationChange}\r\n                />\r\n                {suggestedDestination.length > 0 && (\r\n                  <div className=\"suggestionDestination\">\r\n                    <div  className=\"suggestionsList\">\r\n                      {suggestedDestination.map((suggestion, index) => (\r\n                        <div \r\n                          key={index}\r\n                          className=\"suggestionItem\"\r\n                          onClick={() => handleSuggestionClick(suggestion)}\r\n                        >\r\n                          {suggestion}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n\r\n\r\n              {/* thanh search ngày */}\r\n              <div className=\"headerSearchItem\">\r\n                <FontAwesomeIcon icon={faCalendarDays} className=\"headerIcon\" />\r\n                {/* chỗ hiển thị lên UI */}\r\n                <span\r\n                  onClick={() => setOpenDate(!openDate)}\r\n                  className=\"headerSearchText\"\r\n                >{`${format(dates[0].startDate, \"dd/MM/yyyy\")} đến ${format(\r\n                  dates[0].endDate,\r\n                  \"dd/MM/yyyy\"\r\n                )}`}</span>\r\n\r\n                {openDate && (\r\n                  <DateRange\r\n                    editableDateInputs={true}\r\n                    onChange={(item) => {\r\n                      const utc = new Date().getTimezoneOffset() / 60 //-7\r\n                      const newSelection = { ...item.selection };\r\n                      let { startDate, endDate } = newSelection;\r\n                      if(startDate === endDate){\r\n                        // nếu người dùng chỉ chọn 1 ngày\r\n                         endDate = addDays(new Date(startDate), 1);\r\n                      }\r\n                      // 14+ getTimezoneOffset Múi giờ lệch ở khách sạn mà nó đặt thay cho số 7\r\n                      // khi lấy từ lịch giờ đang để 0, với việt nam thì utc là -7, startDate sẽ là 14h, vì csdl lưu 7hUTC lên client thành 14h GMT+7\r\n                      // nếu máy client để múi giờ GMT -1, tức startDate sẽ để 6h, csdl lưu 7h UTC nên lên client thành 6h => giống nhau để so ngày\r\n                      startDate = addHours(startDate, 7 - utc);\r\n                      endDate = addHours(endDate, 7 - utc);\r\n                      setDates([{ ...newSelection, startDate, endDate }]);\r\n                    }}\r\n                    moveRangeOnFirstSelection={true}\r\n                    ranges={dates}\r\n                    className=\"date\"\r\n                    minDate={addHours(new Date(),10+(-7-timeZone))} // ngày tối thiểu đc chọn, \r\n                    maxDate={addDays(new Date(),365)}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n\r\n              <div className=\"headerSearchItem\">\r\n                <FontAwesomeIcon icon={faPerson} className=\"headerIcon\" />\r\n                <span\r\n                  onClick={() => setOpenOptions(!openOptions)}\r\n                  className=\"headerSearchText\"\r\n                >{`${options.adult} người lớn · ${options.children} trẻ em · ${options.room} phòng`}</span>\r\n                {openOptions && (\r\n                  <div className=\"options\">\r\n                    <div className=\"optionItem\">\r\n                      <span className=\"optionText\">Người lớn</span>\r\n                      <div className=\"optionCounter\">\r\n                        <button\r\n                          disabled={options.adult <= 1}\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"adult\", \"d\")}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <span className=\"optionCounterNumber\">\r\n                          {options.adult}\r\n                        </span>\r\n                        <button\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"adult\", \"i\")}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"optionItem\">\r\n                      <span className=\"optionText\">Trẻ em</span>\r\n                      <div className=\"optionCounter\">\r\n                        <button\r\n                          disabled={options.children <= 0}\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"children\", \"d\")}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <span className=\"optionCounterNumber\">\r\n                          {options.children}\r\n                        </span>\r\n                        <button\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"children\", \"i\")}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"optionItem\">\r\n                      <span className=\"optionText\">Phòng</span>\r\n                      <div className=\"optionCounter\">\r\n                        <button\r\n                          disabled={options.room <= 1}\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"room\", \"d\")}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <span className=\"optionCounterNumber\">\r\n                          {options.room}\r\n                        </span>\r\n                        <button\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"room\", \"i\")}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"headerSearchItem\">\r\n                <button className=\"headerBtn\" onClick={handleSearch}>\r\n                  Tìm kiếm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await axios.get(url);\r\n        setData(res.data);\r\n      } catch (err) {\r\n        if (err.response && err.response.status === 401) {\r\n          // Redirect to login page\r\n          window.location.href = '/login'; // Thay đổi đường dẫn đến trang đăng nhập của bạn\r\n        } else {\r\n          console.log(err)\r\n          setError(err);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n// url de tu dong reFecth moi khi api thay doi\r\n  const reFetch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(url);\r\n      setData(res.data);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return { data, loading, error, reFetch };\r\n};\r\n\r\nexport default useFetch;\r\n","import useFetch from \"../../hooks/useFetch\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport { useState,useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { format,addDays } from \"date-fns\";\r\nimport \"./featured.css\";\r\nimport React from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport { listProvinces } from \"../../listObject\";\r\nconst Featured = () => {\r\n  // phân loại theo địa điểm\r\n  const { data, loading, error } = useFetch(\r\n    \"/hotels/countByCity\"\r\n  );\r\n  const searchContext = useContext(SearchContext);\r\n  const [destination, setDestination] = useState(searchContext.destination);\r\n  const [dates, setDates] = useState(searchContext.dates);\r\n  const [options, setOptions] = useState(searchContext.options);\r\n\r\n  const navigate = useNavigate();\r\n  const { dispatch } = useContext(SearchContext);\r\n\r\n  function handleSearch(destination) {\r\n    dispatch({ type: \"NEW_SEARCH\", payload: { destination, dates, options } });\r\n    navigate(\"/hotels\", );\r\n  }\r\n\r\n  const getImageProvinceUrl = (provinceName) =>{\r\n    const provinceFound = listProvinces.find(province => province.name == provinceName)\r\n    return provinceFound?.imageUrl\r\n  }\r\n  return (\r\n    <div className=\"featured\">\r\n      {loading ? (\r\n        \"Loading please wait\"\r\n      ) : (\r\n        // dấu <> thay cho react fragment - = với việc tạo 1 div lồng ra ngoài\r\n        <> \r\n          <div\r\n            className=\"featuredItem\"\r\n            onClick={() => handleSearch(data[0].city)}\r\n          >\r\n            <img\r\n              src={getImageProvinceUrl(data[0]?.city)}\r\n              alt=\"\"\r\n              className=\"featuredImg\"\r\n            />\r\n            <div className=\"featuredTitles\">\r\n            <h1>{data[0]?.city}</h1>\r\n              <h2>{data[0]?.quantity} chỗ nghỉ</h2>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"featuredItem\"  onClick={() => handleSearch(data[1].city)}>\r\n            <img\r\n              src={getImageProvinceUrl(data[1]?.city)}\r\n              alt=\"\"\r\n              className=\"featuredImg\"\r\n            />\r\n            <div\r\n              className=\"featuredTitles\"\r\n             \r\n            >\r\n               <h1>{data[1]?.city}</h1>\r\n              <h2>{data[1]?.quantity} chỗ nghỉ</h2>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"featuredItem\"  onClick={() => handleSearch(data[2].city)}>\r\n            <img\r\n              src={getImageProvinceUrl(data[2]?.city)}\r\n              alt=\"\"\r\n              className=\"featuredImg\"\r\n            />\r\n            <div\r\n              className=\"featuredTitles\"\r\n             \r\n            >\r\n                <h1>{data[2]?.city}</h1>\r\n              <h2>{data[2]?.quantity} chỗ nghỉ</h2>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Featured;\r\n","import useFetch from \"../../hooks/useFetch\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport \"./propertyList.css\";\r\n// lọc theo loại khách sạn - resort, villa...\r\nconst PropertyList = () => {\r\n  // phân theo loại chỗ nghỉ\r\n  const { data, loading, error } = useFetch(\"/hotels/countByType\");\r\n  // console.log(data);\r\n  const navigate = useNavigate()\r\n  const navigateByType = (type) =>{\r\n    navigate(\"/hotels\",{state:{typeFromPropertyList:type } });\r\n  }\r\n  const images = [\r\n    \"https://cf.bstatic.com/xdata/images/xphoto/square300/57584488.webp?k=bf724e4e9b9b75480bbe7fc675460a089ba6414fe4693b83ea3fdd8e938832a6&o=\",\r\n    \"https://cf.bstatic.com/static/img/theme-index/carousel_320x240/card-image-apartments_300/9f60235dc09a3ac3f0a93adbc901c61ecd1ce72e.jpg\",\r\n    \"https://cf.bstatic.com/static/img/theme-index/carousel_320x240/bg_resorts/6f87c6143fbd51a0bb5d15ca3b9cf84211ab0884.jpg\",\r\n    \"https://cf.bstatic.com/static/img/theme-index/carousel_320x240/card-image-villas_300/dd0d7f8202676306a661aa4f0cf1ffab31286211.jpg\",\r\n    // \"https://cf.bstatic.com/static/img/theme-index/carousel_320x240/card-image-chalet_300/8ee014fcc493cb3334e25893a1dee8c6d36ed0ba.jpg\",\r\n  ];\r\n  return (\r\n    <div className=\"pList\">\r\n      {loading ? (\r\n        \"loading\"\r\n      ) : (\r\n        <>\r\n          {data &&\r\n            images.map((img, i) => (\r\n              <div   onClick={() => navigateByType(data[i]?.type)} className=\"pListItem\" key={i}>\r\n              \r\n                <img src={img} alt=\"\" className=\"pListImg\" />\r\n                <div className=\"pListTitles\">\r\n                  <h1>{data[i]?.type}</h1>\r\n                  <h2>\r\n                    {data[i]?.count} {data[i]?.type} trên trang chúng tôi\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyList;\r\n","import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { Link } from \"react-router-dom\";\r\nimport './recentSeenHotel.css'\r\n\r\nconst RecentSeenHotel = () => {\r\n  const [mostViewedCity, setMostViewedCity] = useState('');\r\n  const { data: allHotelData, loading, error, reFetch } = useFetch(\r\n    `/hotels`\r\n  );\r\n  const { data: suggestedHotel, loadingSuggestedHotel, errorSuggestedHotel, reFetchSuggestedHotel } = useFetch(\r\n    `/hotels?city=${mostViewedCity}`\r\n  );\r\n  const [recentHotelIds, setRecentHotelIds] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    if(!loading){ // Ensure data is loaded\r\n      console.log(allHotelData)\r\n    // tính toán từ localStorage xem city nào đc xem nhiều nhất gần đây\r\n    //Lấy danh sách ID khách sạn đã xem từ localStorage\r\n    const idHotelSeenString = localStorage.getItem('idHotelSeen');\r\n    const idHotelSeen = idHotelSeenString ? JSON.parse(idHotelSeenString) : [];\r\n    // nếu người dùng chưa xem ks nào (lần đầu vào localStorage rỗng => để mặc định HN)\r\n    if (idHotelSeen.length == 0) {\r\n      setMostViewedCity(\"Hà Nội\")\r\n    } else {\r\n      setRecentHotelIds(idHotelSeen)\r\n      // console.log(idHotelSeen)\r\n      //Tạo một đối tượng để đếm số lần xuất hiện của mỗi thành phố\r\n      const cityCount = {};\r\n      for (let i = 0; i < idHotelSeen.length; i++) {\r\n        const id = idHotelSeen[i];\r\n        const hotel = allHotelData.find(hotel => hotel._id == id);\r\n        if (hotel) {\r\n          cityCount[hotel.city] = (cityCount[hotel.city] || 0) + 1;\r\n        }\r\n      }\r\n      \r\n      console.log(cityCount)\r\n      // Tìm thành phố có số lần xuất hiện nhiều nhất\r\n      let maxCount = 0;\r\n      let mostViewedCity = '';\r\n      for (const city in cityCount) {\r\n        if (cityCount[city] > maxCount) {\r\n          maxCount = cityCount[city];\r\n          mostViewedCity = city;\r\n        }\r\n      }\r\n      setMostViewedCity(mostViewedCity)\r\n    }\r\n  }\r\n\r\n  }, [loading]);\r\n  // console.log(\"mostviewcity\"+mostViewedCity)\r\n  console.log(mostViewedCity)\r\n  // console.log(suggestedHotel)\r\n\r\n  // chỉ lấy những khách sạn mà người dùng chưa xem gần đây- id khách sạn ko có trg local storage + lấy tối đa 3 ks để hiển thị\r\n  // console.log(suggestedHotel)\r\n  const filteredHotels = suggestedHotel.filter(item =>\r\n    !recentHotelIds.includes(item._id) && item.cheapestPrice?.price !== 0 && item.cheapestPrice?.price !== undefined && item.city ==mostViewedCity\r\n\r\n  );\r\n  // console.log(filteredHotels)\r\n  const limitedSuggestedHotels = filteredHotels.length > 3 ? filteredHotels.slice(0, 3) : filteredHotels;\r\n\r\n  return (\r\n    <div className=\"recentHotelContainer\">\r\n      <h1 style={{fontSize:'20px', }}>Các chỗ nghỉ ở {mostViewedCity}</h1>\r\n      {loading || !mostViewedCity ? (\r\n        \"Loading\"\r\n      ) : (\r\n        <div className=\"fp\">\r\n          {limitedSuggestedHotels\r\n            .map((item, index) => (\r\n              <div className=\"fpItem\" key={item._id}>\r\n                <Link to={`hotels/${item._id}`}>\r\n                  <img src={item.photos[0]} alt=\"\" className=\"fpImg\" />\r\n                </Link>\r\n                <span className=\"fpName\">{item.name}</span>\r\n                <span className=\"fpCity\">{item.city}</span>\r\n                <span className=\"fpPrice\">Giá chỉ từ  {Intl.NumberFormat('vi-VN').format(item.cheapestPrice.price * 1000)} VND cho 1 phòng mỗi đêm</span>\r\n\r\n                {item.rating && <div className=\"fpRating\">\r\n                  {/* <button>{item.rating}</button> */}\r\n                </div>}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecentSeenHotel\r\n","import \"./footer.css\";\r\nimport React from \"react\";\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n\r\n\r\n      <div className=\"footerContainer\">\r\n        <div className=\"fLists\">\r\n          <ul className=\"fList\">\r\n            <li className=\"fListItem\">Theo dõi chúng tôi trên </li>\r\n            <li className=\"fListItem\">Facebook </li>\r\n            <li className=\"fListItem\">Youtube </li>\r\n            <li className=\"fListItem\">Instagram</li>\r\n            <li className=\"fListItem\">Telegram</li>\r\n\r\n          </ul>\r\n          <ul className=\"fList\">\r\n            <li className=\"fListItem\">Đặt phòng khách sạn: 0938473948 </li>\r\n            <li className=\"fListItem\">Tư vấn đặt phòng: 0847583758</li>\r\n            <li className=\"fListItem\">Tổng đài hỗ trợ: 3849573293 </li>\r\n            <li className=\"fListItem\">Địa điểm trụ sở: 374 đường ABC, Hai Bà Trưng, Hà Nội</li>\r\n            {/* <li className=\"fListItem\">Seasonal and holiday deals </li> */}\r\n          </ul>\r\n          <ul className=\"fList\">\r\n            <li className=\"fListItem\">Chính sách và quy định </li>\r\n            <li className=\"fListItem\">Quyền riêng tư</li>\r\n            <li className=\"fListItem\">Điều khoản, điều kiện </li>\r\n            <li className=\"fListItem\">Quy chế hoạt động</li>\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Header from \"../../../components/header/Header\";\r\nimport Navbar from \"../../../components/navbar/Navbar\";\r\nimport Featured from \"../../../components/featured/Featured\";\r\nimport \"./home.css\";\r\nimport PropertyList from \"../../../components/propertyList/PropertyList\";\r\nimport RecentSeenHotel from \"../../../components/recentSeenHotel/RecentSeenHotel\";\r\nimport MailList from \"../../../components/MailList/MailList\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Navbar></Navbar>\r\n      <Header></Header>\r\n      <div className=\"homeContainer\">\r\n        {/* phân loại khách sạn theo địa điểm FEATURED */} \r\n        <h1 className=\"homeTitle\">Nơi có nhiều chỗ nghỉ</h1>\r\n        <Featured />\r\n\r\n        {/* <h1 className=\"homeTitle\">Các chỗ nghỉ ở địa điểm người dùng vừa tìm gần đây</h1> */}\r\n        <RecentSeenHotel />\r\n        \r\n        {/* phân loại các khách sạn theo loai như hotel, homestay */}\r\n          <h1 className=\"homeTitle\">Theo loại chỗ nghỉ</h1>\r\n          <PropertyList />\r\n\r\n          {/* phần thanh gửi mail */}\r\n          {/* <MailList /> */}\r\n          <Footer />\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./searchItem.css\";\r\nimport React from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport { useState, useContext } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { getDatesInRange } from \"../../function\"\r\n// nhung HOTEL hien tren thanh search\r\nconst SearchItem = ({ item }) => {\r\n  const { dates, options } = useContext(SearchContext);\r\n  const [roomInSearchItem, setroomInSearchItem] = useState(1);\r\n  // lấy ra các loại phòng của hotel này\r\n  const { data: allTypeRoom, loading, error, reFetch } = useFetch(`/rooms/${item._id}/?status=true`);\r\n  // console.log(allTypeRoom)\r\n  const MILLISECONDS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  function dayDifference(date1, date2) {\r\n    const timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n    const diffDays = Math.ceil(timeDiff / MILLISECONDS_PER_DAY);\r\n    return diffDays;\r\n  }\r\n\r\n  // tính toán để hiển thị giá và option theo lựa chọn người dùng - theo phòng rẻ nhất của hotel đấy\r\n  const days = dayDifference(dates[0].endDate, dates[0].startDate);\r\n  const calculatePrice = (cheapestPrice) => {\r\n    let totalPrice = 0;\r\n    let totalPeople = parseInt(options.adult, 10) + parseFloat(options.children) * 0.5; // trẻ em tính 0.5\r\n    // nếu người dùng có lựa chọn số phòng , totalPeople / cheapestPrice.people để tính số phòng có thể chứa đc totalPeople.\r\n    // Math floor làm tròn xuống số nguyên gần nhất 1.2 =>1\r\n    if (options.room > Math.floor(totalPeople / cheapestPrice.people)) {\r\n      totalPrice = cheapestPrice.price * options.room * days;\r\n    } else\r\n      // nếu số người người dùng chọn ít hơn so với sức chứa của phòng rẻ nhất (VD: chọn 1 người mà phòng rẻ nhất hotel đó chứa 2 người)\r\n      if (Math.floor(totalPeople / cheapestPrice.people) == 0) {\r\n        totalPrice = cheapestPrice.price * days;\r\n      } else {\r\n        totalPrice = cheapestPrice.price * Math.floor(totalPeople / cheapestPrice.people) * days;\r\n      }\r\n    // nhân 1000 chỉ là để hiển thị, còn lọc giá ở trang list ko nhân 1000\r\n    return Intl.NumberFormat('vi-VN').format(totalPrice * 1000)\r\n\r\n  };\r\n\r\n  const calculateRoom = (cheapestPrice) => {\r\n    let totalPeople = parseInt(options.adult, 10) + parseFloat(options.children) * 0.5;\r\n    // nếu số phòng người dùng chọn nhiều hơn phòng có thể chứa totalPeople thì tính theo options.room đó\r\n    if (options.room > Math.floor(totalPeople / cheapestPrice.people)) return options.room\r\n    // tính số phòng theo Math.floor(totalPeople / cheapestPrice.people)\r\n    else {\r\n      // VD:11/5=2\r\n      return Math.floor(totalPeople / cheapestPrice.people)\r\n    }\r\n  };\r\n\r\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n  const isAvailable = (roomNumber, dateToCheck) => {\r\n    // if (!roomNumber.status) {\r\n    //   return false; // Nếu status là false, room không khả dụng\r\n    // }\r\n    const isFound = roomNumber.unavailableDates.some((date) => {\r\n      const dateMinusOneDay = new Date(date).getTime(); // theem getTIme() hay ko cung v\r\n      // console.log(new Date(dateMinusOneDay));\r\n      return dateToCheck == dateMinusOneDay;\r\n    });\r\n\r\n    return !isFound;\r\n  };\r\n  // console.log(alldates)\r\n  // tính tổng phòng available của mỗi loại phòng\r\n  const calculateAvailableRoomsEveryTypeRoom = (roomNumbers) => {\r\n    let roomAvailable = 999;\r\n    for (let date of alldates) {\r\n      let dateAvailableCount = 0;\r\n      //Với mỗi date, duyệt qua các phần tử trong mảng roomNumbers\r\n      for (let roomNumber of roomNumbers) {\r\n        // Kiểm tra xem phòng đó có date hiện tại trống ko\r\n        if (isAvailable(roomNumber, date)) {\r\n          // có phòng thỏa mãn date hiện tại\r\n          dateAvailableCount++\r\n        }\r\n      };\r\n      // với mỗi date sau khi lặp hết các room nhỏ, cập nhật roomAvailable (roomAvailable sẽ là \r\n      // dateAvailableCount nhỏ nhất trong tất cả các date )\r\n      if (dateAvailableCount < roomAvailable) {\r\n        roomAvailable = dateAvailableCount\r\n      }\r\n     \r\n    }\r\n    return roomAvailable\r\n  }\r\n   // tính tổng phòng avalaible của hotel đó\r\n  const caculateTotalRoomsAvailable = () => {\r\n    let totalRooms = 0;\r\n    totalRooms = allTypeRoom.reduce((total, typeRoom) => {\r\n      // Với mỗi loại phòng tính toán số phòng available của loại phòng đó, truyền vào roomNumbers\r\n      const availableRooms = calculateAvailableRoomsEveryTypeRoom(typeRoom.roomNumbers)\r\n      // Thêm số lượng phòng từ typeRoom vào tổng số lượng phòng\r\n      return total + availableRooms;\r\n    }, 0);\r\n    return totalRooms\r\n  }\r\n  // tính tổng phòng avalaible của hotel đó\r\n  const totalRooms = caculateTotalRoomsAvailable()\r\n  // nếu hết phòng thì ko hiện hotel đó\r\n  if (totalRooms === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"searchItem\">\r\n      <img src={item.photos[0]} alt=\"\" className=\"siImg\" />\r\n\r\n      <div className=\"siDesc\">\r\n        <h1 className=\"siTitle\">{item.name}</h1>\r\n        <span className=\"siDistance\">Khoảng cách: {item.distance}m từ trung tâm</span>\r\n        { totalRooms == 0 ? (\r\n          <span className=\"siRoomLeft\">Hết phòng!</span>\r\n        ) : (\r\n          totalRooms && (totalRooms < 6 || totalRooms < calculateRoom(item.cheapestPrice)) && (\r\n            <span className=\"siRoomLeft\">Chỉ còn {totalRooms} phòng!</span>\r\n          )\r\n        )}\r\n        {/* <span className=\"siFeatures\">{item.desc}</span> */}\r\n        {/* <span className=\"siCancelOp\">Free cancellation </span>\r\n        <span className=\"siCancelOpSubtitle\">\r\n          You can cancel later, so lock in this great price today!\r\n        </span> */}\r\n        <span className=\"siFeatures\">Địa chỉ: {item.address}</span>\r\n        <span className=\"siFacilities\">\r\n          {item.facilities?.map((facility, index) => (\r\n            <div className=\"siFacilities_item\" style={{ width: '30%' }} key={index}>\r\n              {facility}\r\n            </div>\r\n          ))}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"siDetails\">\r\n        {/* {item.rating && <div className=\"siRating\">\r\n          <span>Excellent</span>\r\n          <button>{item.rating}</button>\r\n        </div>} */}\r\n\r\n        <div className=\"siDetailTexts\">\r\n          <span className=\"siPrice\">Giá từ: {calculatePrice(item.cheapestPrice)} VND</span>\r\n          <span className=\"siTaxOp\">Cho {options.adult} người, {options.children > 0 && `, ${options.children} trẻ em`}, {calculateRoom(item.cheapestPrice)} phòng, {days} đêm</span>\r\n          {/* chuyen sang xem thong tin tung hotel */}\r\n\r\n          <Link to={`/hotels/${item._id}`}>\r\n            <button className=\"siCheckButton\">Xem chỗ trống</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchItem;\r\n","export const  getDatesInRange = (startDate, endDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    const date = new Date(start.getTime());\r\n    const dates = [];\r\n    while (date < end) {\r\n      dates.push(new Date(date).getTime());\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n    return dates; // trả về dạng timeStamp - getTime()\r\n  };","export const hotelInputs = [\r\n    {\r\n      id: \"name\",\r\n      label: \"Tên của\",\r\n      type: \"text\",\r\n      placeholder: \"\",\r\n    },\r\n    // {\r\n    //   id: \"type\",\r\n    //   label: \"Type\",\r\n    //   type: \"text\",\r\n    //   placeholder: \"\",\r\n    // },\r\n    {\r\n      id: \"city\",\r\n      label: \"Tỉnh thành\",\r\n      type: \"text\",\r\n      placeholder: `(Hãy viết đúng chính tả để người dùng có thể tìm được chỗ nghỉ của bạn. VD: \"Hà Nội\", \"Hồ Chí Minh\"`,\r\n    },\r\n    {\r\n      id: \"address\",\r\n      label: \"Địa chỉ của\",\r\n      type: \"text\",\r\n      placeholder: \"\",\r\n    },\r\n    {\r\n      id: \"distance\",\r\n      label: \"Khoảng cách từ trung tâm đến(m)\",\r\n      type: \"number\",\r\n      placeholder: \"\",\r\n    },\r\n    {\r\n      id: \"hotelContact\",\r\n      label: \"Số điện thoại liên lạc của \",\r\n      type: \"number\",\r\n      placeholder: \"Số điện thoại để khách có thể gọi cho bạn sau khi đặt phòng thành công\",\r\n    },\r\n    // {\r\n    //   id: \"desc\",\r\n    //   label: \"Description\",\r\n    //   type: \"text\",\r\n    //   placeholder: \"description\",\r\n    // },\r\n \r\n  ];\r\n\r\n  export const roomInputs = [\r\n    {\r\n      id: \"title\",\r\n      label: \"Tên loại phòng (hay loại căn hộ, biệt thự,...) của bạn\",\r\n      type: \"text\",\r\n      placeholder: \"VD: Phòng Deluxe giường đôi, Căn hộ 2 ngủ,...\",\r\n    },\r\n    {\r\n      id: \"maxPeople\",\r\n      label: \"Số người\",\r\n      type: \"number\",\r\n      placeholder: \"Số người cho loại phòng (hay loại căn hộ, biệt thự,...) này\",\r\n    },\r\n    {\r\n      id: \"price\",\r\n      label: \"Giá mỗi đêm (Đơn vị: nghìn đồng. Ví dụ giá 250.000 VND thì hãy ghi 250)\",\r\n      type: \"number\",\r\n      placeholder: \"\",\r\n    },\r\n    {\r\n      id: \"roomNumbers\",\r\n      label: \"Số lượng\",\r\n      type: \"number\",\r\n      placeholder: \"Số lượng phòng (hay căn hộ, biệt thự,...) bạn muốn bán cho loại phòng (hay loại căn hộ, biệt thự,...) này\",\r\n    },\r\n    \r\n    // {\r\n    //   id: \"desc\",\r\n    //   label: \"Description\",\r\n    //   type: \"text\",\r\n    //   placeholder: \"description\",\r\n    // },\r\n \r\n  ];\r\n\r\n  export const hotelFacilities = \r\n  [\r\n    \"Free Wifi\",\r\n    \"Chỗ đậu xe\",\r\n    \"Miễn phí ăn sáng\",\r\n    \"Bể bơi\",\r\n    \"Phòng tập Gym\",\r\n    \"Spa\"\r\n  ]","import \"./list.css\";\r\nimport React from \"react\";\r\nimport Navbar from \"../../../components/navbar/Navbar\";\r\nimport Header from \"../../../components/header/Header\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport SearchItem from \"../../../components/searchItem/SearchItem\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { SearchContext } from \"../../../context/SearchContext\";\r\nimport { addDays, addHours } from 'date-fns';\r\nimport { listProvinces } from \"../../../listObject\";\r\nimport { hotelFacilities } from \"../../../formSource\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\nconst List = () => {\r\n  const timeZone = new Date().getTimezoneOffset() / 60  // độ lệch múi giờ so với UTC của máy hiện tại\r\n  const location = useLocation();\r\n  const searchContext = useContext(SearchContext);\r\n  const [destination, setDestination] = useState(searchContext.destination);\r\n  const [dates, setDates] = useState(searchContext.dates);\r\n  const [openDate, setOpenDate] = useState(false);\r\n  const [options, setOptions] = useState(searchContext.options);\r\n  const [suggestedDestination, setSuggestedDestination] = useState([]);\r\n  const [min, setMin] = useState(100);\r\n  const [max, setMax] = useState(100000);\r\n  const [type, setType] = useState(location.state?.typeFromPropertyList ?? \"\");\r\n  const [selectedFacilities, setSelectedFacilities] = useState([]);\r\n  const [sortOrder, setSortOrder] = useState('random');\r\n  // console.log(dates)\r\n  const { data, loading, error, reFetch } = useFetch(\r\n    `/hotels?city=${destination}&type=${type}`\r\n  );\r\n  const { dispatch } = useContext(SearchContext);\r\n  // checkbox facilities\r\n  const handleCheckboxChange = (facility) => {\r\n    setSelectedFacilities((prevSelected) => {\r\n      // nếu người dùng tích cái đã có - tức bỏ nó đi thì bỏ nó khỏi mảng\r\n      if (prevSelected.includes(facility)) {\r\n        return prevSelected.filter((item) => item !== facility);\r\n      } else {\r\n        return [...prevSelected, facility];\r\n      }\r\n    });\r\n  };\r\n  // console.log(selectedFacilities)\r\n  // gợi ý tìm kiếm\r\n  const handleDestinationChange = (e) => {\r\n    setDestination(e.target.value);\r\n    if (e.target.value) {\r\n      const filteredSuggestions = listProvinces.filter(province =>\r\n        province.name.toLowerCase().startsWith(e.target.value.toLowerCase())\r\n      ).map(province => province.name);\r\n      setSuggestedDestination(filteredSuggestions);\r\n    } else {\r\n      setSuggestedDestination([]);\r\n    }\r\n  };\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setDestination(suggestion);\r\n    setSuggestedDestination([]);\r\n  };\r\n\r\n  // loại chỗ nghỉ\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n  const handleClick = () => {\r\n    reFetch();\r\n    dispatch({ type: \"NEW_SEARCH\", payload: { destination, dates, options } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Updated changes:\", dates);\r\n    dispatch({ type: \"NEW_SEARCH\", payload: { destination, dates, options } });\r\n  }, [destination, dates, options]);\r\n\r\n\r\n  const handleDayChange = (item) => {\r\n    const utc = new Date().getTimezoneOffset() / 60 //-7\r\n    const newSelection = { ...item.selection };\r\n    let { startDate, endDate } = newSelection;\r\n    if (startDate === endDate) {\r\n      // nếu người dùng chỉ chọn 1 ngày\r\n      endDate = addDays(new Date(startDate), 1);\r\n    }\r\n    // 14+ getTimezoneOffset Múi giờ lệch ở khách sạn mà nó đặt -dùng addHours\r\n    startDate = addHours(startDate, 7 - utc);\r\n    endDate = addHours(endDate, 7 - utc);\r\n    setDates([{ ...newSelection, startDate, endDate }]);\r\n  };\r\n\r\n  const handleOptionChange = (e, optionName) => {\r\n    const value = e.target.value;\r\n    setOptions(prevOptions => ({\r\n      ...prevOptions,\r\n      [optionName]: value\r\n    }));\r\n  };\r\n\r\n  const MILLISECONDS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  function dayDifference(date1, date2) {\r\n    const timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n    const diffDays = Math.ceil(timeDiff / MILLISECONDS_PER_DAY);\r\n    return diffDays;\r\n  }\r\n  const days = dayDifference(dates[0].endDate, dates[0].startDate);\r\n\r\n  // tính giá hiển thị theo phòng rẻ nhất của ks và lựa chọn của người dùng, ko hiện những phòng chưa có phòng- phép chia cho 0-cheapestPrice.people\r\n  const calculatePrice = (cheapestPrice) => {\r\n    let totalPrice = 0;\r\n    let totalPeople = parseInt(options.adult, 10) + parseFloat(options.children) * 0.5;\r\n\r\n    // nếu số lượng phòng ng dùng chọn đã >= \r\n    if (options.room > Math.floor(totalPeople / cheapestPrice.people)) {\r\n      totalPrice = cheapestPrice.price * options.room * days;\r\n    } else\r\n      // console.log(totalPeople)\r\n      // nếu số người =1 hoặc quá ít 1/2=0\r\n      if (Math.floor(totalPeople / cheapestPrice.people) == 0) {\r\n        totalPrice = cheapestPrice.price * days;\r\n      } else {\r\n        //new Intl.NumberFormat('vi-VN').format(params.value*1000)\r\n        totalPrice = cheapestPrice.price * Math.floor(totalPeople / cheapestPrice.people) * days;\r\n      }\r\n    return totalPrice\r\n  };\r\n\r\n  // sort giá\r\n  const handleSortChange = (event) => {\r\n    setSortOrder(event.target.value); // Cập nhật state khi người dùng thay đổi cách sắp xếp\r\n  };\r\n\r\n  const renderSearchItem = () => {\r\n    const filteredData = data\r\n      // sắp xếp theo giá\r\n      .sort((a, b) => {\r\n        const priceA = calculatePrice(a.cheapestPrice);\r\n        const priceB = calculatePrice(b.cheapestPrice);\r\n        if (sortOrder === 'asc') {\r\n          return priceA - priceB;\r\n        } else if (sortOrder === 'desc') {\r\n          return priceB - priceA;\r\n        } else if (sortOrder === 'random') {\r\n          // nếu người dùng ko sort theo giá thì sẽ sort theo tổng số lượng phòng (nếu options.room>4 còn ko thì random)\r\n          if (options.room > 4) {\r\n            return b.totalRooms - a.totalRooms;\r\n          }\r\n          return Math.random() - 0.5;\r\n        }\r\n      })\r\n      // lấy ra các phần tử trong khoảng giá - calculatePrice là tính giá theo option người dùng như ngày, số phòng...\r\n      // lấy theo giá phòng rẻ nhất của chỗ nghỉ đó\r\n      .filter((item) => calculatePrice(item.cheapestPrice) >= min && calculatePrice(item.cheapestPrice) <= max)\r\n      // lọc theo cơ sở vật chất\r\n      .filter(hotel => {\r\n        // trả về true nếu tất cả phần tử thỏa mãn - lấy ra các phần tử có facility người dùng tích\r\n        return selectedFacilities.every(facility => hotel.facilities?.includes(facility));\r\n      });\r\n\r\n    if (filteredData.length === 0) {\r\n      return <p>Không có chỗ nghỉ thỏa mãn yêu cầu của bạn.</p>;\r\n    }\r\n    return filteredData.map((item) => (\r\n      <SearchItem item={item} key={item._id} />\r\n    ));\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Header type=\"list\" />\r\n      <div className=\"listContainer\">\r\n        <div className=\"listWrapper\">\r\n          <div className=\"listSearch\">\r\n            <h1 className=\"lsTitle\">Tìm kiếm</h1>\r\n            <div className=\"lsItem\">\r\n              <label>Địa điểm</label>\r\n              <input placeholder={destination} value={destination} onChange={handleDestinationChange} type=\"text\" />\r\n              {suggestedDestination.length > 0 && (\r\n                // style inline để đè 1 số cái khác so với header, css còn lại ở header.css\r\n                <div className=\"suggestionDestination\" style={{ width: '94%' }}>\r\n                  <div className=\"suggestionsList\">\r\n                    {suggestedDestination.map((suggestion, index) => (\r\n                      <div\r\n                        key={index}\r\n                        style={{  }}\r\n                        onClick={() => handleSuggestionClick(suggestion)}\r\n                      >\r\n                        {suggestion}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"lsItem\">\r\n              <label>Check-in</label>\r\n              <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n                dates[0].startDate,\r\n                \"dd/MM/yyyy\"\r\n              )} đến ${format(dates[0].endDate, \"dd/MM/yyyy\")}`}</span>\r\n              {openDate && (\r\n                <DateRange\r\n                  onChange={(item) => handleDayChange(item)}\r\n                  moveRangeOnFirstSelection={true}\r\n                  minDate={addHours(new Date(),10+(-7-timeZone))} // ngày tối thiểu đc chọn, \r\n                  maxDate={addDays(new Date(),365)}\r\n                  ranges={dates}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* CHon loai cho nghi */}\r\n            <div className=\"lsItem\">\r\n              <label>Chọn loại chỗ nghỉ</label>\r\n              <select style={{ height: '25px' }}\r\n                id='type'\r\n                onChange={handleChangeType}\r\n                value={type}\r\n              >\r\n                <option value=\"\">Tất cả</option> {/* Option mặc định */}\r\n                <option value=\"Khách sạn\">Khách sạn</option> {/* Các option của dropdown */}\r\n                <option value=\"Căn hộ\">Căn hộ</option>\r\n                <option value=\"Biệt thự\">Biệt thự</option> {/* Các option của dropdown */}\r\n                <option value=\"Resort\">Resort</option>\r\n                <option value=\"Nhà nghỉ\">Nhà nghỉ</option>\r\n              </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"lsItem\">\r\n              {/*  chinh gia tien */}\r\n              <label>Khoảng giá (theo giá loại phòng rẻ nhất của chỗ nghỉ) </label>\r\n              <div className=\"lsOptions\">\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">\r\n                    Từ <small></small>\r\n                  </span>\r\n\r\n                  <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                    <div>({Intl.NumberFormat('vi-VN').format(min * 1000)} VND)</div>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      value={min}\r\n                      onChange={(e) => {\r\n                        const value = Math.max(0, e.target.value);\r\n                        setMin(value);\r\n                      }}\r\n                      className=\"lsOptionInput\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">\r\n                    Đến <small></small>\r\n                  </span>\r\n                  <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '10px' }}>\r\n                    <div>({Intl.NumberFormat('vi-VN').format(max * 1000)} VND)</div>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={max}\r\n                      min=\"0\"\r\n                      onChange={(e) => setMax(e.target.value)}\r\n                      className=\"lsOptionInput\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            {/* đang css tạm */}\r\n            <div style={{ marginTop: '-15px' }} className=\"lsItem\">\r\n              {/*  chinh gia tien */}\r\n              <label>Lựa chọn </label>\r\n              <div className=\"lsOptions\">\r\n                <div className=\"lsOptionItem\">\r\n\r\n                  <span className=\"lsOptionText\">Người lớn</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={options.adult}\r\n                    onChange={(e) => handleOptionChange(e, 'adult')}\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Trẻ em</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={options.children}\r\n                    onChange={(e) => handleOptionChange(e, 'children')}\r\n\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Phòng</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={options.room}\r\n                    onChange={(e) => handleOptionChange(e, 'room')}\r\n\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"lsItem\">\r\n              <label>Cơ sở vật chất chỗ nghỉ</label>\r\n              {hotelFacilities.map((facility) => (\r\n                <div className=\"lsItem_hotelFacilities\" key={facility}>\r\n                  <label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={facility}\r\n                      onChange={() => handleCheckboxChange(facility)}\r\n                      checked={selectedFacilities?.includes(facility)}\r\n                    />\r\n                    {facility}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button onClick={handleClick}>Tìm kiếm</button>\r\n          </div>\r\n          <div className=\"listResult\">\r\n            {/* dropdown sort theo giá */}\r\n            <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n              <label>\r\n                Sắp xếp theo giá:&nbsp;\r\n                <select value={sortOrder} onChange={handleSortChange}>\r\n                <option value=\"random\">Ngẫu nhiên</option>\r\n                  <option value=\"asc\">Thấp đến cao</option>\r\n                  <option value=\"desc\">Cao đến thấp</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n\r\n            {loading ? (\r\n              \"loading\"\r\n            ) : (\r\n              <>\r\n\r\n                {renderSearchItem()}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\nexport default List;","import React from 'react'\r\nimport axios from \"axios\";\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport \"./listRoomClient.css\"\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { SearchContext } from '../../context/SearchContext';\r\nimport { format, addDays, subDays, addHours } from \"date-fns\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport {\r\n  faBed,\r\n  faCalendarDays,\r\n  faPerson,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faCircleArrowLeft,\r\n  faCircleArrowRight,\r\n  faCircleXmark,\r\n  faLocationDot,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst ListRoomClient = ({ hotelId, hotelType }) => {\r\n  const timeZone = new Date().getTimezoneOffset() / 60  // độ lệch múi giờ so với UTC của máy hiện tại\r\n  // các room type đang hoạt động của chỗ nghỉ hiện tại\r\n  const { data, loading, error, reFetch } = useFetch(`/rooms/${hotelId}/?status=true`);\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n  const searchContext = useContext(SearchContext);\r\n  const [dates, setDates] = useState(searchContext.dates);\r\n  // dates[0].startDate.setHours(14, 0, 0, 0);\r\n  // dates[0].endDate.setHours(14, 0, 0, 0);\r\n  const [options, setOptions] = useState(searchContext.options);\r\n  const [destination, setDestination] = useState(searchContext.destination);\r\n  const [openDate, setOpenDate] = useState(false);\r\n  // const [expandedPhotoIndex, setExpandedPhotoIndex] = useState(null); // State để lưu index của ảnh đang được phóng to\r\n  const [openExpandPhoto, setOpenExpandPhoto] = useState(false);\r\n  const [slideNumber, setSlideNumber] = useState(0);\r\n  const [indexItem, setIndexItem] = useState(0);\r\n  const { dispatch } = useContext(SearchContext);\r\n  const [selectedRoomIds, setSelectedRoomIds] = useState([]);\r\n  const [key, setKey] = useState(Math.random());\r\n  const selectedRoomDetais = [];\r\n  const { user } = useContext(AuthContext)\r\n  // gía tổng hóa đơn tạm thời\r\n  const [totalPriceReservation, setTotalPriceReservation] = useState(0);\r\n  // console.log(dates)\r\n  // var totalRoomQuantitySelected = 0;\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"NEW_SEARCH\", payload: { destination, dates, options } });\r\n  }, [destination, dates, options]);\r\n\r\n  // console.log(dates)\r\n  const handleOpen = (i, indexItem) => {\r\n    setSlideNumber(i);       // set vị trí ảnh trong mảng data[index].photos\r\n    setIndexItem(indexItem)  // set vị trí phần tử data (tức từng roomType mà người dùng click vào)\r\n    setOpenExpandPhoto(true); // để mở slider ảnh phóng to\r\n  };\r\n\r\n  const handleMove = (direction, item) => { // item chính là data[index], là thông tin room-room chứa ảnh người dùng c\r\n    let newSlideNumber;\r\n\r\n    if (direction === \"l\") {\r\n      newSlideNumber = slideNumber === 0 ? (item.photos.length - 1) : slideNumber - 1;\r\n    } else {\r\n      newSlideNumber = slideNumber === (item.photos.length - 1) ? 0 : slideNumber + 1;\r\n    }\r\n\r\n    setSlideNumber(newSlideNumber);\r\n  };\r\n  // const toggleExpandedPhoto = (index) => {\r\n  //   setExpandedPhotoIndex(index === expandedPhotoIndex ? null : index);\r\n  // };\r\n  // ng dùng thay đổi khoảng ngày\r\n  const handleDayChange = (item) => {\r\n    const utc = new Date().getTimezoneOffset() / 60 //-7\r\n    const newSelection = { ...item.selection };\r\n    let { startDate, endDate } = newSelection;\r\n    if (startDate === endDate) {\r\n      // nếu người dùng chỉ chọn 1 ngày\r\n      endDate = addDays(new Date(startDate), 1);\r\n    }\r\n    // 14+ getTimezoneOffset Múi giờ lệch ở khách sạn mà nó đặt \r\n    startDate = addHours(startDate, 7 - utc);\r\n    endDate = addHours(endDate, 7 - utc);\r\n    setDates([{ ...newSelection, startDate, endDate }]);\r\n    setSelectedRoomIds([])\r\n    setKey(Math.random()); // Bắt reload lại phần chọn phòng\r\n    setTotalPriceReservation(0)\r\n    reFetch()\r\n  };\r\n\r\n  const MILLISECONDS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  function dayDifference(date1, date2) {\r\n    const timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n    const diffDays = Math.ceil(timeDiff / MILLISECONDS_PER_DAY);\r\n    return diffDays;\r\n  }\r\n\r\n  const days = dayDifference(dates[0].endDate, dates[0].startDate);\r\n\r\n  const getDatesInRange = (startDate, endDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    const date = new Date(start.getTime());\r\n    const dates = [];\r\n    while (date < end) {\r\n      dates.push(new Date(date).getTime());\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n    return dates;\r\n  };\r\n\r\n  // lựa chọn của khach\r\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n  // alldates.forEach(timestamp => {\r\n  //   const date = new Date(timestamp);\r\n  //   console.log(date.toLocaleDateString());\r\n  // });\r\n\r\n  const isAvailable = (roomNumber, dateToCheck) => {\r\n    // if (!roomNumber.status) {\r\n    //   return false; // Nếu status là false, room không khả dụng\r\n    // }\r\n    const isFound = roomNumber.unavailableDates.some((date) => {\r\n      const dateMinusOneDay = new Date(date).getTime(); // theem getTIme() hay ko cung v\r\n      // console.log(new Date(dateMinusOneDay));\r\n      return dateToCheck == dateMinusOneDay;\r\n    });\r\n\r\n    return !isFound;\r\n  };\r\n\r\n  // thay đổi số lượng\r\n  const handleSelectChange = (event, roomNumbers) => {\r\n    let roomQuantitySelected = 0;\r\n    data.forEach((dataItem) => {\r\n      // Lấy giá trị được chọn từ <select> tương ứng với item hiện tại\r\n      const selectedValue = parseInt(document.getElementById(`select_${dataItem._id}`).value);\r\n      roomQuantitySelected = roomQuantitySelected + selectedValue;\r\n    });\r\n    // console.log(\"Tổng Số lượng phòng đã chọn:\", roomQuantitySelected);\r\n    const updatedSelectedRooms = selectedRoomIds;\r\n\r\n    let updatedSelectedRoomsCopy = [...updatedSelectedRooms];\r\n    // Duyệt qua mỗi phần tử trong mảng roomNumbers\r\n    roomNumbers.forEach(room => {\r\n      // Kiểm tra xem _id của phần tử hiện tại có tồn tại trong mảng updatedSelectedRooms không\r\n      const index = updatedSelectedRoomsCopy.findIndex(selectedRoom => selectedRoom === room._id);\r\n      // Nếu có tồn tại, loại bỏ phần tử đó khỏi mảng updatedSelectedRoomsCopy\r\n      if (index !== -1) {\r\n        updatedSelectedRoomsCopy.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    roomNumbers.forEach((roomNumber) => {\r\n      if (isAvailable(roomNumber) && updatedSelectedRoomsCopy.length < roomQuantitySelected) {\r\n        updatedSelectedRoomsCopy.push(roomNumber._id);\r\n      }\r\n    });\r\n\r\n    setSelectedRoomIds(updatedSelectedRoomsCopy);\r\n\r\n    // ghi tổng hóa đơn hiện tại\r\n    let totalPrice = 0;\r\n    updatedSelectedRoomsCopy.forEach(roomId => {\r\n      // với mỗi _id phòng nhỏ thì tìm typeRoom tương ứng\r\n      const room = data.find(room => room.roomNumbers.some(rn => rn._id == roomId));\r\n      if (room) {\r\n        totalPrice = totalPrice + room.price\r\n      }\r\n    });\r\n    // giá hóa đơn theo lựa chọn hiện tại ng dùng\r\n    totalPrice = totalPrice* alldates.length\r\n    setTotalPriceReservation(totalPrice)\r\n  };\r\n  // console.log(\"Giá hiện tại:\", totalPriceReservation * alldates.length);\r\n\r\n  // hàm nút đặt phòng\r\n  const reserveRoom = async () => {\r\n    //check xem đăng nhập chưa\r\n    if (!user.username) {\r\n      navigate(\"/login\")\r\n      return;\r\n    }\r\n\r\n    // Lặp qua từng item trong data-là list những loại phòng, lấy ra những loại phòng mà người dùng chọn\r\n    data.forEach((item) => {\r\n      const selectedValue = parseInt(document.getElementById(`select_${item._id}`).value);\r\n      // Kiểm tra nếu số lượng phòng đã chọn khác 0\r\n      if (selectedValue !== 0) {\r\n        // Thêm đối tượng vào mảng selectedRoomDetais, mảng này để sử dụng cho bên reserve\r\n        selectedRoomDetais.push({ roomTypeId: item._id, typeRoom: item.title, quantity: selectedValue });\r\n      }\r\n\r\n    });\r\n    // seletedRoomIdsReserved gồm roomtype id, roomtype name, quantity, còn selectedRoomIds gồm id những phòng nhỏ\r\n    if (selectedRoomIds.length > 0 && alldates.length >= 1) {\r\n      navigate(\"/reserve\", {\r\n        state: {\r\n          selectedRoomIds, alldates, hotelId, startDate: dates[0].startDate, endDate: dates[0].endDate,\r\n          seletedRoomIdsReserved: selectedRoomDetais\r\n        }\r\n      });\r\n      //seletedRoomIdsReserved là mảng để truyền vào reserve xử lý tìm id sau\r\n    } else {\r\n      toast.error('Bạn chưa chọn phòng muốn đặt hoặc ngày bạn chọn phải tối thiểu 1 đêm');\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"RoomClientContainer\">\r\n      {/* tieu de va thanh search ngay */}\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <h1>Bạn muốn đặt phòng?</h1>\r\n        {/* Hiển thị ngày */}\r\n        <div style={{ width: '30%' }} className=\"RoomClientContainer_searchDates\">\r\n          <FontAwesomeIcon icon={faCalendarDays} className=\"RoomClientContainer_icon\" />\r\n          <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n            dates[0].startDate,\r\n            \"dd/MM/yyyy\"\r\n          )} đến ${format(dates[0].endDate, \"dd/MM/yyyy\")}`}</span>\r\n          {openDate && (\r\n            <DateRange\r\n              onChange={(item) => handleDayChange(item)}\r\n              minDate={addHours(new Date(),10+(-7-timeZone))} // ngày tối thiểu đc chọn, \r\n              maxDate={addDays(new Date(),365)}\r\n              ranges={dates}\r\n              moveRangeOnFirstSelection={true}\r\n              editableDateInputs={true}\r\n              className=\"date\"\r\n            />\r\n\r\n          )}\r\n        </div>\r\n\r\n        {/* Hiện số người */}\r\n        <div ><FontAwesomeIcon icon={faPerson} className=\"RoomClientContainer_icon\" /> {options.adult} người lớn, {options.children} trẻ em</div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      {/* Phần đặt phòng gom nhieu flex_div */}\r\n      {data.map((item, index) => (\r\n        <div className=\"flex_div\" style={{ border: '1px solid #7fc7af' }}>\r\n\r\n          <div style={{ width: '50%' }} >\r\n            <div className=\"rTitle\">{item.title}</div>\r\n            <div className=\"rDesc\" >Số lượng người: {item.maxPeople}</div>\r\n            <div className=\"rMax\">{item.desc}</div>\r\n            <div className=\"rImages\">\r\n              {item.photos?.slice(0, 3).map((photo, i) => (\r\n                <div className=\"rImgWrapper\" key={i}>\r\n                  <img\r\n                    src={photo}\r\n                    alt=\"\"\r\n                    className=\"roomImg\"\r\n                    onClick={() => handleOpen(i, index)}\r\n                  />\r\n                  {i === 2 && item.photos.length > 3 && (\r\n                    <div style={{ fontStyle: 'italic' }}>\r\n                      (Còn {item.photos.length - 3} ảnh tiếp...)\r\n                    </div>\r\n                  )}\r\n                  {/* Kiểm tra nếu index của ảnh được click trùng với expandedPhotoIndex thì hiển thị ảnh phóng to */}\r\n                  {openExpandPhoto && (\r\n                    <div className=\"expandedPhotoWrapper\">\r\n                      {/* css dùng từ hotel */}\r\n                      <FontAwesomeIcon\r\n                        icon={faCircleXmark}\r\n                        className=\"close\"\r\n                        onClick={() => setOpenExpandPhoto(false)}\r\n                      />\r\n                      <FontAwesomeIcon\r\n                        icon={faCircleArrowLeft}\r\n                        className=\"arrow\"\r\n                        onClick={() => handleMove(\"l\", data[indexItem])}\r\n                      />\r\n                      {/* hiển thị ảnh phóng to */}\r\n                      <div className=\"sliderWrapper\">\r\n                        <img\r\n                          src={data[indexItem].photos[slideNumber]}\r\n                          alt=\"\"\r\n                          className=\"sliderImg\"\r\n                        />\r\n                      </div>\r\n                      <FontAwesomeIcon\r\n                        icon={faCircleArrowRight}\r\n                        className=\"arrow\"\r\n                        onClick={() => handleMove(\"r\", data[indexItem])}\r\n                      />\r\n\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/*  hiện giá */}\r\n          <div>\r\n            Giá: {new Intl.NumberFormat('vi-VN').format(item.price * 1000)} VND\r\n            <br />\r\n            (Mỗi đêm)\r\n          </div>\r\n          {/* chứa chỗ chọn phòng */}\r\n          <div key={key} style={{ marginBottom: '10px', display: 'flex', justifyContent: 'flex-end', width: '20%', alignItems: 'center', gap: '10px' }}>\r\n\r\n            <select style={{ height: '20px' }} id={`select_${item._id}`} onChange={(event) => handleSelectChange(event, item.roomNumbers)}>\r\n\r\n              {/* <option id={`defaultOption_${item._id}`} value={0}>0 phòng</option> */}\r\n              {(() => {\r\n                let roomAvailable = 999;\r\n                for (let date of alldates) {\r\n                  let dateAvailableCount = 0;\r\n                  //Với mỗi date, duyệt qua các phần tử trong mảng roomNumbers\r\n                  for (let roomNumber of item.roomNumbers) {\r\n                    // Kiểm tra xem phòng đó có date hiện tại trống ko\r\n                    if (isAvailable(roomNumber, date)) {\r\n                      // có phòng thỏa mãn date hiện tại\r\n                      dateAvailableCount++\r\n                    }\r\n                  };\r\n                  // với mỗi date sau khi lặp hết các room nhỏ, cập nhật roomAvailable (roomAvailable sẽ là \r\n                  // dateAvailableCount nhỏ nhất trong tất cả các date )\r\n                  if (dateAvailableCount < roomAvailable) {\r\n                    roomAvailable = dateAvailableCount\r\n                  }\r\n\r\n                }\r\n                const maxOptions = 10; // Số lượng phòng tối đa sẽ hiện của thẻ option\r\n                const options = [];\r\n                //  ko còn phòng trống nào\r\n                if (roomAvailable === 0) {\r\n                  options.push(<option value={0}>Đã hết</option>);\r\n                } else {\r\n                  options.push(<option value={0}> 0 {hotelType === \"Khách sạn\"||hotelType === \"Nhà nghỉ\" ? \"phòng\" : hotelType.toLowerCase()}</option>);\r\n                  for (let i = 1; i <= roomAvailable; i++) {\r\n                    if (i > maxOptions) break;\r\n                    options.push(<option value={i}>{i} {hotelType === \"Khách sạn\" ||hotelType === \"Nhà nghỉ\" ? \"phòng\" : hotelType.toLowerCase()}</option>);\r\n                  }\r\n                }\r\n\r\n\r\n                return options;\r\n\r\n\r\n                // let roomIndex = 0; \r\n                // const maxOptions = 10; // Số lượng phòng tối đa sẽ hiện của thẻ option\r\n                // let optionsCount = 0; // Biến đếm số lượng option đã được thêm vào\r\n                // let hasAvailableRoom = false; // Biến kiểm tra xem có phòng nào thỏa mãn không\r\n                // const options= item.roomNumbers.map((roomNumber, index) => {\r\n                //   if (optionsCount >= maxOptions) return null; // Nếu đã thêm đủ số lượng tối đa option thì dừng\r\n                //   if (isAvailable(roomNumber)) {\r\n                //     roomIndex++; // Tăng giá trị biến đếm khi phòng thỏa mãn điều kiện\r\n                //     optionsCount++; \r\n                //     hasAvailableRoom = true;\r\n                //     return (\r\n                //       <option key={roomNumber._id} value={roomIndex}>\r\n                //         {`${roomIndex} phòng`}\r\n                //       </option>\r\n                //     );\r\n                //   }\r\n                //   return null;\r\n                // });\r\n\r\n                // if(hasAvailableRoom){\r\n                //   return (\r\n                //     <>\r\n                //       <option  value={0}>0 phòng</option>\r\n                //       {options}\r\n                //     </>\r\n                //   );\r\n                // } else{\r\n                //   // ko còn phòng nào\r\n                //   return (\r\n                //     <option  value={0}>Hết phòng</option>\r\n                //     );\r\n                // } \r\n\r\n              })\r\n                ()}\r\n            </select>\r\n\r\n            <div style={{ width: '30%', height: '100%', fontSize: '14px' }}>(Chọn số lượng muốn đặt)</div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      ))}\r\n\r\n      <h2>Bạn đã chọn {selectedRoomIds.length} phòng</h2>\r\n      {totalPriceReservation > 0 && (\r\n        <h2>Tổng giá: {new Intl.NumberFormat('vi-VN').format(totalPriceReservation * 1000)} VND</h2>\r\n      )}\r\n\r\n      <button onClick={reserveRoom} className=\"rButton\">\r\n        Đi đến trang đặt phòng\r\n      </button>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListRoomClient\r\n\r\n","import \"./hotel.css\";\r\nimport React, { useEffect } from 'react';\r\nimport Navbar from \"../../../components/navbar/Navbar\";\r\nimport Header from \"../../../components/header/Header\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\nimport MailList from \"../../../components/MailList/MailList\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCircleArrowLeft,\r\n  faCircleArrowRight,\r\n  faCircleXmark,\r\n  faLocationDot,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { SearchContext } from \"../../../context/SearchContext\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\n// import Reserve from \"../../../reserve/Reserve\";\r\nimport { format, } from \"date-fns\";\r\nimport ListRoomClient from \"../../../components/ListRoomClient/ListRoomClient\";\r\nimport {\r\n  faBed,\r\n  faCalendarDays,\r\n  faPerson,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n// PAGE THONG TIN TUNG HOTEL\r\nconst Hotel = () => {\r\n  const location = useLocation();\r\n  const id = location.pathname.split(\"/\")[2]; // lay hotel id\r\n  const [slideNumber, setSlideNumber] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  // lay thong tin cua hotel theo id hotel\r\n  const { data, loading, error } = useFetch(`/hotels/find/${id}`);\r\n  const { user } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  \r\n  // CONTEXT\r\n  const searchContext = useContext(SearchContext);\r\n  const { destination, dates, options } = useContext(SearchContext);\r\n  // console.log(searchContext)\r\n\r\n  // lưu id hotel đã xem vào localStorage\r\n  useEffect(() => {\r\n    // Lấy danh sách ID khách sạn đã xem từ localStorage\r\n    const idHotelSeenString = localStorage.getItem('idHotelSeen');\r\n    let idHotelSeen = idHotelSeenString ? JSON.parse(idHotelSeenString) : [];\r\n\r\n    // Kiểm tra nếu danh sách đã đạt đến 5 phần tử, xóa phần tử đầu tiên\r\n    if (idHotelSeen.length >= 3) {\r\n      idHotelSeen = idHotelSeen.slice(1);\r\n    }\r\n    // Kiểm tra xem ID của khách sạn hiện tại đã có trong danh sách hay chưa\r\n    if (!idHotelSeen.includes(id)) {\r\n      // Nếu chưa có, thêm ID mới vào danh sách\r\n      idHotelSeen.push(id);\r\n      // Lưu danh sách mới vào localStorage\r\n      localStorage.setItem('idHotelSeen', JSON.stringify(idHotelSeen));\r\n    }\r\n  }, []);\r\n  const MILLISECONDS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  function dayDifference(date1, date2) {\r\n    const timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n    const diffDays = Math.ceil(timeDiff / MILLISECONDS_PER_DAY);\r\n    return diffDays;\r\n  }\r\n\r\n  const days = dayDifference(dates[0].endDate, dates[0].startDate);\r\n  // console.log(data.cheapestPrice)\r\n  const handleOpen = (i) => {\r\n    setSlideNumber(i);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleMove = (direction) => {\r\n    let newSlideNumber;\r\n\r\n    if (direction === \"l\") {\r\n      newSlideNumber = slideNumber === 0 ? (data.photos.length - 1) : slideNumber - 1;\r\n    } else {\r\n      newSlideNumber = slideNumber === (data.photos.length - 1) ? 0 : slideNumber + 1;\r\n    }\r\n\r\n    setSlideNumber(newSlideNumber);\r\n    // console.log(newSlideNumber)\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (user) {\r\n      setOpenModal(true);\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Header type=\"list\" />\r\n\r\n      {/* phần hiển thị thông tin chọn từ trc */}\r\n      {/* <div className=\"headerSearchHotel\">\r\n              <div className=\"headerSearchItemHotel\">\r\n                <FontAwesomeIcon icon={faBed} className=\"headerIconHotel\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={destination}\r\n                  className=\"headerSearchInputHotel \"\r\n                />\r\n              </div>\r\n              <div className=\"headerSearchItemHotel\">\r\n                <FontAwesomeIcon icon={faCalendarDays} className=\"headerIconHotel\" />\r\n\r\n                <span className=\"headerSearchTextHotel\"\r\n                >{`${format(dates[0].startDate, \"MM/dd/yyyy\")} to ${format(\r\n                  dates[0].endDate,\r\n                  \"MM/dd/yyyy\"\r\n                )}`}</span>\r\n              </div>\r\n\r\n              <div className=\"headerSearchItemHotel\">\r\n                <FontAwesomeIcon icon={faPerson} className=\"headerIconHotel\" /> \r\n                <span\r\n                  className=\"headerSearchTextHotel\"\r\n                >{`${options.adult} adult · ${options.children} children · ${options.room} room`}</span> \r\n              </div>  \r\n    </div>  */}\r\n\r\n\r\n\r\n      {loading ? (\r\n        \"loading\"\r\n      ) : (\r\n        <div className=\"hotelContainer\">\r\n          {open && (\r\n            <div className=\"slider\">\r\n              <FontAwesomeIcon\r\n                icon={faCircleXmark}\r\n                className=\"close\"\r\n                onClick={() => setOpen(false)}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faCircleArrowLeft}\r\n                className=\"arrow\"\r\n                onClick={() => handleMove(\"l\")}\r\n              />\r\n              <div className=\"sliderWrapper\">\r\n                <img\r\n                  src={data.photos[slideNumber]}\r\n                  alt=\"\"\r\n                  className=\"sliderImg\"\r\n                />\r\n              </div>\r\n              <FontAwesomeIcon\r\n                icon={faCircleArrowRight}\r\n                className=\"arrow\"\r\n                onClick={() => handleMove(\"r\")}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"hotelWrapper\">\r\n            <h1 className=\"hotelTitle\">{data.name}</h1>\r\n            <div className=\"hotelAddress\">\r\n              <FontAwesomeIcon icon={faLocationDot} />\r\n              <span>{data.address}</span>\r\n            </div>\r\n            <span className=\"hotelDistance\">\r\n              Địa điểm tuyệt vời – {data.distance}m từ trung tâm\r\n            </span>\r\n            {/* <span className=\"hotelPriceHighlight\">\r\n              Book a stay over ${data.cheapestPrice} at this property and get a\r\n              free airport taxi\r\n            </span> */}\r\n            <div className=\"hotelImages\">\r\n              {data.photos?.map((photo, i) => (\r\n                // ảnh dài quá thì cho nhỏ lại tối đa chỉ 3 rows\r\n                // <div style={{ width: `${data.photos.length >= 9 ? (100 / Math.ceil(data.photos.length / 3)) + '%' : '33%'}` }} className=\"hotelImgWrapper\" key={i}>\r\n                <div style={{ width: `24%` }} className=\"hotelImgWrapper\" key={i}>\r\n\r\n                  <img\r\n                    onClick={() => handleOpen(i)}\r\n                    src={photo}\r\n                    alt=\"\"\r\n                    className=\"hotelImg\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"hotelDetails\">\r\n              <div className=\"hotelDetailsTexts\">\r\n                {/* <h1 className=\"hotelTitle\">sdf</h1> */}\r\n                <p className=\"hotelDesc\" style={{ whiteSpace: 'pre-line' }}>{data.desc}</p>\r\n\r\n                <div style={{fontWeight:'bold'}}>Cơ sở vật chất chỗ nghỉ</div>\r\n                <div className=\"hotelDetailsTexts_facilities\">\r\n                  {data.facilities?.map(facility =>\r\n                  (\r\n                    <div className=\"hotelDetailsTexts_facilities_item\" >{facility}</div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"hotelDetailsPrice\">\r\n                <span>\r\n                  Tọa lạc tại {data.address}, đây là một địa điểm tuyệt vời!\r\n                </span>\r\n\r\n                <div style={{ fontSize: '26px' }}>\r\n                  <b>Giá chỉ từ {Intl.NumberFormat('vi-VN').format(data.cheapestPrice?.price * 1000)} VND mỗi đêm</b>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ListRoomClient hotelId={id} hotelType={data.type} />\r\n\r\n          {/* <MailList /> */}\r\n          <Footer />\r\n        </div>\r\n      )}\r\n      {/* {openModal && <Reserve setOpen={setOpenModal} hotelId={id}/>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hotel;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: undefined,\r\n    password: undefined,\r\n  });\r\n\r\n  const { user, loading, error, dispatch } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate()\r\n  // khi thay doi field\r\n  const handleChange = (e) => {\r\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n  // submit\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"LOGIN_START\" });\r\n    try {\r\n      // console.log(credentials)\r\n      const res = await axios.post(\"/auth/login\", credentials);\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data }); // user trong AuthContext sẽ là JSON thông tin user (kq API return)\r\n      console.log(res.data.isAdmin)\r\n      if (res.data.isAdmin) {\r\n        console.log(\"den trang adminstrator\")\r\n        navigate(\"/administrator\")\r\n      } else navigate(\"/\")\r\n    } catch (err) {\r\n      dispatch({ type: \"LOGIN_FAILURE\", payload: err.response.data });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"lContainer\">\r\n        <h1 className=\"Login\">Đăng nhập</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Tên đăng nhập\"\r\n          id=\"username\"\r\n          onChange={handleChange}\r\n          className=\"lInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mật khẩu\"\r\n          id=\"password\"\r\n          onChange={handleChange}\r\n          className=\"lInput\"\r\n        />\r\n\r\n        {/* <label>\r\n            <input \r\n            type=\"checkbox\" \r\n            name=\"remember\" \r\n            /> \r\n            Remember Me\r\n          </label> */}\r\n\r\n        <button disabled={loading} onClick={handleClick} className=\"lButton\">\r\n          Đăng nhập\r\n        </button>\r\n        <p>\r\n          Bạn chưa có tài khoản. <Link className=\"\" to=\"/register\">Đăng ký ngay</Link>\r\n        </p>\r\n\r\n        {error && <span style={{color:'red'}}>{error.message}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\n\r\nconst Register = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: undefined,\r\n    password: undefined,\r\n    email:undefined,\r\n    passwordRepeat: undefined // Thêm trường passwordRepeat vào state, trường này khi đẩy vào API ko dùng\r\n\r\n  });\r\n\r\n  const {user, loading, error, dispatch } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate()\r\n  // khi thay doi field\r\n  const handleChange = (e) => {\r\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n  // submit\r\n  const handleClickRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (credentials.password !== credentials.passwordRepeat) {\r\n      alert(\"Mật khẩu không khớp\");\r\n      return;\r\n    }\r\n    try {\r\n\r\n      const res = await axios.post(\"/auth/register\", credentials);\r\n      alert(\"Đăng ký thành công\")\r\n      navigate(\"/login\")\r\n    } catch (err) {\r\n      dispatch({ type: \"LOGIN_FAILURE\", payload: err.response.data });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"lContainer\">\r\n      <h1 className=\"Login\">Đăng ký</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Tên đăng nhập\"\r\n          id=\"username\"\r\n          onChange={handleChange}\r\n          className=\"lInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mật khẩu\"\r\n          id=\"password\"\r\n          onChange={handleChange}\r\n          className=\"lInput\"\r\n        />\r\n\r\n          <input\r\n          type=\"password\"\r\n          placeholder=\"Nhập lại mật khẩu\"\r\n          id=\"passwordRepeat\"\r\n          onChange={handleChange}\r\n          className=\"lInput\"\r\n        />  \r\n\r\n          <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          id=\"email\"\r\n          onChange={handleChange}\r\n          className=\"lInput\"\r\n        />\r\n\r\n        \r\n       \r\n          {/* <label>\r\n            <input \r\n            type=\"checkbox\" \r\n            name=\"remember\" \r\n            /> \r\n            Remember Me\r\n          </label> */}\r\n         \r\n      \r\n        \r\n        <button disabled={loading} onClick={handleClickRegister}   className=\"lButton btn_registerr\">\r\n          Đăng ký\r\n        </button>\r\n        {error && <span>Tên đăng nhập hoặc email <br></br> đã có người sử dụng</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","import \"./sidebar.css\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport LocalShippingIcon from \"@mui/icons-material/LocalShipping\";\r\nimport CreditCardIcon from \"@mui/icons-material/CreditCard\";\r\nimport StoreIcon from \"@mui/icons-material/Store\";\r\nimport HouseIcon from '@mui/icons-material/House';\r\n// import SettingsApplicationsIcon from \"@mui/icons-material/SettingsApplications\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\n// import NotificationsNoneIcon from \"@mui/icons-material/NotificationsNone\";\r\n// import SettingsSystemDaydreamOutlinedIcon from \"@mui/icons-material/SettingsSystemDaydreamOutlined\";\r\nimport BookOnlineIcon from '@mui/icons-material/BookOnline';\r\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { DarkModeContext } from \"../../context/darkModeContext\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate,useLocation } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nconst Sidebar = () => {\r\n  // const { dispatch } = useContext(DarkModeContext);\r\n  const { user, dispatch } = useContext(AuthContext)\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const type = location.pathname.split(\"/\")[2]; // lấy ra mục người dùng đang ở như hotel, rooms, reservation từ link\r\n  const [selectedItem, setSelectedItem] = useState(location.state?.item || type);\r\n  // console.log(selectedItem)\r\n  const handleChangeSelectedItem = (item) => {\r\n    navigate(`/admin/${item}`, { state: { item } });\r\n  };\r\n\r\n\r\n  const handleLogOut = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      dispatch({ type: \"LOGOUT\" });\r\n      const res = await axios.post(\"/auth/logout\");\r\n      navigate(\"/login\");\r\n    } catch (err) { }\r\n  };\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"top\">\r\n        {/* /admin/hotels */}\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <span className=\"logo\">HotelBooking</span>\r\n        </Link>\r\n      </div>\r\n      {/* <hr /> */}\r\n      <div className=\"center\">\r\n        <ul>\r\n          {/* <p className=\"title\">MAIN</p>\r\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <li>\r\n              <DashboardIcon className=\"icon\" />\r\n              <span>Dashboard</span>\r\n            </li>\r\n          </Link> */}\r\n          <p className=\"title\">MỤC</p>\r\n          {/* <Link to=\"/users\" style={{ textDecoration: \"none\" }}>\r\n            <li>\r\n              <PersonOutlineIcon className=\"icon\" />\r\n              <span>Users</span>\r\n            </li>\r\n          </Link> */}\r\n          <div  style={{ textDecoration: \"none\" }} onClick={() => handleChangeSelectedItem(\"hotels\")}>\r\n            <li style={{ backgroundColor: selectedItem == 'hotels' ? '#ece8ff' : '' }}>\r\n              <StoreIcon className=\"icon\" />\r\n              <span>Chỗ nghỉ</span>\r\n            </li>\r\n          </div>\r\n\r\n          <div  style={{ textDecoration: \"none\" }} onClick={() => handleChangeSelectedItem(\"rooms\")}>\r\n            <li style={{ backgroundColor: selectedItem == 'rooms' ? '#ece8ff' : '' }}>\r\n              <HouseIcon className=\"icon\" />\r\n              <span>Phòng</span>\r\n            </li>\r\n          </div>\r\n\r\n          <div  style={{ textDecoration: \"none\" }} onClick={() => handleChangeSelectedItem(\"reservations\")}>\r\n            <li style={{ backgroundColor: selectedItem == 'reservations' ? '#ece8ff' : '' }}>\r\n              <BookOnlineIcon className=\"icon\" />\r\n              <span>Đơn đặt phòng</span>\r\n            </li>\r\n          </div>\r\n          {/* <p className=\"title\">USEFUL</p>\r\n          <li>\r\n            <InsertChartIcon className=\"icon\" />\r\n            <span>Stats</span>\r\n          </li>\r\n          <li>\r\n            <NotificationsNoneIcon className=\"icon\" />\r\n            <span>Notifications</span>\r\n          </li>\r\n          <p className=\"title\">SERVICE</p>\r\n          <li>\r\n            <SettingsSystemDaydreamOutlinedIcon className=\"icon\" />\r\n            <span>System Health</span>\r\n          </li>\r\n          <li>\r\n            <PsychologyOutlinedIcon className=\"icon\" />\r\n            <span>Logs</span>\r\n          </li>\r\n          <li>\r\n            <SettingsApplicationsIcon className=\"icon\" />\r\n            <span>Settings</span>\r\n          </li> */}\r\n          <p className=\"title\">TÀI KHOẢN</p>\r\n\r\n          <div  style={{ textDecoration: \"none\" }} onClick={() => handleChangeSelectedItem(\"changePassword\")}>\r\n            <li style={{ backgroundColor: selectedItem == 'changePassword' ? '#ece8ff' : '' }}>\r\n              <BookOnlineIcon className=\"icon\" />\r\n              <span>Đổi mật khẩu</span>\r\n            </li>\r\n          </div>\r\n          <div  style={{ textDecoration: \"none\" }}  onClick={() => handleChangeSelectedItem(\"updatePaymentInfo\")}>\r\n            <li style={{ backgroundColor: selectedItem == 'updatePaymentInfo' ? '#ece8ff' : '' }}>\r\n              <AccountCircleOutlinedIcon className=\"icon\" />\r\n              <span>Cập nhật tài khoản thanh toán</span>\r\n            </li>\r\n          </div>\r\n\r\n          <li onClick={handleLogOut}>\r\n            <ExitToAppIcon className=\"icon\" />\r\n            <span>Logout</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {/* <div className=\"bottom\">\r\n        <div\r\n          className=\"colorOption\"\r\n          // onClick={() => dispatch({ type: \"LIGHT\" })}\r\n        ></div>\r\n        <div\r\n          className=\"colorOption\"\r\n          // onClick={() => dispatch({ type: \"DARK\" })}\r\n        ></div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import \"./navbarAdmin.css\";\r\n\r\n// import { DarkModeContext } from \"../../context/darkModeContext\";\r\nimport { useContext } from \"react\";\r\nimport React from \"react\"\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\n\r\nconst NavbarAdmin = () => {\r\n//   const { dispatch } = useContext(DarkModeContext);\r\n  const {user , dispatch} = useContext(AuthContext)\r\n\r\n  return (\r\n    <div className=\"navbarAdmin\">\r\n        <h1 className=\"navbarAdmin_username\">Xin chào, {user?.username}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarAdmin;\r\n","import React from 'react'\r\nimport { useContext } from 'react'\r\nimport { AuthContext } from '../../../context/AuthContext'\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport './adminHome.css'\r\nconst AdminHome = () => {\r\n\r\n  const { user, dispatch } = useContext(AuthContext) // {user._id}\r\n  return (\r\n\r\n    <div className=\"listAdmin\">\r\n      <Sidebar />\r\n      <div className=\"listContainerAdmin\">\r\n        <NavbarAdmin />\r\n        {/* <h1>bang</h1> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminHome\r\n","import React from 'react'\r\nimport { useContext } from 'react'\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { AuthContext } from '../../../context/AuthContext'\r\nimport { Link } from 'react-router-dom';\r\nimport \"./listHotel.css\"\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { format, addDays, addYears, subYears } from \"date-fns\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useEffect } from 'react';\r\nconst currentDate = new Date();\r\nconst endLessDate = addYears(currentDate, 10)\r\n\r\nconst ListHotel = () => {\r\n    // token chứa _id tài khoản và isAdmin\r\n    // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    // const decodedToken = jwtDecode(token);\r\n    // // console.log(decodedToken);\r\n    const { user } = useContext(AuthContext) // {user._id}\r\n    const { data, loading, error, reFetch } = useFetch(\r\n        `/hotels/getByAdmin`);\r\n    // lấy ra những đơn đặt phòng trong tương lai\r\n    const { data: reservationData, loading: reservationLoading, error: reservationError,\r\n        reFetch: reservationReFetch } = useFetch(`/reservation/admin/?startDay=${currentDate}&endDay=${endLessDate}&status=\"success\"`);\r\n    // console.log(reservationData)\r\n    const navigate = useNavigate();\r\n    const handleDelete = (hotelId) => {\r\n        const hasMatchingHotelId = reservationData.some(item => item.hotelId === hotelId);\r\n\r\n        // Nếu có phần tử nào có hotelId trùng khớp, thoát ra khỏi hàm\r\n        if (hasMatchingHotelId) {\r\n            toast.error(\"Chỗ nghỉ này đang có đơn đặt phòng sắp tới, không thể xóa!\")\r\n            return;\r\n        }\r\n        confirmAlert({\r\n            title: 'Confirm',\r\n            message: 'Bạn có chắc chắn muốn xóa chỗ nghỉ này?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n                        // Xác nhận xóa khách sạn\r\n                        deleteHotel(hotelId);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => {\r\n                        // Không làm gì cả\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n\r\n    // hàm chuyển hướng\r\n    const handleEditHotel = (itemId) => {\r\n        navigate(`/admin/hotels/${itemId}`, { state: { previousPath: '/admin/hotels' } });\r\n    };\r\n    const handleStatisticHotel = (itemId) => {\r\n        navigate(`/admin/hotels/revenue/${itemId}`, { state: { previousPath: '/admin/hotels' } });\r\n    };\r\n    const deleteHotel = async (hotelId) => {\r\n        try {\r\n            // Gửi yêu cầu xóa khách sạn đến máy chủ\r\n\r\n            const Success = await axios.delete(`/hotels/${hotelId}`);\r\n\r\n            if (Success) {\r\n                // Nếu xóa thành công, tải lại dữ liệu\r\n                reFetch();\r\n                toast.success('Xóa thành công');\r\n            } else {\r\n                toast.error('Có lỗi xảy ra vui lòng thử lại');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting hotel:', error);\r\n            toast.error('Có lỗi xảy ra vui lòng thử lại');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n\r\n                <div className=\"listHotelAdminContainer\">\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                        <h1>Chỗ nghỉ của bạn</h1>\r\n                        <Link to={`/admin/hotels/new`}>\r\n                            <button className=\"addHotel_btn\" >Thêm chỗ nghỉ mới</button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    {loading ? (\r\n                        \"loading\"\r\n                    ) : (\r\n\r\n                        <>\r\n                            {data.length === 0 ? (\r\n                                <div>Bạn chưa có chỗ nghỉ nào. Hãy thêm chỗ nghỉ bằng cách ấn nút \"Thêm chỗ nghỉ\"</div>\r\n                            ) : (\r\n                                data.map((item) => (\r\n                                    <div className=\"listHotelAdmin\" key={item._id}>\r\n                                        <img src={item.photos[0]} alt=\"\" className=\"siImg\" />\r\n                                        <div className=\"siDesc\">\r\n                                            <h1 className=\"siTitle\">{item.name}</h1>\r\n                                            <span className=\"siDistance\">Khoảng cách đến trung tâm: {item.distance}m từ trung tâm</span>\r\n\r\n                                            <span className=\"siFeatures\">Địa chỉ chỗ nghỉ: {item.address}</span>\r\n\r\n                                        </div>\r\n                                        <div className=\"listHotel_btn\">\r\n                                            {/* <span className=\"siTaxOp\">Cho {options.adult} người, {days} đêm</span> */}\r\n                                            {/* <Link to={`/hotels/${item._id}`}>\r\n                                            </Link> */}\r\n                                            <button\r\n                                                onClick={() => handleStatisticHotel(item._id)}\r\n                                            >Thống kê số liệu </button>\r\n\r\n                                            <button onClick={() => handleEditHotel(item._id)} >\r\n                                                Chỉnh sửa thông tin\r\n                                            </button>\r\n                                            <button style={{backgroundColor:'red'}} onClick={() => handleDelete(item._id)}>Xóa chỗ nghỉ</button>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                )))}\r\n                        </>\r\n                    )}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListHotel\r\n","import React from 'react'\r\nimport \"./newHotel.css\"\r\nimport axios from \"axios\";\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { useState, useContext } from \"react\";\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\nimport { hotelInputs, hotelFacilities } from '../../../formSource';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { listProvinces } from \"../../../listObject\";\r\n\r\n\r\nconst NewHotel = () => {\r\n  const [files, setFiles] = useState(\"\");\r\n  const [info, setInfo] = useState({});\r\n  const [selectedFacilities, setSelectedFacilities] = useState([]);\r\n  const [customFacilities, setCustomFacilities] = useState(\"\");\r\n  const handleCustomFacilitiesChange = (event) => {\r\n    setCustomFacilities(event.target.value);\r\n  };\r\n  // const [rooms, setRooms] = useState([]);\r\n  // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n  // const decodedToken = jwtDecode(token);\r\n  const { user } = useContext(AuthContext) // {user._id}\r\n  const navigate = useNavigate()\r\n\r\n  const { data, loading, error } = useFetch(\"/rooms\");\r\n\r\n  // xử lý khi submit form\r\n  const [isSending, setIsSending] = useState(false);\r\n  const removeImage = (index) => {\r\n    const newFiles = files.filter((_, i) => i !== index);\r\n    setFiles(newFiles);\r\n  };\r\n\r\n  // validate\r\n  const validateInputs = () => {\r\n    // Check if all hotelInputs are filled\r\n    for (let input of hotelInputs) {\r\n      if (!document.getElementById(input.id).value || !document.getElementById(\"type\").value) {\r\n        return false;\r\n      }\r\n    }\r\n    // Check if description is filled\r\n    if (!document.getElementById(\"desc\").value.trim() || (!customFacilities && selectedFacilities.length == 0)\r\n      || (files.length === 0)) {//|| (files.length === 0) sau thêm cái này vào lúc triển khai\r\n      return false;\r\n    }\r\n\r\n    if (document.getElementById(\"distance\").value < 0) {\r\n      return false;\r\n  }\r\n    return true;\r\n  };\r\n\r\n  // khi ng dùng nhập thông tin\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setInfo((prev) => ({\r\n      ...prev,\r\n      [id]: id === \"city\" ? value.trim() : value,\r\n    }));\r\n  };\r\n  // facilities người dùng tích\r\n  const handleCheckboxChange = (facility) => {\r\n    setSelectedFacilities((prevSelected) => {\r\n      // nếu người dùng tích cái đã có - tức bỏ nó đi thì bỏ nó khỏi mảng\r\n      if (prevSelected.includes(facility)) {\r\n        return prevSelected.filter((item) => item !== facility);\r\n      } else {\r\n        return [...prevSelected, facility];\r\n      }\r\n    });\r\n  };\r\n\r\n  // console.log(selectedFacilities)\r\n  // khi ng dùng submit\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    const customFacilitiesArray = customFacilities.split(',').map(item => item.trim()).filter(item => item);\r\n    const allSelectedFacilities = [...selectedFacilities, ...customFacilitiesArray];\r\n    setIsSending(true);\r\n    try {\r\n      if (allSelectedFacilities.length > 12) {\r\n        toast.error(\"Chỉ được chọn tối đa 12 cơ sở vật chất\");\r\n        return;\r\n      }\r\n      if (!validateInputs()) {\r\n        toast.error(\"Bạn chưa điền đủ các thông tin hoặc thông tin không hợp lệ!.\");\r\n      } else {\r\n        // CHUYỂN ẢNH THÀNH LINK ĐỂ LƯU CSDL\r\n        const list = await Promise.all(\r\n          Object.values(files).map(async (file) => {\r\n            const data = new FormData();\r\n            data.append(\"file\", file);\r\n            const uploadRes = await axios.post(\r\n              `/closedRoom/upload/uploadImage`,\r\n              data\r\n            );\r\n\r\n            const { url } = uploadRes.data;\r\n            return url;\r\n          })\r\n        );\r\n\r\n        const newhotel = {\r\n          ...info,\r\n          photos: list,\r\n          facilities: allSelectedFacilities\r\n          // ownerId: decodedToken.id\r\n        };\r\n\r\n        const Success = await axios.post(\"/hotels\", newhotel);\r\n        if (Success) {\r\n          toast.success('Thành công!');\r\n          toast.warning(`Vẫn chưa xong! Hãy tiếp tục thêm chi tiết về loại phòng ở chỗ nghỉ của bạn ở mục \"Phòng\". Chỗ nghỉ\r\n          của bạn sẽ được đăng sau khi có ít nhất 1 loại phòng`, {\r\n            autoClose: 20000,\r\n          });\r\n          navigate(\"/admin/hotels\");\r\n\r\n        } else toast.error(\"Có lỗi xảy ra.Vui lòng tải lại trang và thử lại\");\r\n      }\r\n\r\n\r\n    } catch (err) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsSending(false); // Kết thúc xử lý, trả lại trạng thái ban đầu cho nút\r\n    }\r\n  };\r\n  return (\r\n    // lấy css từ ListHotel.css\r\n    <div className=\"listAdmin\">\r\n      <Sidebar />\r\n      <div className=\"listContainerAdmin\">\r\n        <NavbarAdmin />\r\n        <div className=\"top\">\r\n          <h1>Thêm chỗ nghỉ</h1>\r\n        </div>\r\n        <div className=\"bottom\">\r\n\r\n          {/*left- chỗ hiện ảnh đã chọn */}\r\n          <div className=\"left\">\r\n            {files.length > 0 ? (\r\n              files.map((file, index) => (\r\n                <div key={index} style={{ position: 'relative', display: 'inline-block' }}>\r\n                  <img\r\n                    src={URL.createObjectURL(file)}\r\n                    alt={`Uploaded image ${index + 1}`}\r\n                    style={{ display: 'block' }}\r\n                  />\r\n                  <button\r\n                    onClick={() => removeImage(index)}\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: '5px',\r\n                      right: '5px',\r\n                      backgroundColor: 'red',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      borderRadius: '50%',\r\n                      width: '20px',\r\n                      height: '20px',\r\n                      cursor: 'pointer',\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <img\r\n                src=\"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\r\n                alt=\"No image\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n\r\n          {/* field up ảnh */}\r\n          <div className=\"right\">\r\n            <form>\r\n              <div className=\"formInput\">\r\n                <label htmlFor=\"file\">\r\n                  Up ảnh: (Click vào đây để thêm ảnh) <DriveFolderUploadOutlinedIcon className=\"icon\" />\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  multiple\r\n                  onChange={(e) => setFiles([...e.target.files])}\r\n                  style={{ display: \"none\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"formInput\" key='type'>\r\n                <label>Chọn loại chỗ nghỉ</label>\r\n                <select\r\n                  id='type'\r\n                  onChange={handleChange}\r\n                  value={info.type}\r\n                >\r\n                  <option value=\"\" >Chọn loại chỗ nghỉ</option> {/* Các option của dropdown */}\r\n                  <option value=\"Khách sạn\" >Khách sạn</option> {/* Các option của dropdown */}\r\n                  <option value=\"Căn hộ\" >Căn hộ</option>\r\n                  <option value=\"Biệt thự\" >Biệt thự</option> {/* Các option của dropdown */}\r\n                  <option value=\"Resort\" >Resort</option>\r\n                  <option value=\"Nhà nghỉ\" >Nhà nghỉ</option>\r\n\r\n                </select>\r\n                {info.type == \"Căn hộ\" || info.type == \"Biệt thự\" || info.type == \"Resort\" ?\r\n                  (\r\n                    <div style={{ fontStyle: 'italic' }}>(Trong trường hợp bạn muốn bán nhiều {info.type} tại cùng 1 địa chỉ, bạn chỉ cần tạo 1 chỗ nghỉ sau đó thêm\r\n                      nhiều loại {info.type} ở mục \"Phòng\". Trong trường hợp bạn chỉ bán 1 {info.type} thì chỉ thêm 1 loại). </div>\r\n                  )\r\n                  : \"\"}\r\n              </div>\r\n\r\n              <div className=\"formInput\" key='type'>\r\n                <label>Tỉnh thành chỗ nghỉ</label>\r\n                <select\r\n                  id='city'\r\n                  onChange={handleChange}\r\n                  value={info.city}\r\n                >\r\n                  <option value=\"\" >Chọn tỉnh thành</option> {/* Các option của dropdown */}\r\n                  {listProvinces.map((province, index) => (\r\n                    <option key={index} value={province.name}>\r\n                      {province.name}\r\n                    </option>\r\n                  ))}\r\n\r\n                </select>\r\n              </div>\r\n              {/* render các trường */}\r\n              {hotelInputs.slice(0, 1).concat(hotelInputs.slice(2)).map((input) => (\r\n                <div className=\"formInput\" key={input.id}>\r\n                  {/* <label>{input.label}</label> */}\r\n                  <label>\r\n                    {input.label} {info?.type ? info.type.toLowerCase() : \"chỗ nghỉ\"}\r\n                  </label>\r\n                  <input\r\n                    id={input.id}\r\n                    onChange={handleChange}\r\n                    type={input.type}\r\n                    placeholder={input.placeholder}\r\n                  />\r\n                </div>\r\n              ))}\r\n              {/* test */}\r\n              <label>Mô tả chỗ nghỉ của bạn (Tối đa 1000 ký tự) </label>\r\n              <textarea\r\n                id=\"desc\"\r\n                rows=\"10\" /* Số dòng mặc định hiển thị ban đầu */\r\n                maxLength=\"1000\"\r\n                onChange={handleChange}\r\n                style={{ width: \"100%\", padding: \"10px\", fontSize: \"16px\", border: \"1px solid #ccc\", borderRadius: \"5px\", boxSizing: \"border-box\" }}\r\n              ></textarea>\r\n\r\n\r\n              <div className=\"hotelFacilities\">\r\n                <div style={{ marginBottom: '10px' }}>Cơ sở vật chất chỗ nghỉ </div>\r\n                {hotelFacilities.map((facility) => (\r\n                  <div style={{ marginBottom: \"10px\" }} key={facility}>\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={facility}\r\n                        onChange={() => handleCheckboxChange(facility)}\r\n                        checked={selectedFacilities.includes(facility)}\r\n                      />\r\n                      {facility}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n\r\n                {/* tự nhập */}\r\n                <div className=\"customFacilities\">\r\n                  <label>Nhập cơ sở vật chất khác (ngăn cách bằng dấu phẩy): </label>\r\n                  <input style={{ width: \"100%\" }}\r\n                    type=\"text\"\r\n                    value={customFacilities}\r\n                    placeholder=\"Ví dụ:Thuê xe đạp, Dịch vụ phòng\"\r\n                    onChange={handleCustomFacilitiesChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button onClick={handleClick} disabled={isSending}>\r\n                {isSending ? 'Đang lưu...' : 'Đăng chỗ nghỉ'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewHotel\r\n","import React from 'react'\r\nimport \"./modifyHotel.css\"\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\nimport { hotelInputs, hotelFacilities } from '../../../formSource';\r\nimport { toast } from 'react-toastify';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { listProvinces } from \"../../../listObject\";\r\n\r\n// css từ new Hotel\r\nconst ModifyHotel = () => {\r\n    const location = useLocation();\r\n    const idHotel = location.pathname.split(\"/\")[3];\r\n    const { data, loading, error } = useFetch(`/hotels/find/${idHotel}`);\r\n    // console.log(data)\r\n    const [info, setInfo] = useState(data);\r\n    const [files, setFiles] = useState(\"\");\r\n    const [selectedFacilities, setSelectedFacilities] = useState([]);\r\n    const [customFacilities, setCustomFacilities] = useState(\"\");\r\n    const [isSending, setIsSending] = useState(false);\r\n\r\n    // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    // const decodedToken = jwtDecode(token);\r\n    const { user } = useContext(AuthContext) // {user._id}\r\n    // dùng để select default type chỗ nghỉ\r\n    const defaultType = data.type;\r\n    const navigate = useNavigate()\r\n    const previousPath = location.state?.previousPath;\r\n    if (previousPath !== '/admin/hotels') {\r\n        navigate('/admin/hotels');\r\n    }\r\n    const removeImage = (index) => {\r\n        const newFiles = files.filter((_, i) => i !== index);\r\n        setFiles(newFiles);\r\n    };\r\n    useEffect(() => {\r\n        if (data) {\r\n            setInfo(data);\r\n            // lấy facilities của hotel hiện tại cho vào các biến phù hợp\r\n            const initialSelectedFacilities = data.facilities?.filter(facility => hotelFacilities?.includes(facility));\r\n            const initialCustomFacilities = data.facilities?.filter(facility => !hotelFacilities?.includes(facility)).join(\", \");\r\n            setSelectedFacilities(initialSelectedFacilities);\r\n            setCustomFacilities(initialCustomFacilities);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setInfo((prev) => ({\r\n            ...prev,\r\n            [id]: id === \"city\" ? value.trim() : value,\r\n        }));\r\n    };\r\n    // validate input ko rỗng hoặc 1 số trường hợp ko hợp lệ\r\n    const validateInputs = () => {\r\n        // Check if all hotelInputs are filled\r\n        for (let input of hotelInputs) {\r\n            if (!document.getElementById(input.id).value || !document.getElementById(\"type\").value) {\r\n                return false;\r\n            }\r\n        }\r\n        // Check if description is filled\r\n        if (!document.getElementById(\"desc\").value.trim() || (!customFacilities && selectedFacilities.length == 0)\r\n        ) {//|| (files.length === 0) ko cần vì đây bên chỉnh sửa đã có ảnh trc rồi\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    // chỉnh check box facilities\r\n    const handleCheckboxChange = (facility) => {\r\n        setSelectedFacilities((prevSelected) => {\r\n            // nếu người dùng tích cái đã có - tức bỏ nó đi thì bỏ nó khỏi mảng\r\n            if (prevSelected.includes(facility)) {\r\n                return prevSelected.filter((item) => item !== facility);\r\n            } else {\r\n                return [...prevSelected, facility];\r\n            }\r\n        });\r\n    };\r\n    // facilities tự nhập\r\n    const handleCustomFacilitiesChange = (event) => {\r\n        setCustomFacilities(event.target.value);\r\n    };\r\n\r\n    // console.log(info)\r\n\r\n    const handleClick = async (e) => {\r\n        setIsSending(true)\r\n        e.preventDefault();\r\n        // lấy facilities từ checkbox và người dùng nhập\r\n        const customFacilitiesArray = customFacilities.split(',').map(item => item.trim()).filter(item => item);\r\n        const allSelectedFacilities = [...selectedFacilities, ...customFacilitiesArray];\r\n        try {\r\n            if (allSelectedFacilities.length > 12) {\r\n                toast.error(\"Chỉ được chọn tối đa 12 cơ sở vật chất\");\r\n                return;\r\n            }\r\n\r\n            if (!validateInputs()) {\r\n                toast.error(\"Bạn chưa điền đủ các thông tin!.\");\r\n                return;\r\n            }\r\n            try {\r\n                // list chứa link các photo để đẩy vào api\r\n                const list = await Promise.all(\r\n                    Object.values(files).map(async (file) => {\r\n                        const data = new FormData();\r\n                        data.append(\"file\", file);\r\n                        const uploadRes = await axios.post(\r\n                            `/closedRoom/upload/uploadImage`,\r\n                            data\r\n                        );\r\n\r\n                        const { url } = uploadRes.data;\r\n                        return url;\r\n                    })\r\n                );\r\n\r\n                const newModifyHotel = {\r\n                    ...info,\r\n                    ...(list.length > 0 && { photos: list }),// nếu người dùng có thêm ảnh vào thì set lại ảnh mới, ko thì giữ nguyên\r\n                    facilities: allSelectedFacilities\r\n                };\r\n\r\n                // gọi api thay đổi\r\n                const Success = await axios.put(`/hotels/${idHotel}`, newModifyHotel);\r\n                if (Success) {\r\n                    setIsSending(false)\r\n                    toast.success('Thành công chỉnh sửa!');\r\n                    navigate(\"/admin/hotels\");\r\n                } else {\r\n                    toast.error(\"Error.Please try again\");\r\n                    setIsSending(false)\r\n                }\r\n            } catch (err) {\r\n                console.log(error);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(error);\r\n        } finally {\r\n            setIsSending(false); // Kết thúc xử lý, trả lại trạng thái ban đầu cho nút\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n                {/* lấy theo css của newHotel.css */}\r\n                <div className=\"listHotelAdminContainer\">\r\n                    <div className=\"top\">\r\n                        <h1 style={{ fontWeight: 'bold' }}>Chỉnh sửa thông tin</h1>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"bottom\">\r\n                        <div className=\"left\">\r\n                            {files.length > 0 ? (\r\n                                files.map((file, index) => (\r\n                                    <div key={index} style={{ position: 'relative', display: 'inline-block' }}>\r\n                                        <img\r\n                                            src={URL.createObjectURL(file)}\r\n                                            alt={`Uploaded image ${index + 1}`}\r\n                                            style={{ display: 'block' }}\r\n                                        />\r\n                                        <button\r\n                                            onClick={() => removeImage(index)}\r\n                                            style={{\r\n                                                position: 'absolute',\r\n                                                top: '5px',\r\n                                                right: '5px',\r\n                                                backgroundColor: 'red',\r\n                                                color: 'white',\r\n                                                border: 'none',\r\n                                                borderRadius: '50%',\r\n                                                width: '20px',\r\n                                                height: '20px',\r\n                                                cursor: 'pointer',\r\n                                                textAlign: 'center',\r\n                                            }}\r\n                                        >\r\n                                            X\r\n                                        </button>\r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                <div className=\"no-image-container\">\r\n                                    {data.photos?.map((photo, index) => (\r\n                                        <img key={index} src={photo} alt={`Ảnh ${index}`} />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n                        <div className=\"right\">\r\n                            <div className=\"right\">\r\n                                <form>\r\n                                    <div className=\"formInput\">\r\n                                        <label htmlFor=\"file\">\r\n                                            Up ảnh (Click vào đây để upload lại ảnh): <DriveFolderUploadOutlinedIcon className=\"icon\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            id=\"file\"\r\n                                            multiple\r\n                                            onChange={(e) => setFiles([...e.target.files])}\r\n                                            style={{ display: \"none\" }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"formInput\" key='type'>\r\n                                        <label>Chọn loại chỗ nghỉ</label>\r\n                                        <select\r\n                                            id='type'\r\n                                            onChange={handleChange}\r\n                                            value={info.type}\r\n                                        >\r\n                                            <option value={defaultType} >{defaultType}</option> {/* Option mặc định */}\r\n                                            <option value=\"Khách sạn\" hidden={defaultType === \"Khách sạn\"}>Khách sạn</option> {/* Các option của dropdown */}\r\n                                            <option value=\"Căn hộ\" hidden={defaultType === \"Căn hộ\"}>Căn hộ</option>\r\n                                            <option value=\"Biệt thự\" hidden={defaultType === \"Biệt thự\"}>Biệt thự</option> {/* Các option của dropdown */}\r\n                                            <option value=\"Resort\" hidden={defaultType === \"Resort\"}>Resort</option>\r\n                                            <option value=\"Nhà nghỉ\" hidden={defaultType === \"Nhà nghỉ\"}>Nhà nghỉ</option>\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    {/* tinh thanh cho nghi */}\r\n\r\n                                    <div className=\"formInput\" key='type'>\r\n                                        <label>Tỉnh thành chỗ nghỉ</label>\r\n                                        <select\r\n                                            id='city'\r\n                                            onChange={handleChange}\r\n                                            value={info.city}\r\n                                        >\r\n                                            {listProvinces.map((province, index) => (\r\n                                                <option key={index} value={province.name}>\r\n                                                    {province.name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    {/* render các trường */}\r\n                                    {hotelInputs.slice(0, 1).concat(hotelInputs.slice(2)).map((input) => (\r\n                                        <div className=\"formInput\" key={input.id}>\r\n                                            <label> {input.label} {info?.type ? info.type.toLowerCase() : \"chỗ nghỉ\"}</label>\r\n                                            <input\r\n                                                id={input.id}\r\n                                                onChange={handleChange}\r\n                                                type={input.type}\r\n                                                value={info[input.id]}\r\n                                            />\r\n                                        </div>\r\n                                    ))}\r\n                                    {/* test */}\r\n                                    <label>Mô tả chỗ nghỉ của bạn(Tối đa 1000 ký tự) </label>\r\n                                    <textarea\r\n                                        id=\"desc\"\r\n                                        rows=\"10\" /* Số dòng mặc định hiển thị ban đầu */\r\n                                        maxLength=\"1000\"\r\n                                        onChange={handleChange}\r\n                                        style={{ width: \"100%\", padding: \"10px\", fontSize: \"16px\", border: \"1px solid #ccc\", borderRadius: \"5px\", boxSizing: \"border-box\" }}\r\n                                        placeholder={data.desc}\r\n                                        value={info.desc}\r\n                                    ></textarea>\r\n\r\n                                    <div className=\"hotelFacilities\">\r\n                                        <div style={{ marginBottom: '10px' }}>Cơ sở vật chất chỗ nghỉ </div>\r\n                                        {hotelFacilities.map((facility) => (\r\n                                            <div style={{ marginBottom: \"10px\" }} key={facility}>\r\n                                                <label>\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        value={facility}\r\n                                                        onChange={() => handleCheckboxChange(facility)}\r\n                                                        checked={selectedFacilities?.includes(facility)}\r\n                                                    />\r\n                                                    {facility}\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n\r\n                                        {/* tự nhập */}\r\n                                        <div className=\"customFacilities\">\r\n                                            <label>Nhập cơ sở vật chất khác (ngăn cách bằng dấu phẩy): </label>\r\n                                            <input style={{ width: \"100%\" }}\r\n                                                type=\"text\"\r\n                                                value={customFacilities}\r\n                                                placeholder=\"Ví dụ:Thuê xe đạp, Dịch vụ phòng\"\r\n                                                onChange={handleCustomFacilitiesChange}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <button onClick={handleClick} disabled={isSending}>\r\n                                        {isSending ? 'Đang lưu...' : 'Lưu thông tin chỗ nghỉ'}\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModifyHotel\r\n","import { format,addDays,subDays   } from \"date-fns\";\r\nimport React from 'react';\r\n\r\nexport const roomColumns = [\r\n    { field: \"_id\", headerName: \"ID\", width: 100, hide:true },\r\n    {\r\n      field: \"title\",\r\n      headerName: \"Tên loại phòng (loại căn hộ, biệt thự,...) \",\r\n      // width: 200,\r\n      align:'center',\r\n      headerAlign:'center',\r\n      flex:1.25,\r\n      renderHeader: (params) => (\r\n        <div style={{ whiteSpace: 'normal', textAlign:'center',lineHeight: '1.2' }}>\r\n          {params.colDef.headerName}\r\n        </div>\r\n      )\r\n      \r\n    },\r\n    {\r\n      field: \"desc\",\r\n      headerName: \"Mô tả \",\r\n      flex:2,\r\n      // width: 330,\r\n      cellClassName: 'wrap-content', // listReservation.css\r\n      // align:'center',\r\n      headerAlign:'center'\r\n    },\r\n    // {\r\n    //   field: \"hotelName\",\r\n    //   headerName: \"Hotel\",\r\n    //   width: 200,\r\n    // },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Giá mỗi đêm(VND)\",\r\n      // width: 140,\r\n      flex:1,\r\n      valueFormatter: (params) => {\r\n            const formattedValue = new Intl.NumberFormat('vi-VN').format(params.value*1000)\r\n            return `${formattedValue}`;\r\n    },\r\n      align:'center',\r\n      headerAlign:'center'\r\n\r\n    },\r\n    {\r\n      field: \"maxPeople\",\r\n      headerName: \"Số người\",\r\n      // width: 130,\r\n      flex:0.5,\r\n      align:'center',\r\n      headerAlign:'center'\r\n    },\r\n    {\r\n      field: \"roomCount\",\r\n      headerName: \"Số lượng\",\r\n      flex:0.5,\r\n      // width: 150,\r\n      align:'center',\r\n      headerAlign:'center',\r\n      renderCell: (params) => {\r\n          const roomNumbers = params.row.roomNumbers || [];\r\n          return roomNumbers.length;\r\n      }\r\n    },\r\n \r\n  ];\r\n\r\n\r\n\r\n  const formatDate = (date) => {\r\n    let dateFormat = new Date(date)\r\n    // const [month, day, year] = dateFormat.toLocaleDateString().split('/');\r\n    return dateFormat.toLocaleDateString('vi-VN');\r\n  };\r\n\r\n\r\n  // cột danh sách reservations\r\n  export const ReservationColumns = [\r\n    { field: \"_id\", headerName: \"Mã đặt phòng\",flex:1, width: 140 },\r\n    {\r\n      field: \"start\",\r\n      headerName: \"Check-in\",\r\n      flex:1,\r\n      width: 90,\r\n      valueFormatter: (params) => formatDate(params.value),\r\n      headerAlign: 'center',\r\n      align:'center',\r\n      comparator: (a, b) => new Date(a).getTime() - new Date(b).getTime()\r\n\r\n    },\r\n    {\r\n      field: \"end\",\r\n      headerName: \"Check-out\",\r\n      flex:1,\r\n      width: 90,\r\n      valueFormatter: (params) => formatDate(params.value),\r\n      headerAlign: 'center',\r\n      align:'center'\r\n      \r\n    },\r\n    { field: \"hotelName\", headerName: \"Chỗ nghỉ\",flex:2, width: 180, headerAlign: 'center',  align:'center' },\r\n\r\n    {\r\n      field: \"roomsDetail\",\r\n      headerName: \"Phòng\",\r\n      flex:2,\r\n      width: 250,\r\n      cellClassName: 'wrap-content', // xuống dòng khi nội dung dài\r\n      headerAlign: 'center',\r\n      align:'center',\r\n      renderCell: (params) => {\r\n        const roomDetails = params.value;\r\n        return (\r\n          <div className=\"wrap-content\">\r\n            {roomDetails}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    \r\n    {\r\n      field: \"guest\",\r\n      headerName: \"Số người\",\r\n      width: 100,\r\n      flex:1,\r\n      cellClassName: 'wrap-content', // xuống dòng khi nội dung dài\r\n      headerAlign: 'center',\r\n      align:'center',\r\n      renderCell: (params) => {\r\n        const { adult, children } = params.row.guest;\r\n        return `${adult} người lớn, ${children} trẻ em`;\r\n      }\r\n    },\r\n\r\n    {\r\n      field: \"totalPrice\",\r\n      headerName: \"Tổng giá(VND)\",\r\n      flex:1,\r\n      width: 100,\r\n      valueFormatter: (params) => {\r\n        if (params.value !== null) {\r\n            const formattedValue = new Intl.NumberFormat('vi-VN').format(params.value*1000)\r\n            return `${formattedValue}`;\r\n        }\r\n        return null; // Trả về null nếu giá trị là null\r\n    },\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n    // {\r\n    //   field: \"createdAt\",\r\n    //   headerName: \"Thời gian đặt\",\r\n    //   width: 115,\r\n    //   valueGetter: (params) => new Date(params.value).toLocaleDateString('vi-VN'),\r\n    //   headerAlign: 'center',\r\n    //   align:'center'\r\n\r\n    // },\r\n    {\r\n      field: \"phoneNumber\",\r\n      headerName: \"Số điện thoại\",\r\n      width: 120,\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Trạng thái\",\r\n      width: 100,\r\n      flex:0.75,\r\n      renderCell: (params) => {\r\n        let statusText;\r\n        let statusColor;\r\n      \r\n        switch (params.value) {\r\n          case 1:\r\n            statusText = \"OK\";\r\n            statusColor = \"green\";\r\n            break;\r\n          case 0:\r\n            statusText = \"HỦY\";\r\n            statusColor = \"red\";\r\n            break;\r\n          case -1:\r\n            statusText = \"Đang chờ\";\r\n            statusColor = \"blue\";\r\n            break;\r\n          default:\r\n            statusText = \"Không xác định\";\r\n            statusColor = \"black\";\r\n            break;\r\n        }\r\n      \r\n        return (\r\n          <span style={{ color: statusColor }}>{statusText}</span>\r\n        );\r\n      },\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n\r\n  ];\r\n  \r\n  export const RenenueAllHotelColumn =\r\n  // cột ds hotel revenue\r\n  [\r\n    {\r\n      field: \"hotelName\",\r\n      headerName: \"Tên chỗ nghỉ\",\r\n      width: 350,\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n    {\r\n      field: \"userOwner\",\r\n      headerName: \"Email tài khoản chủ\",\r\n      width: 350,\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n    {\r\n      field: \"createdAt\",\r\n      headerName: \"Ngày hoạt động\",\r\n      // renderHeader: () => (\r\n      //   <div style={{whiteSpace:'normal'}} className=\"wrap-Headercontent\">\r\n      //     Ngày bắt đầu hoạt động\r\n      //   </div>\r\n      // ),\r\n      width: 115,\r\n      valueFormatter: (params) => {\r\n        const value = params.value ? params.value : '2024-05-20';\r\n        return formatDate(value);\r\n      },      comparator: (a, b) => new Date(a).getTime() - new Date(b).getTime(),\r\n      headerAlign: 'center',\r\n      align:'center'\r\n\r\n    },\r\n    {\r\n      field: \"totalRevenue\",\r\n      headerName: \"Tổng doanh thu\",\r\n      width: 250,\r\n      valueFormatter: (params) => {\r\n        const multipliedValue = params.value * 1000;\r\n        // Định dạng giá trị thành số nguyên\r\n        const formattedValue = new Intl.NumberFormat('vi-VN').format(multipliedValue);\r\n        return `${formattedValue} VND`;\r\n    },\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n\r\n    {\r\n      field: \"commission\",\r\n      headerName: \"Tiền hoa hồng\",\r\n      width: 150,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      valueGetter: (params) => {\r\n          // Lấy giá trị của trường \"Tổng doanh thu\" từ params.row\r\n          const totalRevenue = params.row.totalRevenue;\r\n          if (totalRevenue !== undefined && totalRevenue !== null) {\r\n              return totalRevenue * 0.1*1000; // 15% của giá trị \"totalRevenue\"\r\n          }\r\n          return null; \r\n      },\r\n      valueFormatter: (params) => {\r\n          if (params.value !== null) {\r\n              const formattedValue = new Intl.NumberFormat('vi-VN').format(params.value)\r\n              return `${formattedValue} VND`;\r\n          }\r\n          return null; // Trả về null nếu giá trị là null\r\n      }\r\n  }\r\n  \r\n  ]\r\n\r\n  export const allHotelPaymentColumn=\r\n  [\r\n    {\r\n      field: \"idOwnerHotel\",\r\n      headerName: \"Id tài khoản\",\r\n      width: 350,\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email tài khoản chủ\",\r\n      width: 250,\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n \r\n    {\r\n      field: \"totalPrice\",\r\n      headerName: \"Tổng doanh thu\",\r\n      width: 250,\r\n      valueFormatter: (params) => {\r\n        const multipliedValue = params.value * 1000;\r\n        // Định dạng giá trị thành số nguyên\r\n        const formattedValue = new Intl.NumberFormat('vi-VN').format(multipliedValue);\r\n        return `${formattedValue} VND`;\r\n    },\r\n      headerAlign: 'center',\r\n      align:'center'\r\n    },\r\n\r\n    {\r\n      field: \"needToPaid\",\r\n      headerName: \"Cần thanh toán\",\r\n      width: 150,\r\n      headerAlign: 'center',\r\n      align: 'center',\r\n      valueGetter: (params) => {\r\n          // Lấy giá trị của trường \"Tổng doanh thu\" từ params.row\r\n          const totalRevenue = params.row.totalPrice;\r\n          if (totalRevenue !== undefined && totalRevenue !== null) {\r\n              return totalRevenue * 0.9*1000; // 90% của giá trị \"totalRevenue\"\r\n          }\r\n          return null; \r\n      },\r\n      valueFormatter: (params) => {\r\n          if (params.value !== null) {\r\n              const formattedValue = new Intl.NumberFormat('vi-VN').format(params.value)\r\n              return `${formattedValue} VND`;\r\n          }\r\n          return null; // Trả về null nếu giá trị là null\r\n      }\r\n  },\r\n\r\n  {\r\n    field: \"paymentInfo\",\r\n    headerName: \"Thông tin thanh toán\",\r\n    width: 250,\r\n    cellClassName: 'wrap-content', \r\n    headerAlign: 'center',\r\n    align: 'center',\r\n  }\r\n  ]","import React from 'react'\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport \"./listRoom.css\"\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { roomColumns } from '../../../datatablesource';\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { useContext, useState, useEffect } from 'react'\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { addYears } from \"date-fns\";\r\nconst currentDate = new Date();\r\nconst endLessDate = addYears(currentDate, 10)\r\nconst ListRoom = () => {\r\n    // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    // const decodedToken = jwtDecode(token);\r\n    const { user } = useContext(AuthContext) // {user._id}\r\n    const { data: hotelData, loading: hotelLoading, error: hotelError, reFetch: hotelReFetch } = useFetch(`/hotels/getByAdmin`);\r\n    const [hotelId, setHotelId] = useState(hotelData.length > 0 ? hotelData[0]._id : null);\r\n    const { data: roomData, loading: roomLoading, error: roomError, reFetch: roomReFetch } = useFetch(`/rooms/${hotelId}`);\r\n    // lấy ra những đơn đặt phòng trong tương lai\r\n    const { data: reservationDataFuture, loading: reservationLoading, error: reservationError,\r\n        reFetch: reservationReFetch } = useFetch(`/reservation/admin/?startDay=${currentDate}&endDay=${endLessDate}&status=\"success\"`);\r\n    // console.log(reservationDataFuture)\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    // lấy hotel id nếu người dùng vừa tạo phòng hoặc chỉnh phòng xong\r\n    const hotelIdFromAddModifyRoom = location.state?.hotelIdFromAddModifyRoom;\r\n    // console.log(hotelIdFromAddModifyRoom)\r\n    const handleHotelChange = (e) => {\r\n        setHotelId(e.target.value);\r\n    };\r\n    useEffect(() => {\r\n        // nếu vừa thêm hoặc sửa loại phòng thì ở trang list room sẽ set id hotel mà có loại phòng vừa thêm hoặc sửa, ko thì set id hotel phần từ đầu tiên\r\n        if (hotelIdFromAddModifyRoom) {\r\n            setHotelId(hotelIdFromAddModifyRoom)\r\n        } else {\r\n            setHotelId(hotelData[0]?._id)\r\n        }\r\n    }, [hotelData]);\r\n    // console.log(roomData)\r\n\r\n    // chuyển hướng\r\n    const handleNavigation = (path) => {\r\n        navigate(path, { state: { previousPath: '/admin/rooms', hotelIdFromListRoom: hotelId } });\r\n    };\r\n    const handleDelete = (typeRoomId) => {\r\n        // // Kiểm tra xem phòng đấy có đơn sắp tới ko\r\n        const hasMatchingTypeRoomId = reservationDataFuture.some(reservation => {\r\n            // Kiểm tra xem reservation có thuộc tính roomTypeIdsReserved không\r\n            if (reservation.roomTypeIdsReserved) {\r\n                // Duyệt qua mỗi phần tử trong roomTypeIdsReserved để kiểm tra roomTypeId\r\n                return reservation.roomTypeIdsReserved.some(({ roomTypeId }) => roomTypeId === typeRoomId);\r\n            }\r\n            return false; // Nếu không có roomTypeIdsReserved, không thỏa mãn điều kiện\r\n        });\r\n\r\n        // Nếu có phần tử thỏa mãn điều kiện, hiển thị thông báo lỗi\r\n        if (hasMatchingTypeRoomId) {\r\n            toast.error(\"Loại phòng này có đơn đặt sắp tới! Không thể xóa\")\r\n            return; // Dừng hàm\r\n        }\r\n        // xacs nhan xoa\r\n        confirmAlert({\r\n            title: 'Xác nhận',\r\n            message: 'Bạn có chắc chắn muốn xóa loại phòng này?',\r\n            buttons: [\r\n                {\r\n                    label: 'Có',\r\n                    onClick: () => {\r\n                        // Xác nhận xóa phòng\r\n                        deleteRoom(typeRoomId);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Không',\r\n                    onClick: () => {\r\n                        // Không làm gì cả\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n    }\r\n\r\n    const deleteRoom = async (typeRoomId) => {\r\n\r\n        try {\r\n            const Success = await axios.delete(`/rooms/${typeRoomId}`);\r\n\r\n            if (Success) {\r\n                // Nếu xóa thành công, tải lại dữ liệu\r\n                roomReFetch();\r\n                toast.success('Xóa phòng thành công');\r\n            } else {\r\n                toast.error('Có lỗi xảy ra. Vui lòng thử lại');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error ', error);\r\n            toast.error('Có lỗi xảy ra. Vui lòng thử lại');\r\n        }\r\n    }\r\n\r\n    // hàm chỉnh trạng thái loại phòng\r\n    const changeStatusRoomType = async (roomTypeId, currentStatus) => {\r\n        confirmAlert({\r\n            title: 'Xác nhận',\r\n            message: 'Bạn có chắc chắn muốn chỉnh trạng thái loại phòng/căn này?',\r\n            buttons: [\r\n                {\r\n                    label: 'Có',\r\n                    onClick: async () => {\r\n                        // Xác nhận xóa phòng\r\n                        try {\r\n                            const Success = await axios.put(`/rooms/${roomTypeId}`, {\r\n                                status: !currentStatus\r\n                            });\r\n                            // Nếu thành công, tải lại dữ liệu\r\n                            roomReFetch();\r\n                            toast.success('Chỉnh trạng thái thành công');\r\n                        } catch (error) {\r\n                            console.error('Error ', error);\r\n                            toast.error('Có lỗi xảy ra. Vui lòng thử lại');\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Không',\r\n                    onClick: () => {\r\n                        // Không làm gì cả\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n    }\r\n\r\n    // thêm cột status và xóa sửa\r\n    const actionColumn = [\r\n        {\r\n            field: \"status\",\r\n            headerName: \"Trạng thái\",\r\n            flex: 1,\r\n            // width: 150,\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div style={{\r\n                        color: params.value ? 'green' : 'red',\r\n                        fontWeight: 'bold', cursor: 'pointer'\r\n                    }} onClick={() => changeStatusRoomType(params.row._id, params.row.status)}>\r\n                        {params.value ? 'HOẠT ĐỘNG' : 'DỪNG'}\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: \"action\",\r\n            headerName: \"Hành động\",\r\n            // width: 270,\r\n            flex: 1.75,\r\n            headerAlign: 'center',\r\n            renderCell: (params) => {\r\n                return (\r\n                    <div className=\"cellAction\">\r\n                        <div className=\"viewButton wrap-content\" onClick={() => handleNavigation(`/admin/rooms/${params.row._id}`)}>\r\n                            Chỉnh thông tin\r\n                        </div>\r\n                        <div className=\"viewButton wrap-content\" onClick={() => handleNavigation(`/admin/rooms/smallRoomDetails/${params.row._id}`)}>\r\n                            Chỉnh số lượng\r\n                        </div>\r\n                        <div\r\n                            className=\"deleteButton wrap-content\"\r\n                            onClick={() => handleDelete(params.row._id)}\r\n                        >\r\n                            Xóa loại phòng\r\n                        </div>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n\r\n                <div className=\"ListRoomAdminContainer\">\r\n                    <h2>Phòng của bạn</h2>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n\r\n                        <div className=\"hotelSelectBox\">\r\n                            {/* <label>Choose a hotel</label> */}\r\n                            <select\r\n                                id=\"hotelId\"\r\n                                value={hotelId}\r\n                                onChange={handleHotelChange}\r\n                            >\r\n                                <option value=\"d\" disabled selected>Chọn chỗ nghỉ</option>\r\n                                {hotelLoading\r\n                                    ? \"loading\"\r\n                                    : hotelData &&\r\n                                    hotelData.map((hotel) => (\r\n                                        <option key={hotel._id} value={hotel._id}>\r\n                                            {hotel.name}\r\n                                        </option>\r\n                                    ))}\r\n                            </select>\r\n\r\n                        </div>\r\n\r\n\r\n                        <button onClick={() => handleNavigation(`/admin/rooms/new`)} style={{\r\n                            fontSize: '14px', backgroundColor: '#5bf800', border: 'none',\r\n                            height: '40px', color: 'white', fontWeight: 'bold', borderRadius: '5px'\r\n                        }}>Thêm loại phòng (loại chỗ ở)</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <DataGrid autoHeight getRowHeight={() => 'auto'}\r\n                    className=\"datagrid\"\r\n                    rows={roomData}\r\n                    columns={roomColumns.concat(actionColumn)}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    // checkboxSelection\r\n                    getRowId={(row) => row._id}\r\n                    localeText={{\r\n                        noRowsLabel: <span style={{ color: 'red' }}>Bạn chưa chọn chỗ nghỉ hoặc chỗ nghỉ này chưa có phòng</span>,\r\n                    }}\r\n                />\r\n\r\n                <div style={{ fontStyle: 'italic', width: '95%', margin: 'auto' }}>\r\n                    (Nếu bạn muốn tạm dừng bán một loại phòng (loại căn hộ, biệt thự,.. ) nào đó,\r\n                    bạn có thể bấm vào ô hiển thị trạng thái để chỉnh trạng thái\r\n                    . Những loại phòng ở trạng thái \"DỪNG\" sẽ không hiển thị đối với khách).\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ListRoom\r\n","import React from 'react'\r\nimport \"./listBooking.css\"\r\nimport Navbar from '../../../components/navbar/Navbar'\r\nimport Header from '../../../components/header/Header'\r\nimport { useState, useContext } from \"react\";\r\nimport axios from 'axios';\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { format, addDays, subDays, subHours, addHours } from \"date-fns\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../../../components/footer/Footer';\r\nconst ListBooking = () => {\r\n  // const { user } = useContext(AuthContext)\r\n  const { data, loading, error, reFetch } = useFetch(\r\n    `/reservation/client`\r\n  );\r\n  const [isSending,setIsSending] = useState(false)\r\n\r\n  const handleCancelReserve = async (selectedReservation) => {\r\n    let message = \"\"\r\n    let cancelFee =0;\r\n    // hủy trong khoảng time 3 ngày trc ngày nhận phòng và ko trong khoảng 24h sau thời gian đặt \r\n    // và ko phải là yêu cầu hủy từ admin thì bị coi là muộn - tính phí đêm đầu\r\n    const isLateCancel = (new Date() > subHours(new Date(selectedReservation.start), 24 * 3)) &&  !selectedReservation.cancelDetails.isAdminCancel\r\n      && (new Date() > addHours(new Date(selectedReservation.createdAt), 24))\r\n\r\n    if (isLateCancel) {\r\n      cancelFee = selectedReservation.totalPrice / selectedReservation.allDatesReserve.length\r\n      message = `Bạn có chắc chắn muốn hủy đơn đặt phòng này? Bạn không thể hoàn tác sau khi hủy. Bạn mất phí hủy \r\n      (phí đêm đầu- ${new Intl.NumberFormat('vi-VN').format(cancelFee* 1000)} VND)\r\n       nếu hủy đơn đặt này.`\r\n    } else message = \"Bạn có chắc chắn muốn hủy đơn đặt phòng này? Bạn không thể hoàn tác sau khi hủy. Bạn sẽ không mất phí hủy nếu hủy đơn đặt này\"\r\n\r\n    confirmAlert({\r\n      title: 'Xác nhận hủy',\r\n      message: message,\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            deleteAvailability(cancelFee,selectedReservation);\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {\r\n            // Không làm gì cả\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // bỏ unavailabledates trong mỗi phòng đặt\r\n  const deleteAvailability = async (cancelFee,selectedReservation) => {\r\n    setIsSending(true)\r\n    let hasError = false;\r\n    // console.log(roomNumbersId)\r\n    try {\r\n\r\n      // đẩy available\r\n      for (const roomTypeId of selectedReservation.roomTypeIdsReserved) {\r\n        for (var i = 0; i < roomTypeId.quantity; i++) {\r\n          try {\r\n            const res = await axios.put(`/rooms/cancelAvailability/${roomTypeId.roomTypeId}`, {\r\n              dates: selectedReservation.allDatesReserve,\r\n              unavailableRangeDates: {\r\n                startDateRange: selectedReservation.start,\r\n                endDateRange: selectedReservation.end\r\n              }\r\n            });\r\n            // console.log(`Room ${roomId} updated successfully.`);\r\n          } catch (err) {\r\n            console.error(err);\r\n            hasError = true;\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      // chỉnh lại trạng thái reservation\r\n      try {\r\n        await axios.put(`/reservation/${selectedReservation._id}`, {\r\n          status: 0,\r\n          cancelDetails:{\r\n            // giữ nguyên isAdminCancel, update phí hủy theo trường hợp\r\n            isAdminCancel:selectedReservation.cancelDetails.isAdminCancel,\r\n            cancelFee:cancelFee\r\n        }\r\n        })\r\n      } catch (err) {\r\n        hasError = true;\r\n        console.log(err)\r\n        return;\r\n      }\r\n\r\n      // // gửi email xác nhận đã hủy phòng thành công\r\n      let emailSubject = \"THÔNG BÁO HỦY PHÒNG THÀNH CÔNG\"\r\n      // try {\r\n      //   const res = await axios.put(`/reservation/email/sendEmailStatusReservation`, {\r\n      //     userId:selectedReservation.userId,\r\n      //     emailSubject:\"THÔNG BÁO HỦY PHÒNG THÀNH CÔNG\",\r\n      //     emailContent:`Đơn đặt phòng mã ${selectedReservation._id} của quý khách đã được hủy thành công.\\n Chi tiết đơn đặt xem tại trên website`\r\n      //   });\r\n      // } catch (err) {\r\n      //   hasError = true;\r\n      //   console.log(err)\r\n      //   return;\r\n      // }\r\n\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      hasError = true;\r\n    } finally {\r\n      if (hasError) {\r\n        toast.error(\"Đã xảy ra lỗi trong quá trình hủy phòng.\");\r\n      } else {\r\n        toast.success(\"Hủy phòng thành công\");\r\n      }\r\n      setIsSending(false)\r\n      reFetch();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Header type=\"list\" />\r\n      <div className=\"listBookingContainer\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <h1>Đặt phòng của bạn</h1>\r\n          <Link style={{ fontSize: '16px', fontStyle: 'italic', marginTop: '5px' }} to=\"/policy\">Xem thêm về chính sách hủy</Link>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          data.map((item, index) => (\r\n            <div key={index} className=\"flex_div_booking\">\r\n              <div className=\"booking_details\">\r\n                <div>Mã đặt phòng: {item._id}</div>\r\n                <div>Chỗ nghỉ: {item.hotelName} </div>\r\n                <div>Địa chỉ: {item.hotelAddress}</div>\r\n                <div>Phòng đặt: {item.roomsDetail}</div>\r\n                <div>Tổng giá: {new Intl.NumberFormat('vi-VN').format(item.totalPrice * 1000)} VND</div>\r\n                <div style={{ fontWeight: 'bold' }}>Ngày nhận phòng:  {new Date(item.start).toLocaleString('vi-VN')}</div>\r\n                <div style={{ fontWeight: 'bold' }}>Ngày trả phòng: {subHours(new Date(item.end), 2).toLocaleString('vi-VN')}</div>\r\n                {/* <div>(Thời gian được tính theo múi giờ hiện tại máy của bạn)</div> */}\r\n                <div style={{ color: item.status === 1 ? 'green' : item.status === 0 ? 'red' : 'blue', fontWeight: 'bold' }}>\r\n                  Tình trạng: {item.status === 1 ? \"Thành công\" : item.status === 0 ? \"Hủy\" : \"Đang chờ\"}\r\n                </div>\r\n                {/* xem có yêu cầu hủy từ chủ chỗ nghỉ ko */}\r\n                {item.status ===1 && item.cancelDetails.isAdminCancel ? \r\n                (\r\n                  <div style={{ fontWeight: 'bold',color:'red',fontStyle:'italic' }}>(Đơn này đang được yêu cầu hủy từ chủ chỗ nghỉ. <br/>\r\n                   Đặt phòng này vẫn sẽ có hiệu lực cho đến khi bạn hủy. <br/>Bạn sẽ không mất phí hủy nếu hủy đơn này)</div>\r\n                ):''}\r\n                <div>Thông tin liên lạc chỗ nghỉ: {item.hotelContact}</div>\r\n\r\n\r\n\r\n              </div>\r\n\r\n              <div style={{ width: '25%', display: 'flex', justifyContent: 'flex-end', flexWrap: 'wrap' }}>\r\n                <button className=\"cancel_booking\" onClick={() => handleCancelReserve(item)}\r\n                  disabled={new Date() > new Date(item.start) || item.status ==0}>\r\n                  {/* disabled={ new Date() > new Date(item.start) || !item.status}> */}\r\n\r\n                    {isSending ? 'Đang xử lý' : 'Hủy đặt phòng' }</button> <br />\r\n\r\n                {/* <button className=\"cancel_booking\" onClick={() => handleCancelReserve(item.allDatesReserve, item.roomNumbersId, item._id, item.start, item.end, item.roomTypeIdsReserved)}\r\n                >Hủy đặt phòng</button>  */}\r\n                <br />\r\n                <div style={{ textAlign: 'right' }}>(Bạn sẽ được miễn phí hủy nếu hủy trong 24h kể từ lúc đặt hoặc trước thời gian nhận phòng 3 ngày (trước {subHours(new Date(item.start), 24 * 3).toLocaleString('vi-VN')}))</div>\r\n              </div>\r\n\r\n            </div>\r\n          ))\r\n        )}\r\n\r\n\r\n      </div>\r\n\r\n      {/* <Footer /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListBooking\r\n","\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./reserve.css\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useEffect } from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SearchContext } from \"../../../context/SearchContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport Navbar from \"../../../components/navbar/Navbar\";\r\nimport Header from \"../../../components/header/Header\";\r\nimport { format, addDays, subHours } from \"date-fns\";\r\nimport { toast } from 'react-toastify';\r\nimport { useLocation } from \"react-router-dom\";\r\nconst Reserve = () => {\r\n  const location = useLocation();\r\n  // gồm id các phòng nhỏ\r\n  const [selectedRooms, setSelectedRooms] = useState(location.state.selectedRoomIds);\r\n  const [alldates, setAlldates] = useState(location.state.alldates);\r\n  const [hotelId, setHotelId] = useState(location.state.hotelId);\r\n  const [startDate, setStartDate] = useState(location.state.startDate);\r\n  const [endDate, setEndDate] = useState(location.state.endDate);\r\n  const searchContext = useContext(SearchContext);\r\n  const [options, setOptions] = useState(searchContext.options);\r\n  // gồm room type id, tên room type, và số lượng phòng đặt cho từng roomtype\r\n  const [roomsDetailFromListClient, setRoomsDetailFromListClient] = useState(location.state.seletedRoomIdsReserved)\r\n  const { user } = useContext(AuthContext)\r\n  const { data: roomData, loading, error, reFetch } = useFetch(`/rooms/${hotelId}`);\r\n  const { data: hotelData, loading: hotelLoading, error: hotelError } = useFetch(`/hotels/find/${hotelId}`);\r\n  const [reFreshRoomData, setReFreshRoomData] = useState();\r\n  const [phoneNumber, setPhoneNumber] = useState();\r\n  const [paymentType, setPaymentType] = useState();\r\n  const [isSending, setIsSending] = useState(false);\r\n  const handlePaymentTypeChange = (event) => {\r\n    setPaymentType(event.target.value);\r\n  };\r\n  const handlePhoneNumberChange = (event) => {\r\n    setPhoneNumber(event.target.value);\r\n  };\r\n  \r\n  // console.log(paymentType)\r\n  var totalPrice = 0;\r\n  var maxPeople = 0;\r\n  // console.log(startDate)\r\n  // lấy ra id roomType cùng số lượng - dùng để cho vào reservation - để thống kê sau này\r\n  const roomTypeIdsReserved = roomsDetailFromListClient.map(room => ({\r\n    roomTypeId: room.roomTypeId,\r\n    quantity: room.quantity\r\n  }));\r\n  // console.log(roomTypeIdsReserved)\r\n\r\n\r\n  const roomCounts = {};\r\n  // để tạo ra text cho vào chỗ đơn đặt phòng VD: testx2, test3x1 và tổng giá cho mỗi đêm totalPrice cho vào đơn đặt phòng\r\n  // Tính số lượng của từng loại phòng\r\n  selectedRooms.forEach(roomId => {\r\n    // với mỗi _id phòng nhỏ thì tìm typeRoom tương ứng\r\n    const room = roomData.find(room => room.roomNumbers.some(rn => rn._id == roomId));\r\n    if (room) {\r\n      totalPrice = totalPrice + room.price\r\n      maxPeople = maxPeople + room.maxPeople\r\n      if (roomCounts[room.title]) {\r\n        roomCounts[room.title]++;\r\n      } else {\r\n        roomCounts[room.title] = 1;\r\n      }\r\n    }\r\n  });\r\n\r\n  // để tạo ra text cho vào chỗ đơn đặt phòng VD: testx2, test3x1\r\n  const detailRooms = Object.entries(roomCounts).map(([title, count]) => `${title} (x${count})`).join(', ');\r\n  const selectedRoomIdsReserved = []\r\n  // đặt phòng\r\n  const reserveRoom = async () => {\r\n    setIsSending(true)\r\n    // check lại các trường\r\n    if (!paymentType || !phoneNumber) {\r\n      toast.error(\"Vui lòng nhập đầy đủ thông tin thanh toán\")\r\n      setIsSending(false)\r\n      return;\r\n    }\r\n\r\n  \r\n\r\n    // Đẩy available\r\n    try {\r\n     \r\n      const res = await axios.put(`/rooms/availability/`, {\r\n        roomTypeIdsReserved:roomTypeIdsReserved,\r\n        dates: alldates,\r\n        startDateRange: startDate,\r\n        endDateRange: endDate,\r\n        // hotelId: hotelId,\r\n      });\r\n    } catch (err) {\r\n      console.log(err)\r\n      toast.error(err.response.data.message)\r\n      setIsSending(false)\r\n      return; // Ngưng thực thi hàm nếu có lỗi\r\n    }\r\n    // tạo order\r\n    let reservationId = \"\"\r\n    try {\r\n      const newReservation = await axios.post(`/reservation`, {\r\n        phoneNumber: phoneNumber,\r\n        start: startDate,\r\n        end: endDate,\r\n        roomTypeIdsReserved: roomTypeIdsReserved,\r\n        roomsDetail: detailRooms,\r\n        guest: { adult: options.adult, children: options.children },\r\n        allDatesReserve: alldates,\r\n        totalPrice: totalPrice * alldates.length,\r\n        hotelId: hotelId,\r\n        idOwnerHotel: hotelData.ownerId,\r\n        status: -1,\r\n      });\r\n      // lấy id của đơn đặt phòng vừa tạo\r\n      reservationId = newReservation.data._id;\r\n\r\n    } catch (err) {\r\n      console.log(err)\r\n      return;\r\n    }\r\n\r\n    toast.success('Đi đến trang thanh toán');\r\n\r\n    // chuyển hướng thanh toán VNPAY\r\n    try {\r\n      const response = await axios.post('/payment/create_payment_url', {\r\n        reservationId: reservationId,\r\n        amount: totalPrice * alldates.length * 1000,\r\n        paymentType: paymentType\r\n      });\r\n      let paymentUrl = response.data; // Giả sử API trả về link thanh toán trong trường 'paymentUrl'\r\n      const startIndex = paymentUrl.indexOf('https://');\r\n      // Cắt bỏ phần URL trước \"https://\" và lấy phần sau\r\n      paymentUrl = paymentUrl.substring(startIndex);\r\n      // chuyển hướng link thanh toán\r\n      window.location.href = paymentUrl;\r\n    } catch (error) {\r\n      console.error('Error creating payment:', error);\r\n      // Xử lý lỗi nếu cần\r\n    }\r\n\r\n    setIsSending(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Header type=\"list\" />\r\n\r\n      <div className=\"ReserveContainer\">\r\n        <h1>Thông tin đặt phòng</h1>\r\n        {/* chứa thông tin khách sạn đang đặt */}\r\n        <div className=\"ReserveHotelContainer\">\r\n          <img src={hotelData.photos?.[0]} alt=\"\" className=\"reserveImg\" />\r\n\r\n          <div style={{ width: '65%' }}>\r\n            <div style={{ fontSize: '30px', fontWeight: 'bold', marginBottom: '10px', lineHeight: '30px' }}>{hotelData.name}</div>\r\n            <div>Địa chỉ: {hotelData.address}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{\r\n          width: '100%', backgroundColor: '#d5eefd', boxSizing:'border-box', alignContent: 'center',\r\n          fontWeight: 'bold', fontSize: '25px', padding: '10px'\r\n        }}>  Chi tiết đặt phòng của bạn</div>\r\n        \r\n        <div className=\"ReserveDetailContainer\">\r\n          <div>Thời gian nhận phòng:  {startDate.toLocaleString('vi-VN')}</div>\r\n          <div>Thời gian trả phòng:  {subHours(endDate,2).toLocaleString('vi-VN')}</div>\r\n          {/* <div>(Thời gian được tính theo múi giờ hiện tại máy của bạn)</div> */}\r\n          <div>Tổng thời gian lưu trú:  {alldates.length} đêm</div>\r\n          <div style={{ fontWeight: 'bold' }}>Phòng của bạn:  {detailRooms} </div>\r\n          <div style={{ fontWeight: 'bold' }}>Số người: {options.adult} người lớn và {options.children} trẻ em</div>\r\n          {(parseInt(options.adult) + parseInt(options.children) * 0.5) - maxPeople >= 2 && (\r\n            <div style={{ fontWeight: 'bold', color: 'red' }}>\r\n              (Phòng của bạn có thể không chứa đủ người)\r\n            </div>\r\n          )}\r\n          <div style={{ fontWeight: 'bold' }}>\r\n            Tổng giá: {new Intl.NumberFormat('vi-VN').format(totalPrice * alldates.length * 1000)} VND\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div style={{\r\n          width: '100%', backgroundColor: '#d5eefd', boxSizing:'border-box', alignContent: 'center',\r\n          fontWeight: 'bold', fontSize: '25px', padding: '10px'\r\n        }}>  Thông tin thanh toán</div>\r\n\r\n        <div className=\"ReservePaymentContainer\">\r\n          <div style={{ display: 'flex', justifyContent: 'flex-start', gap: '10px' }}>\r\n            {/* input nhập số điện thoại */}\r\n            <label htmlFor=\"phone\">Nhập số điện thoại của bạn:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"phone\"\r\n              value={phoneNumber}\r\n              onChange={handlePhoneNumberChange}\r\n            />\r\n          </div>\r\n\r\n          {/* nhập hình thức thanh toán */}\r\n          <div>Chọn hình thức thanh toán</div>\r\n          <div className=\"label_paymentMethod\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"paymentType\"\r\n              value=\"VNBANK\"\r\n              // checked={paymentType === \"VNBANK\"}\r\n              onChange={handlePaymentTypeChange}\r\n            />\r\n            Thanh toán thẻ ATM nội địa\r\n          </div>\r\n          <div className=\"label_paymentMethod\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"paymentType\"\r\n              value=\"INTCARD\"\r\n              // checked={paymentType === \"INTCARD\"}\r\n              onChange={handlePaymentTypeChange}\r\n            />\r\n            Thanh toán thẻ VISA\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <button onClick={reserveRoom} className=\"rButton\" disabled={isSending}>\r\n          {isSending ? 'Đang xử lý...' : 'Thanh toán'}\r\n          \r\n        </button>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;","import React from 'react'\r\nimport './newRoom.css'\r\nimport axios from \"axios\";\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { useState, useContext } from \"react\";\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\nimport { roomInputs } from '../../../formSource';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useLocation } from 'react-router';\r\nconst NewRoom = () => {\r\n    const location = useLocation();\r\n    const [files, setFiles] = useState(\"\");\r\n    const [info, setInfo] = useState({});\r\n    // const [rooms, setRooms] = useState([]);\r\n    // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    // const decodedToken = jwtDecode(token);\r\n    const { user } = useContext(AuthContext) // {user._id}\r\n    const [isSending, setIsSending] = useState(false);\r\n    // const { data, loading, error } = useFetch(`/hotels?ownerId=${decodedToken.id}`);\r\n    const { data, loading, error, reFetch } = useFetch(\r\n        `/hotels/getByAdmin`);\r\n    const [hotelId, setHotelId] = useState(location.state?.hotelIdFromListRoom);\r\n    const navigate = useNavigate()\r\n\r\n    const removeImage = (index) => {\r\n        const newFiles = files.filter((_, i) => i !== index);\r\n        setFiles(newFiles);\r\n    };\r\n    const handleHotelChange = (e) => {\r\n        setHotelId(e.target.value);\r\n    };\r\n    const validateInputs = () => {\r\n        // Check if all hotelInputs are filled\r\n        for (let input of roomInputs) {\r\n            if (!document.getElementById(input.id).value) {\r\n                return false;\r\n            }\r\n        }\r\n        // Check if description is filled\r\n        if (!document.getElementById(\"desc\").value.trim() || hotelId == null) {//|| (files.length === 0) sau thêm cái này vào lúc triển khai\r\n            return false;\r\n        }\r\n\r\n        if (document.getElementById(\"price\").value < 0 || document.getElementById(\"maxPeople\").value < 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.id === \"roomNumbers\") {\r\n            const numberOfRooms = parseInt(e.target.value);\r\n            const roomQuantity = Array.from({ length: numberOfRooms }, () => ({}));\r\n            setInfo((prev) => ({ ...prev, [e.target.id]: roomQuantity }));\r\n        } else {\r\n            setInfo((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n        }\r\n\r\n\r\n\r\n    };\r\n    // console.log(info)\r\n\r\n    // khi người dùng submit\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        setIsSending(true);\r\n        try {\r\n            if (files.length >= 15) {\r\n                toast.error(\"Bạn chỉ có thể up tối đa 15 ảnh\")\r\n                return;\r\n            }\r\n            const list = await Promise.all(\r\n                Object.values(files).map(async (file) => {\r\n                    const data = new FormData();\r\n                    data.append(\"file\", file);\r\n                    const uploadRes = await axios.post(\r\n                        `/closedRoom/upload/uploadImage`,\r\n                        data\r\n                    );\r\n\r\n                    const { url } = uploadRes.data;\r\n                    return url;\r\n                })\r\n            );\r\n\r\n\r\n\r\n            if (!validateInputs()) {\r\n                toast.error(\"Bạn chưa điền đủ thông tin hoặc thông tin không hợp lệ!\");\r\n            } else {\r\n                const newRoom = {\r\n                    ...info,\r\n                    photos: list,\r\n                    //   ownerId: decodedToken.id\r\n                };\r\n\r\n                // console.log(newRoom)\r\n\r\n                const Success = await axios.post(`/rooms/${hotelId}`, newRoom);\r\n                if (Success) {\r\n                    toast.success('Thành công!');\r\n                    navigate(`/admin/rooms`, { state: { hotelIdFromAddModifyRoom: hotelId } });\r\n                } else toast.error(\"Có lỗi xảy ra vui lòng tải lại trang và thử lại\");\r\n\r\n\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        } finally {\r\n            setIsSending(false); // Kết thúc xử lý, trả lại trạng thái ban đầu cho nút\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n                {/* css từ newHotel.css */}\r\n                <div className=\"top\">\r\n                    <h1>Thêm loại phòng / chỗ ở</h1>\r\n                </div>\r\n\r\n                <div className=\"bottom\">\r\n\r\n                    {/*left- chỗ hiện ảnh đã chọn */}\r\n                    <div className=\"left\">\r\n                        {files.length > 0 ? (\r\n                            files.map((file, index) => (\r\n                                <div key={index} style={{ position: 'relative', display: 'inline-block' }}>\r\n                                    <img\r\n                                        src={URL.createObjectURL(file)}\r\n                                        alt={`Uploaded image ${index + 1}`}\r\n                                        style={{ display: 'block' }}\r\n                                    />\r\n                                    <button\r\n                                        onClick={() => removeImage(index)}\r\n                                        style={{\r\n                                            position: 'absolute',\r\n                                            top: '5px',\r\n                                            right: '5px',\r\n                                            backgroundColor: 'red',\r\n                                            color: 'white',\r\n                                            border: 'none',\r\n                                            borderRadius: '50%',\r\n                                            width: '20px',\r\n                                            height: '20px',\r\n                                            cursor: 'pointer',\r\n                                            textAlign: 'center',\r\n                                        }}\r\n                                    >\r\n                                        X\r\n                                    </button>\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <img\r\n                                src=\"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\r\n                                alt=\"No image\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    {/* field up ảnh */}\r\n                    <div className=\"right\">\r\n                        <form>\r\n\r\n                            {/* select box khach san */}\r\n                            <div className=\"roomSelectBox\">\r\n                                {/* <label>Choose a hotel</label> */}\r\n                                <select\r\n                                    id=\"hotelId\"\r\n                                    value={hotelId}\r\n                                    onChange={handleHotelChange}\r\n                                >\r\n                                    <option disabled selected>Chọn chỗ nghỉ</option>\r\n                                    {loading\r\n                                        ? \"loading\"\r\n                                        : data &&\r\n                                        data.map((hotel) => (\r\n                                            <option key={hotel._id} value={hotel._id}>\r\n                                                {hotel.name}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div className=\"formInput\">\r\n                                <label htmlFor=\"file\">\r\n                                    Up ảnh (click vào biểu tượng bên cạnh để thêm ảnh): <DriveFolderUploadOutlinedIcon className=\"icon\" />\r\n                                </label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"file\"\r\n                                    multiple\r\n                                    onChange={(e) => setFiles([...e.target.files])}\r\n                                    style={{ display: \"none\" }}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* render các trường */}\r\n                            {roomInputs.map((input) => (\r\n                                <div className=\"formInput\" key={input.id}>\r\n                                    <label>{input.label}</label>\r\n                                    <input\r\n                                        id={input.id}\r\n                                        onChange={handleChange}\r\n                                        type={input.type}\r\n                                        placeholder={input.placeholder}\r\n                                    />\r\n                                    {/* hiển thị giá cho input price */}\r\n                                    {input.id == \"price\" ?\r\n                                        <div style={{ marginTop: '10px', fontStyle: 'italic' }}>Bạn đang để giá: {info.price && Intl.NumberFormat('vi-VN').format(info.price * 1000)} VND</div>\r\n                                        : null}\r\n                                </div>\r\n                            ))}\r\n                            {/* test */}\r\n                            <label>Mô tả (về cơ sở vật chất,...) (tối đa 500 ký tự) </label>\r\n                            <textarea\r\n                                id=\"desc\"\r\n                                rows=\"4\" /* Số dòng mặc định hiển thị ban đầu */\r\n                                maxLength=\"500\"\r\n                                onChange={handleChange}\r\n                                style={{ width: \"100%\", padding: \"10px\", fontSize: \"16px\", border: \"1px solid #ccc\", borderRadius: \"5px\", boxSizing: \"border-box\" }}\r\n                            ></textarea>\r\n\r\n                            <button onClick={handleClick} disabled={isSending}>\r\n                                {isSending ? 'Đang lưu...' : 'Xác nhận'}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewRoom\r\n","import React from 'react'\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useContext, } from \"react\";\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport DriveFolderUploadOutlinedIcon from \"@mui/icons-material/DriveFolderUploadOutlined\";\r\nimport { roomInputs } from '../../../formSource';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\nconst ModifyRoom = () => {\r\n  const location = useLocation();\r\n  const idRoom = location.pathname.split(\"/\")[3];\r\n  const { data, loading, error } = useFetch(`/rooms/find/${idRoom}`);\r\n  const [files, setFiles] = useState(\"\");\r\n  const [info, setInfo] = useState(data);\r\n  // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n  // const decodedToken = jwtDecode(token);\r\n  const { user } = useContext(AuthContext) // {user._id}\r\n  const [isSending, setIsSending] = useState(false);\r\n  const navigate = useNavigate()\r\n  const previousPath = location.state?.previousPath;\r\n  if (previousPath !== '/admin/rooms') {\r\n    navigate('/admin/rooms');\r\n  }\r\n  useEffect(() => {\r\n    if (data) {\r\n      setInfo(data);\r\n    }\r\n  }, [data]);\r\n  const removeImage = (index) => {\r\n    const newFiles = files.filter((_, i) => i !== index);\r\n    setFiles(newFiles);\r\n  };\r\n  const handleChange = (e) => {\r\n    setInfo((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n  const validateInputs = () => {\r\n    // Check if all hotelInputs are filled\r\n    for (let input of roomInputs.slice(0, 3)) {\r\n      if (!document.getElementById(input.id).value) {\r\n        return false;\r\n      }\r\n    }\r\n    // Check if description is filled\r\n    if (!document.getElementById(\"desc\").value.trim()) {//|| (files.length === 0) sau thêm cái này vào lúc triển khai\r\n      return false;\r\n    }\r\n    if (document.getElementById(\"price\").value < 0 || document.getElementById(\"maxPeople\").value < 0) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  // khi người dùng submit\r\n  const handleClick = async (e) => {\r\n    setIsSending(true)\r\n    e.preventDefault();\r\n    try {\r\n      const list = await Promise.all(\r\n        Object.values(files).map(async (file) => {\r\n          const data = new FormData();\r\n          data.append(\"file\", file);\r\n          const uploadRes = await axios.post(\r\n            `/closedRoom/upload/uploadImage`,\r\n            data\r\n          );\r\n\r\n          const { url } = uploadRes.data;\r\n          return url;\r\n        })\r\n      );\r\n\r\n      if (!validateInputs()) {\r\n        toast.error(\"Bạn chưa điền đủ thông tin hoặc thông tin không hợp lệ!\");\r\n        return;\r\n      }\r\n      const newModifyRoom = {\r\n        ...info,\r\n        ...(list.length > 0 && { photos: list }), // nếu người dùng có thêm ảnh vào thì set lại ảnh mới, ko thì giữ nguyên\r\n        // ownerId: decodedToken.id    // _id của tài khoản người dùng\r\n      };\r\n\r\n      const Success = await axios.put(`/rooms/${idRoom}`, newModifyRoom);\r\n      if (Success) {\r\n        setIsSending(false)\r\n        toast.success('Thành công chỉnh sửa!');\r\n        navigate(`/admin/rooms`, { state: { hotelIdFromAddModifyRoom: data.hotelId } });\r\n\r\n      } else {\r\n        toast.error(\"Có lỗi xảy ra vui lòng tải lại trang và thử lại\");\r\n        setIsSending(false)\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Có lỗi xảy ra vui lòng tải lại trang và thử lại\");\r\n      setIsSending(false)\r\n    } finally {\r\n      setIsSending(false); // Kết thúc xử lý, trả lại trạng thái ban đầu cho nút\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"listAdmin\">\r\n      <Sidebar />\r\n      <div className=\"listContainerAdmin\">\r\n        <NavbarAdmin />\r\n        {/* css từ newHotel.css */}\r\n        <div className=\"top\">\r\n          <h1 style={{ fontWeight: 'bold' }}>Chỉnh sửa thông tin</h1>\r\n        </div>\r\n\r\n        <div className=\"bottom\">\r\n\r\n          {/*left- chỗ hiện ảnh đã chọn */}\r\n          <div className=\"left\">\r\n            {files.length > 0 ? (\r\n              files.map((file, index) => (\r\n                <div key={index} style={{ position: 'relative', display: 'inline-block' }}>\r\n                  <img\r\n                    src={URL.createObjectURL(file)}\r\n                    alt={`Uploaded image ${index + 1}`}\r\n                    style={{ display: 'block' }}\r\n                  />\r\n                  <button\r\n                    onClick={() => removeImage(index)}\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: '5px',\r\n                      right: '5px',\r\n                      backgroundColor: 'red',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      borderRadius: '50%',\r\n                      width: '20px',\r\n                      height: '20px',\r\n                      cursor: 'pointer',\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-image-container\">\r\n                {data.photos?.map((photo, index) => (\r\n                  <img key={index} src={photo} alt={`Ảnh ${index}`} />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n\r\n          {/* field up ảnh */}\r\n          <div className=\"right\">\r\n            <form>\r\n\r\n              <div className=\"formInput\">\r\n                <label htmlFor=\"file\">\r\n                  Ảnh: (Click vào đây để up lại ảnh) <DriveFolderUploadOutlinedIcon className=\"icon\" />\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  multiple\r\n                  onChange={(e) => setFiles([...e.target.files])}\r\n                  style={{ display: \"none\" }}\r\n                />\r\n              </div>\r\n\r\n              {/* render các trường */}\r\n              {roomInputs.slice(0, 3).map((input) => (\r\n                <div className=\"formInput\" key={input.id}>\r\n                  <label>{input.label}</label>\r\n                  <input\r\n                    id={input.id}\r\n                    onChange={handleChange}\r\n                    type={input.type}\r\n                    // placeholder={data[input.id]}\r\n                    value={info[input.id]}\r\n                  />\r\n                  {/* hiển thị giá cho input price */}\r\n                  {input.id == \"price\" ?\r\n                    <div style={{ marginTop: '10px', fontStyle: 'italic' }}>Bạn đang để giá: {info.price && Intl.NumberFormat('vi-VN').format(info.price * 1000)} VND</div>\r\n                    : null}\r\n                </div>\r\n              ))}\r\n              {/* test */}\r\n              <label>Mô tả (tối đa 500 ký tự)</label>\r\n              <textarea\r\n                id=\"desc\"\r\n                rows=\"4\" /* Số dòng mặc định hiển thị ban đầu */\r\n                maxLength=\"500\"\r\n                onChange={handleChange}\r\n                // placeholder={data.desc}\r\n                value={info.desc}\r\n                style={{ width: \"100%\", padding: \"10px\", fontSize: \"16px\", border: \"1px solid #ccc\", borderRadius: \"5px\", boxSizing: \"border-box\" }}\r\n              ></textarea>\r\n\r\n              <button onClick={handleClick} disabled={isSending}>\r\n                {isSending ? 'Đang lưu...' : 'Lưu thông tin loại phòng'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModifyRoom\r\n","import React from 'react'\r\nimport './listReservation.css'\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { ReservationColumns } from '../../../datatablesource';\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { useContext, useState, useEffect } from 'react'\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { DateRange } from \"react-date-range\";\r\nimport { format, addDays, addYears, subYears } from \"date-fns\";\r\nimport { SearchContext } from '../../../context/SearchContext'\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    faBed,\r\n    faCalendarDays,\r\n    faPerson,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios';\r\nconst currentDate = new Date();\r\n// để hiện tất cả reservations (khi người dùng chưa lọc theo ngày)\r\nconst INITIAL_STATE =\r\n    [\r\n        {\r\n            startDate: subYears(currentDate, 100), // ngày từ 100 năm trước và sau 100 năm\r\n            endDate: addYears(currentDate, 100),\r\n            key: \"selection\",\r\n        },\r\n    ];\r\n\r\nconst ListReservation = () => {\r\n    const { user } = useContext(AuthContext) // {user._id}\r\n    // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    // const decodedToken = jwtDecode(token);\r\n    const searchContext = useContext(SearchContext);\r\n    const [dates, setDates] = useState(searchContext.dates);\r\n    //date này để lọc trong API query\r\n    const [datesToFilter, setDatesToFilter] = useState(INITIAL_STATE);\r\n    const { data: reservationData, loading: reservationLoading, error: reservationError,\r\n        reFetch: reservationReFetch } = useFetch(`/reservation/admin?startDay=${datesToFilter[0].startDate}&endDay=${datesToFilter[0].endDate}`);\r\n    const [openDate, setOpenDate] = useState(false);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [isRequesting, setIsRequesting] = useState(false);\r\n    const [reasonCancel, setReasonCancel] = useState('');\r\n    const [selectedCancelReservation, setSelectedCancelReservation] = useState(\"\");\r\n    // console.log(selectedCancelReservation)\r\n    // đổi giá trị hiển thị trên lịch - ko cần phải chuẩn giờ vì bên backend sẽ quét từ 0h ngày đó theo UTC\r\n    const handleDayChange = (item) => {\r\n        const newSelection = { ...item.selection };\r\n        const { startDate, endDate } = newSelection;\r\n        startDate.setHours(14, 0, 0, 0);\r\n        endDate.setHours(14, 0, 0, 0);\r\n        // dates này để hiển thị lịch trên giao diện\r\n        setDates([{ ...newSelection, startDate, endDate }]);\r\n    };\r\n\r\n    // khi bấm lọc mới lưu vào biến trong API query\r\n    const filterByDates = () => {\r\n        //date này để lọc trong API query\r\n        setDatesToFilter(dates);\r\n    }\r\n\r\n    const cancelFilterByDates = () => {\r\n        //date này để lọc trong API query - hủy lọc theo ngày lấy tất cả đơn\r\n        setDatesToFilter(INITIAL_STATE);\r\n    }\r\n\r\n    // mở modal yêu cầu hủy\r\n    const closeModalCancelRequest = () => {\r\n        setModalIsOpen(false)\r\n    }\r\n    const openRequestCancelModal = (canceledReservation) => {\r\n        // kiểm tra nếu thời gian nhận phòng đơn đấy đã qua hoặc đơn đấy ở status khác 1 (tức khác thành công) là hủy thì ko đc \r\n        if (new Date() > new Date(canceledReservation.start) || canceledReservation.status !== 1) {\r\n            toast.error(\"Bạn không thể yêu cầu hủy đơn này!\")\r\n            return;\r\n        }\r\n        setSelectedCancelReservation(canceledReservation)\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n\r\n    // khi admin bấm yêu cầu hủy đơn đặt\r\n    const requestCancel = async () => {\r\n        setIsRequesting(true)\r\n        let hasError = false\r\n        try {\r\n            // chỉnh lại reservation này là do admin yêu cầu hủy\r\n            try {\r\n                await axios.put(`/reservation/${selectedCancelReservation._id}`, {\r\n                    cancelDetails: {\r\n                        isAdminCancel: true\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                hasError = true;\r\n                console.log(err)\r\n                return;\r\n            }\r\n\r\n            // gửi email xác nhận cho khách về yêu cầu hủy của admin\r\n            // try {\r\n            //     const res = await axios.put(`/reservation/email/sendEmailStatusReservation`, {\r\n            //         userId: selectedCancelReservation.userId, // gửi cho email của account khách - userId khách\r\n            //         emailSubject: \"THÔNG BÁO YÊU CẦU HỦY ĐƠN ĐẶT PHÒNG TỪ CHỦ CHỖ NGHỈ \",\r\n            //         emailContent: `Đơn đặt phòng mã ${selectedCancelReservation._id} của quý khách được chủ chỗ nghỉ yêu cầu hủy \\n Lý do hủy: ${reasonCancel} \\n Chi tiết xem tại trang web phần Đơn đặt phòng `\r\n            //     });\r\n            // } catch (err) {\r\n            //     console.log(err)\r\n            //     hasError = true;\r\n            //     return;\r\n            // }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        } finally {\r\n            if (hasError) {\r\n                toast.error(\"Đã xảy ra lỗi. Vui lòng thử lại.\");\r\n                setModalIsOpen(false)\r\n            } else {\r\n                toast.success(\"Gửi yêu cầu hủy thành công\");\r\n                setModalIsOpen(false)\r\n            }\r\n            // setIsSending(false)\r\n            setIsRequesting(false)\r\n            reservationReFetch();\r\n        }\r\n\r\n    }\r\n    // thêm cột xóa sửa\r\n    const actionColumn = [\r\n        {\r\n            field: \"action\",\r\n            headerName: \"Yêu cầu hủy\",\r\n            flex:1,\r\n            minWidth: 120,\r\n            headerAlign: 'center',\r\n\r\n            renderCell: (params) => {\r\n                const { cancelDetails, status } = params.row;\r\n                const isAdminCancel = cancelDetails?.isAdminCancel;\r\n                // khi đơn có y/c hủy từ admin\r\n                if (isAdminCancel) {\r\n                 // khi đơn có yêu cầu hủy từ admin nhưng chưa được khách chấp nhận - status đơn =1 là thành công\r\n                    if(status ==1){\r\n                        return (\r\n                            <div className=\"cellRequestCancel\">\r\n                                <div style={{color:\"blueviolet\"}}>Đã yêu cầu hủy</div>\r\n                            </div>\r\n                        );\r\n                    } else{\r\n                    // khi đơn có yêu cầu hủy từ admin và được khách chấp nhận\r\n                        return (\r\n                            <div className=\"cellRequestCancel\">\r\n                                <div style={{color:\"blueviolet\", whiteSpace:'normal',textAlign:'center'}}>Yêu cầu hủy thành công</div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                   \r\n                }\r\n                // trường hợp đơn ở trạng thái hủy hoặc quá ngày thì ko hiện yêu cầu hủy\r\n                if (new Date() > new Date(params.row.start) || params.row.status !== 1) {\r\n\r\n                }else{\r\n                    return (\r\n                        <div className=\"cellRequestCancel\">\r\n                            <div className=\"requestCancelButton\" onClick={() => openRequestCancelModal(params.row)}>\r\n                                Yêu cầu hủy\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n              \r\n            },\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            {/* css từ adminHome css */}\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n\r\n                {/* Modal */}\r\n                <div className=\"ListReservationAdminContainer\">\r\n                    { modalIsOpen && (\r\n                        <div className=\"modalCancelRequest\">\r\n                            <div className=\"modal-content\">\r\n                                <span className=\"modalCancelRequest_close\" onClick={closeModalCancelRequest}>&times;</span>\r\n                                <div className=\"modalCancelRequest_title\">YÊU CẦU HỦY PHÒNG</div>\r\n                                <textarea  type=\"text\" value={reasonCancel} rows=\"4\"\r\n                                 placeholder=\"Nhập lý do muốn hủy. Yêu cầu hủy và lý do sẽ được gửi đến email của khách. Lưu ý rằng đơn đặt phòng vẫn sẽ có hiệu lực cho đến khi khách đồng ý hủy.\"\r\n                                 onChange={(e) => setReasonCancel(e.target.value)} />\r\n                                <div >\r\n                                    <button className=\"modalCancelRequest_btn\" disabled={isRequesting}  onClick={requestCancel}> {isRequesting ? 'Đang xử lý...' : 'Yêu cầu hủy'}</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <h2>Những đơn đặt phòng tại chỗ nghỉ của bạn</h2>\r\n\r\n                    <div style={{ display: 'flex', justifyContent: 'flex-start', gap: \"10px\", marginBottom: '10px', textAlign: 'center' }}>\r\n                        {/* css từ listRoomCLient */}\r\n                        <div style={{ width: '20%' }} className=\"ListReservationAdminContainer_searchDates\">\r\n                            <FontAwesomeIcon icon={faCalendarDays} className=\"ListReservationAdminContainer_icon\" />\r\n                            <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n                                dates[0].startDate,\r\n                                \"dd/MM/yyyy\"\r\n                            )} to ${format(dates[0].endDate, \"dd/MM/yyyy\")}`}</span>\r\n                            {openDate && (\r\n                                <DateRange\r\n                                    onChange={(item) => handleDayChange(item)}\r\n                                    // minDate={new Date()}\r\n                                    ranges={dates}\r\n                                    moveRangeOnFirstSelection={false}\r\n                                    editableDateInputs={true}\r\n                                    className=\"date\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <button className=\"ListReservationAdminContainer_filterBtn\" onClick={filterByDates}>Lọc theo ngày</button>\r\n                        <button className=\"ListReservationAdminContainer_filterBtn\" onClick={cancelFilterByDates}>Hủy lọc</button>\r\n                        <div style={{ fontStyle: 'italic' }}>(Lọc theo ngày được tính theo ngày check in của đơn, ví dụ nếu <br />để khoảng ngày 19 đến 20 sẽ lấy đơn có check in ngày 19 và 20)</div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <DataGrid autoHeight getRowHeight={() => 'auto'}\r\n                        // className=\"datagrid\"\r\n                        sx={{\r\n                            '&.MuiDataGrid-root--densityCompact .MuiDataGrid-cell': { py: '8px' },\r\n                            '&.MuiDataGrid-root--densityStandard .MuiDataGrid-cell': { py: '15px' },\r\n                            '&.MuiDataGrid-root--densityComfortable .MuiDataGrid-cell': { py: '22px' },\r\n                          }}\r\n                        rows={reservationData}\r\n                        columns={ReservationColumns.concat(actionColumn)}\r\n                        pageSize={8}\r\n                        rowsPerPageOptions={[5]}\r\n                        // checkboxSelection\r\n                        getRowId={(row) => row._id}\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ListReservation\r\n","import React from 'react'\r\nimport './hotelStatistics.css'\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { Link, useLocation , useNavigate } from \"react-router-dom\";\r\nimport Highcharts from 'highcharts';\r\nimport axios from 'axios';\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { useEffect, useState,  } from 'react';\r\nconst HotelStatistics = () => {\r\n  const location = useLocation();\r\n  const hotelId = location.pathname.split(\"/\")[4];\r\n  const [month, setMonth] = useState(0);\r\n  const { data, loading, error, reFetch } = useFetch(\r\n    `/reservation/getRevenue/${hotelId}?month=${month}`);\r\n  const { data: hotelDataByMonth, loading: loadinghotelDataByMonth, error: errorhotelDataByMonth, reFetch: reFetchhotelDataByMonth }\r\n    = useFetch(`/reservation/getRevenueByMonths/${hotelId}`);\r\n    console.log(hotelDataByMonth)\r\n   \r\n    const navigate = useNavigate()\r\n    const previousPath = location.state?.previousPath;\r\n    if (previousPath !== '/admin/hotels') {\r\n      navigate('/admin/hotels');\r\n    }\r\n    const handleMonthChange = (event) => {\r\n      setMonth(parseInt(event.target.value));\r\n    };\r\n  // Hàm định dạng tiền tệ\r\n  const formatCurrency = (value) => {\r\n    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value * 1000);\r\n  };\r\n  useEffect(() => {\r\n    // biểu đồ đường\r\n\r\n    Highcharts.chart('column_revenueByMonth', {\r\n      chart: {\r\n        type: 'line' // Chuyển đổi sang loại biểu đồ đường\r\n      },\r\n      title: {\r\n        text: 'Biểu đồ doanh thu 6 tháng gần nhất',\r\n        style: {\r\n          fontWeight: \"bold\"\r\n        }\r\n      },\r\n      xAxis: {\r\n        categories: hotelDataByMonth.map(item => item.month + \"/\" + item.year).reverse(),// lấy month và đảo ngược mảng categories trực tiếp\r\n        title: {\r\n          text: 'Danh thu (được tính theo tổng giá trị tất cả đơn đặt phòng. Thời gian được tính theo ngày check in của đơn).'\r\n        },\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: 'Doanh thu',\r\n\r\n        },\r\n        labels: {\r\n          formatter: function () {\r\n            return formatCurrency(this.value); // Gọi hàm formatCurrency để định dạng tiền tệ\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        formatter: function () {\r\n          return 'Doanh thu: ' + formatCurrency(this.y); // Định dạng giá trị tooltip thành tiền tệ\r\n        }\r\n      },\r\n      credits: {\r\n        enabled: false // Tắt chữ bản quyền\r\n      },\r\n      accessibility: {\r\n        enabled: false\r\n      },\r\n      series: [{\r\n        name: 'Doanh thu',\r\n        data: hotelDataByMonth.map(item => item.revenue).reverse()\r\n      }]\r\n\r\n\r\n\r\n    });\r\n\r\n    if (!loading) {\r\n      const soldRoomsData = data.soldRooms;\r\n      console.log(soldRoomsData)\r\n      const pieChartData = [];\r\n      for (const roomType in soldRoomsData) {  // roomType sẽ lặp Deluxve VIp, ...\r\n        if (soldRoomsData.hasOwnProperty(roomType)) {\r\n          pieChartData.push({\r\n            name: roomType,\r\n            y: soldRoomsData[roomType]\r\n          });\r\n        }\r\n      }\r\n\r\n      Highcharts.chart('pieChart-container', {\r\n        chart: {\r\n          type: 'pie'\r\n        },\r\n        title: {\r\n          text: 'Tỷ lệ số lượng loại phòng đã bán',\r\n          style: {\r\n            fontWeight: \"bold\"\r\n          }\r\n        },\r\n        credits: {\r\n          enabled: false\r\n        },\r\n\r\n        series: [{\r\n          name: 'Số lượng đã bán',\r\n          data: pieChartData\r\n        }]\r\n      });\r\n\r\n    }\r\n  }, [hotelDataByMonth, data]);\r\n\r\n  return (\r\n    //   css từ adminHome.css\r\n    <div className=\"listAdmin\">\r\n      <Sidebar />\r\n      <div className=\"listContainerAdmin\">\r\n        <NavbarAdmin />\r\n\r\n        <div className=\"hotelStatisticContainer\">\r\n          <div style={{ fontSize: '30px', fontWeight: 'bold', marginBottom: '10px' }}>Tổng quan chỗ nghỉ</div>\r\n\r\n          <select value={month} onChange={handleMonthChange}>\r\n            <option value={0}>Tất cả </option>\r\n            <option value={1}>Trong tháng này </option>\r\n            <option value={-1}>Trong tháng trước</option>\r\n          </select>\r\n\r\n          <div style={{marginBottom:'20px', fontSize: '14px', fontStyle: 'italic'}}>(Đối với lựa chọn tất cả và trong tháng này sẽ bao gồm cả những đơn sắp tới, \r\n          được tính theo ngày check-in của đơn. Tổng doanh thu bao gồm cả phí hủy của những đơn hủy có phí)</div>\r\n\r\n          <div className=\"overviewStatistic\">\r\n            <div className=\"overviewStatistic_card\">\r\n              <div style={{ fontSize: '15px' }}>Tổng doanh thu (VND)</div>\r\n              <div style={{ fontSize: '10px' }}></div>\r\n              <div style={{ fontWeight: 'bold', fontSize: '30px' }}>\r\n                {new Intl.NumberFormat('vi-VN').format(data.totalRevenue * 1000)}</div>\r\n            </div>\r\n\r\n            <div className=\"overviewStatistic_card\">\r\n              <div style={{ fontSize: '15px' }}>Tổng số khách</div>\r\n              <div style={{ fontWeight: 'bold', fontSize: '30px' }}>{data.totalGuests}</div>\r\n            </div>\r\n\r\n            <div className=\"overviewStatistic_card\">\r\n              <div style={{ fontSize: '15px' }}>Tổng số đơn đặt thành công</div>\r\n              <div style={{ fontWeight: 'bold', fontSize: '30px' }}>{data.totalOrders}</div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div style={{ fontSize: '15px' }}>Loại phòng bán chạy nhất: {data.maxSoldRoomType} ({data.maxSoldRoomCount} đã bán)</div> */}\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div id=\"column_revenueByMonth\" style={{ flex: 1, width: '48%', height: '400px', marginTop: '50px' }}></div>\r\n\r\n            <div id=\"pieChart-container\" style={{ flex: 1, width: '48%', height: '400px', marginTop: '50px', marginLeft: '50px' }}></div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default HotelStatistics\r\n","import \"./sidebarAdministrator.css\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport LocalShippingIcon from \"@mui/icons-material/LocalShipping\";\r\nimport CreditCardIcon from \"@mui/icons-material/CreditCard\";\r\nimport StoreIcon from \"@mui/icons-material/Store\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nconst SidebarAdministrator = () => {\r\n  // const { dispatch } = useContext(DarkModeContext);\r\n  const {user , dispatch} = useContext(AuthContext)\r\n\r\n  const navigate = useNavigate();\r\n  const handleLogOut = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"/auth/logout\");\r\n      dispatch({ type: \"LOGOUT\"});\r\n      navigate(\"/login\");\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    // css từ sidebar.css\r\n    <div className=\"sidebar\">\r\n      <div className=\"top\">\r\n\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <span className=\"logo\">HotelBooking</span>\r\n        </Link>\r\n      </div>\r\n      {/* <hr /> */}\r\n      <div className=\"center\">\r\n        <div style={{color:'red'}}>Quyền admin</div>\r\n        <ul>\r\n          {/* <p className=\"title\">MAIN</p> */}\r\n          {/* <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <li>\r\n              <DashboardIcon className=\"icon\" />\r\n              <span>Dashboard</span>\r\n            </li>\r\n          </Link> */}\r\n          <p className=\"title\">MỤC</p>\r\n          <Link to=\"/administrator/allHotelPayments\" style={{ textDecoration: \"none\" }}>\r\n            <li>\r\n              <CreditCardIcon className=\"icon\" />\r\n              <span>Thanh toán</span>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/administrator\" style={{ textDecoration: \"none\" }}>\r\n            <li>\r\n              <StoreIcon className=\"icon\" />\r\n              <span>Doanh thu các chỗ nghỉ</span>\r\n            </li>\r\n          </Link>\r\n         \r\n          <p className=\"title\">TÀI KHOẢN</p>\r\n          {/* <li>\r\n            <AccountCircleOutlinedIcon className=\"icon\" />\r\n            <span>Profile</span>\r\n          </li> */}\r\n          <li onClick={handleLogOut}>\r\n            <ExitToAppIcon className=\"icon\" />\r\n            <span>Đăng xuất</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {/* <div className=\"bottom\">\r\n        <div\r\n          className=\"colorOption\"\r\n          // onClick={() => dispatch({ type: \"LIGHT\" })}\r\n        ></div>\r\n        <div\r\n          className=\"colorOption\"\r\n          // onClick={() => dispatch({ type: \"DARK\" })}\r\n        ></div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarAdministrator;\r\n","import React from 'react'\r\nimport './administrator.css'\r\nimport SidebarAdministrator from '../../../components/adminComponents/sidebarAdministrator/SidebarAdministrator'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { RenenueAllHotelColumn } from '../../../datatablesource';\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { useContext, useState, useEffect } from 'react'\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nconst Administrator = () => {\r\n\r\n  const { data: hotelRevenue, loading: hotelRevenueLoading, error: hotelRevenueError, reFetch: hotelRevenueReFetch } = \r\n  useFetch(`/reservation/getAllRevenueHotel`);\r\n\r\n  return (\r\n    // css tu AdminHome\r\n    <div className=\"listAdmin\">\r\n      <SidebarAdministrator />\r\n      <div className=\"listContainerAdmin\">\r\n        <NavbarAdmin />\r\n        {/* <h1>bang</h1> */}\r\n\r\n        <div className=\"listAllHotelRevenue\">\r\n          <div style={{fontWeight:'bold'}}>DOANH THU CÁC CHỖ NGHỈ</div>\r\n        <DataGrid autoHeight\r\n                    className=\"datagridAllHotelRenvenue\"  // css từ listRoom.css\r\n                    rows={hotelRevenue}\r\n                    columns={RenenueAllHotelColumn}\r\n                    pageSize={10}\r\n                    rowsPerPageOptions={[5]}\r\n                    checkboxSelection\r\n                    getRowId={(row) => row.hotelId}\r\n                />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Administrator\r\n","import React from 'react'\r\nimport \"./allHotelPayment.css\"\r\nimport SidebarAdministrator from '../../../components/adminComponents/sidebarAdministrator/SidebarAdministrator'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport useFetch from '../../../hooks/useFetch'\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { allHotelPaymentColumn } from '../../../datatablesource';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nconst AllHotelPayment = () => {\r\n  const { data: hotelRevenue, loading: hotelRevenueLoading, error: hotelRevenueError, reFetch: hotelRevenueReFetch } = \r\n  useFetch(`/reservation/getAllPaymentAccount`);\r\n\r\n  const exportToExcel = () => {\r\n    const columns = allHotelPaymentColumn.map(col => col.headerName);\r\n    const data = hotelRevenue.map(row => {\r\n      let rowData = {};\r\n      allHotelPaymentColumn.forEach(col => {\r\n        // cột tổng odanh thu\r\n        if (col.field === \"totalPrice\") {\r\n          rowData[col.headerName] = new Intl.NumberFormat('vi-VN').format(row[col.field] * 1000);\r\n        } else\r\n        // cột cần thanh toán\r\n        if (col.valueGetter) {\r\n          rowData[col.headerName] = new Intl.NumberFormat('vi-VN').format(col.valueGetter({ row }));\r\n        } else {\r\n          rowData[col.headerName] = row[col.field];\r\n        }\r\n      });\r\n      return rowData;\r\n    });\r\n\r\n    const worksheet = XLSX.utils.json_to_sheet(data, { header: columns });\r\n    worksheet['!cols'] = allHotelPaymentColumn.map(col => {\r\n      return { wpx: 170 }; // sử dụng `col.width` nếu có, nếu không mặc định là 100px\r\n    });\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"HotelRevenue\");\r\n\r\n    const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n    const dataBlob = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n    saveAs(dataBlob, 'HotelRevenue.xlsx');\r\n  };\r\n  return (\r\n    // css tu AdminHome\r\n    <div className=\"listAdmin\">\r\n      <SidebarAdministrator />\r\n      <div className=\"listContainerAdmin\">\r\n        <NavbarAdmin />\r\n\r\n        <div className=\"listAllHotelPayment\">\r\n          <div style={{fontWeight:'bold'}}>KHOẢN CẦN THANH TOÁN CHO CÁC CHỦ CHỖ NGHỈ TRONG THÁNG TRƯỚC</div>\r\n          <button className=\"export_btn\" onClick={exportToExcel} style={{ marginBottom: '10px' }}>Xuất Excel</button>\r\n        <DataGrid  autoHeight slots={{ toolbar: GridToolbar }}\r\n                    className=\"datagridListAllHotelPayment\"  \r\n                    rows={hotelRevenue}\r\n                    columns={allHotelPaymentColumn}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    checkboxSelection\r\n                    getRowId={(row) => row.idOwnerHotel}\r\n                />\r\n        </div>\r\n        \r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllHotelPayment\r\n","import React from 'react'\r\nimport './roomDetails.css'\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useContext, } from \"react\";\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport { SearchContext } from '../../../context/SearchContext'\r\nimport { format, addDays, addYears, addHours } from \"date-fns\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {\r\n    faBed,\r\n    faCalendarDays,\r\n    faPerson,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nconst currentDate = new Date();\r\nconst INITIAL_STATE =\r\n    [\r\n        {\r\n            startDate: currentDate, \r\n            endDate: addDays(currentDate, 29),\r\n            key: \"selection\",\r\n        },\r\n    ];\r\nconst RoomDetails = () => {\r\n    const [datesToFilter, setDatesToFilter] = useState(INITIAL_STATE);\r\n    const location = useLocation();\r\n    // id RoomType\r\n    const idRoom = location.pathname.split(\"/\")[4];\r\n    const { data: roomTypeData, loading, error, reFetch: roomTypeDataReFetch } = useFetch(`/rooms/find/${idRoom}`);\r\n    const { data: roomCountStatus, loading: loadingroomCountStatus,\r\n        error: errorroomCountStatus, reFetch: reFetchRoomCountStatus } = useFetch(`/rooms/statusRoomCount/${idRoom}?startDate=${datesToFilter[0].startDate}&endDate=${datesToFilter[0].endDate}`);\r\n    const { data: roomCloseData, loading: loadingroomCloseData,\r\n        error: errorroomCloseData, reFetch: roomCloseDataReFetch } = useFetch(`/closedRoom/${idRoom}`);\r\n    const [openDate, setOpenDate] = useState(false);\r\n    const [openDate30Days, setOpenDate30Days] = useState(false);\r\n    const searchContext = useContext(SearchContext);\r\n    const [dates, setDates] = useState(searchContext.dates);\r\n    // date để lọc status 30 day\r\n    const [selectedRoomIdsToDelete, setSelectedRoomIdsToDelete] = useState([]);\r\n    const [key, setKey] = useState(Math.random());\r\n    const [roomQuantityToClose, setRoomQuantityToClose] = useState(0);\r\n    // const token = document.cookie.replace(/(?:(?:^|.*;\\s*)access_token\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    // const decodedToken = jwtDecode(token);\r\n    const { user } = useContext(AuthContext) // {user._id}\r\n    // check đường dẫn lần trc\r\n    const navigate = useNavigate()\r\n    const previousPath = location.state?.previousPath;\r\n    if (previousPath !== '/admin/rooms') {\r\n        navigate('/admin/rooms');\r\n    }\r\n\r\n    // RIÊNG HÀM NÀY Ở ĐÂY SẼ TÍNH CẢ NGÀY CUỐI, VÍ DỤ NGÀY 17-19 THÌ ALLDATES LÀ 17,18,19\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        const date = new Date(start.getTime());\r\n        const dates = [];\r\n        while (date <= end) {\r\n            dates.push(new Date(date).getTime());\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        return dates;\r\n    };\r\n    // tính alldates Close\r\n    const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n    // console.log(alldates)\r\n    const handleDayChange = (item) => {\r\n        const utc = new Date().getTimezoneOffset() / 60 //-7\r\n        const newSelection = { ...item.selection };\r\n        let { startDate, endDate } = newSelection;\r\n        startDate = addHours(startDate, 7 - utc);\r\n        endDate = addHours(endDate, 7 - utc);\r\n\r\n        setDates([{ ...newSelection, startDate, endDate }]);\r\n        setKey(Math.random()); // Bắt reload lại phần chọn phòng\r\n    };\r\n\r\n    const handleDayChangeFilter30Days = (item) => {\r\n        const utc = new Date().getTimezoneOffset() / 60 //-7\r\n        const newSelection = { ...item.selection };\r\n        let { startDate, endDate } = newSelection;\r\n        startDate = addHours(startDate, 7 - utc);\r\n        // endDate = addHours(endDate, 7 - utc);\r\n        endDate = addDays(new Date(startDate), 29);\r\n        setDatesToFilter([{ ...newSelection, startDate, endDate }]);\r\n        setKey(Math.random()); // Bắt reload lại phần chọn phòng\r\n    };\r\n    // console.log(datesToFilter)\r\n\r\n    // phần đóng phòng\r\n    const isAvailable = (roomNumber, dateToCheck) => {\r\n        // if (!roomNumber.status) {\r\n        //     return false; // Nếu status là false, room không khả dụng\r\n        // }\r\n        const isFound = roomNumber.unavailableDates.some((date) => {\r\n            const dateMinusOneDay = new Date(date).getTime(); // theem getTIme() hay ko cung v\r\n            // console.log(new Date(dateMinusOneDay));\r\n            return dateToCheck == dateMinusOneDay;\r\n        });\r\n\r\n        return !isFound;\r\n    };\r\n\r\n    // thay doi so luong phong dong\r\n    let updatedSelectedRoomToClose = [];\r\n    const handleSelectChange = (event, roomNumbers) => {\r\n        // lấy lựa chọn trong select\r\n        let roomQuantitySelected = event.target.value;\r\n        setRoomQuantityToClose(roomQuantitySelected)\r\n        // updatedSelectedRoomToClose = [];\r\n    };\r\n    // khi ấn xác nhận đóng phòng\r\n    const handelCloseRoom = async () => {\r\n       \r\n        try {\r\n           \r\n            if (parseInt(roomQuantityToClose, 10) == 0) {\r\n                toast.error(\"Số lượng phòng muốn đóng phải lớn hơn 0\")\r\n                return;\r\n            }\r\n            const res = await axios.put(`/rooms/availability/`, {\r\n                roomTypeIdsReserved: [{ roomTypeId: idRoom, quantity: parseInt(roomQuantityToClose, 10) }], // chuyển về dạng số\r\n                dates: alldates,\r\n                startDateRange: dates[0].startDate,\r\n                endDateRange: addDays(dates[0].endDate, 1) // cần cộng 1 ngày do riêng đóng phòng tính cả ngày cuối\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error(\"Có lỗi xảy ra vui lòng tải lại trang và thử lại\")\r\n            return; // Ngưng thực thi hàm nếu có lỗi\r\n        }\r\n\r\n\r\n        // tạo lịch sử đóng phòng\r\n        try {\r\n            const upload = await axios.post(`/closedRoom/createCloseRoom/${idRoom}`, {\r\n                // ownerId: decodedToken.id,\r\n                roomTypeId: idRoom,\r\n                startClose: dates[0].startDate,\r\n                endClose: dates[0].endDate, // cái này chỉ hiển thị ra bảng lịch sử đóng phòng sẽ là đến hết ngày ( ko cộng 1)\r\n                quantityRoomClosed: roomQuantityToClose,\r\n                allDatesClosed: alldates,\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n            toast.error(\"Có lỗi xảy ra\")\r\n            return;\r\n        }\r\n        toast.success('Đóng phòng thành công');\r\n        roomCloseDataReFetch()\r\n        roomTypeDataReFetch()\r\n        reFetchRoomCountStatus()\r\n\r\n    }\r\n\r\n    // ẤN MỞ LẠI PHÒNG ĐÃ ĐÓNG\r\n    const openHandleCancelCloseRoom = (allDatesClose, startDateClose, endDateClose, quantityRoomClosed, roomCloseId) => {\r\n        confirmAlert({\r\n            title: 'Xác nhận',\r\n            message: 'Bạn có chắc chắn muốn mở lại phòng đã đóng ?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n                        handleCancelCloseRoom(allDatesClose, startDateClose, endDateClose, quantityRoomClosed, roomCloseId);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => {\r\n                        // Không làm gì cả\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    const handleCancelCloseRoom = async (allDatesClose, startDateClose, endDateClose, quantityRoomClosed, roomCloseId) => {\r\n        // console.log(startDateClose)\r\n        // console.log(addDays(new Date(endDateClose), 1))\r\n        let hasError = false;\r\n        try {\r\n            // gọi API bằng số lượng quantity của typeRoom đó\r\n            for (var i = 0; i < quantityRoomClosed; i++) {\r\n                try {\r\n                    const res = await axios.put(`/rooms/cancelAvailability/${roomTypeData._id}`, {\r\n                        dates: allDatesClose,\r\n                        unavailableRangeDates: {\r\n                            startDateRange: startDateClose,\r\n                            endDateRange: addDays(new Date(endDateClose), 1) // cộng 1 do riêng đóng phòng tính cả phòng cuối\r\n                        }\r\n                    });\r\n                    // console.log(`Room ${roomId} updated successfully.`);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    hasError = true;\r\n                }\r\n            }\r\n\r\n            // xóa lịch sử closeRoom\r\n            try {\r\n                const Success = await axios.delete(`/closedRoom/${roomCloseId}`);\r\n                roomCloseDataReFetch()\r\n                roomTypeDataReFetch()\r\n                reFetchRoomCountStatus()\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n                hasError = true;\r\n                toast.error('Có lỗi xảy ra trong khi xóa lịch sử đóng phòng');\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            console.error('Error:', err);\r\n            hasError = true;\r\n        }\r\n        if (!hasError) {\r\n            toast.success(\"Đã mở lại phòng đóng\")\r\n        }\r\n\r\n    }\r\n    // console.log(selectedRoomIdsToDelete)\r\n    let roomAvailable = 0; // Khởi tạo biến đếm\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n\r\n                <div key={key} className=\"detailsRoomTypeContainer\">\r\n                    <div style={{ display: 'flex', gap: '20px', alignItems: 'center' }}>\r\n                        <div style={{ fontSize: '20px', fontWeight: 'bold' }}>Loại phòng/căn: {roomTypeData.title} (tổng số lượng phòng/căn: {roomTypeData.roomNumbers?.length})</div>\r\n                        <button  className=\"detailsRoomTypeContainer_modifyNumberRooms\"  onClick={() => navigate(`/admin/rooms/smallRoomDetails/modifyRoomCount/${idRoom}`, { state: { previousPath: '/admin/rooms/smallRoomDetails' } })}>Chỉnh số lượng</button>\r\n\r\n                    </div>\r\n\r\n                    <div style={{ fontWeight: 'bold',fontSize:'18px' }}>\r\n                        Số lượng phòng/căn đang rao bán trong 30 ngày tới\r\n\r\n                    </div>\r\n                     {/* thanh chọn khoảng ngày muốn loc status 30day */}\r\n                     <div style={{ width: '20%',margin:'10px 0px' }} className=\"closeRoomSearchBar\">\r\n                                <FontAwesomeIcon icon={faCalendarDays} className=\"icon\" />\r\n                                <span onClick={() => setOpenDate30Days(!openDate30Days)}>{`${format(\r\n                                    datesToFilter[0].startDate,\r\n                                    \"dd/MM/yyyy\"\r\n                                )} đến ${format(datesToFilter[0].endDate, \"dd/MM/yyyy\")}`}</span>\r\n                                {openDate30Days && (\r\n                                    <DateRange\r\n                                        onChange={(item) => handleDayChangeFilter30Days(item)}\r\n                                        // minDate={new Date()}\r\n                                        ranges={datesToFilter}\r\n                                        moveRangeOnFirstSelection={false}\r\n                                        editableDateInputs={true}\r\n                                        className=\"dateRange\"\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                    <div className=\"tableRoomStatus\">\r\n                        <div className=\"grid-container\">\r\n                            {roomCountStatus.map((status, index) => (\r\n                                <div className=\"grid-item\" key={index}>\r\n                                    <div>{`${status.day}/${status.month}/${status.year}`}</div>\r\n                                    <div>Đang rao bán: {status.countAvailable}</div>\r\n                                    {/*  số lượng bán = số lượng tổng - đang rao bán - số lượng đóng */}\r\n                                    <div style={{ color: roomTypeData.roomNumbers?.length - status.countAvailable-status.closeRoomCount !== 0 ? 'red' : 'inherit', fontWeight: roomTypeData.roomNumbers?.length - status.countAvailable-status.closeRoomCount !== 0 ? 'bold' : 'normal' }}>\r\n                                        Đã bán: {roomTypeData.roomNumbers?.length - status.countAvailable-status.closeRoomCount}\r\n                                    </div>\r\n\r\n                                    <div style={{ color:status.closeRoomCount  !== 0 ? 'red' : 'inherit', fontWeight: status.closeRoomCount !== 0 ? 'bold' : 'normal' }}>\r\n                                        Đã đóng: {status.closeRoomCount}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"closeRoomContainer\">\r\n                        <div style={{ fontWeight: 'bold', fontSize: '20px' }}>Đóng phòng/căn</div>\r\n                        <div style={{ fontStyle: 'italic', marginBottom: '10px' }}>(Bạn có thể đóng 1 số lượng phòng/căn vào trong 1 khoảng ngày nhất định)</div>\r\n\r\n                        <div className=\"selectRoomClose\">\r\n                            {/* thanh chọn khoảng ngày muốn đóng phòng */}\r\n                            <div style={{ width: '20%' }} className=\"closeRoomSearchBar\">\r\n                                <FontAwesomeIcon icon={faCalendarDays} className=\"icon\" />\r\n                                <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n                                    dates[0].startDate,\r\n                                    \"dd/MM/yyyy\"\r\n                                )} đến ${format(dates[0].endDate, \"dd/MM/yyyy\")}`}</span>\r\n                                {openDate && (\r\n                                    <DateRange\r\n                                        onChange={(item) => handleDayChange(item)}\r\n                                        // minDate={new Date()}\r\n                                        ranges={dates}\r\n                                        moveRangeOnFirstSelection={false}\r\n                                        editableDateInputs={true}\r\n                                        className=\"dateRange\"\r\n                                    />\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* hiện ds số lượng phòng */}\r\n                            <div key={key} style={{ display: 'flex', alignItems: 'center', gap: '5px' }}>\r\n                                <div>Số lượng phòng muốn đóng:  </div>\r\n\r\n                                <select style={{ height: '20px' }} onChange={(event) => handleSelectChange(event, roomTypeData.roomNumbers)}>\r\n                                    <option value={0}>0 phòng</option>\r\n                                    {(() => {\r\n                                        // // let roomIndex = 0; // Khởi tạo biến đếm\r\n                                        // return roomTypeData.roomNumbers?.map((roomNumber, index) => {\r\n                                        //     if (isAvailable(roomNumber)) {\r\n                                        //         roomIndex++; // Tăng giá trị biến đếm khi phòng thỏa mãn điều kiện\r\n                                        //         return (\r\n                                        //             <option key={roomNumber._id} value={roomIndex}>\r\n                                        //                 {`${roomIndex} phòng`}\r\n                                        //             </option>\r\n                                        //         );\r\n                                        //     }\r\n                                        //     return null;\r\n                                        // });\r\n                                         roomAvailable = 999;\r\n                                        for (let date of alldates) {\r\n                                            let dateAvailableCount = 0;\r\n                                            //Với mỗi date, duyệt qua các phần tử trong mảng roomNumbers\r\n                                            if (roomTypeData && Array.isArray(roomTypeData.roomNumbers)) {\r\n                                                for (let roomNumber of roomTypeData.roomNumbers) {\r\n                                                    // Kiểm tra xem phòng đó có date hiện tại trống ko\r\n                                                    if (isAvailable(roomNumber, date)) {\r\n                                                        // có phòng thỏa mãn date hiện tại\r\n                                                        dateAvailableCount++\r\n                                                    }\r\n                                                };\r\n                                                // với mỗi date sau khi lặp hết các room nhỏ, cập nhật roomAvailable (roomAvailable sẽ là \r\n                                                // dateAvailableCount nhỏ nhất trong tất cả các date )\r\n                                                if (dateAvailableCount < roomAvailable) {\r\n                                                    roomAvailable = dateAvailableCount\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        // const maxOptions = 10; // Số lượng phòng tối đa sẽ hiện của thẻ option\r\n                                        const options = [];\r\n                                        for (let i = 1; i <= roomAvailable; i++) {\r\n                                            options.push(<option value={i}>{i} phòng</option>);\r\n                                        }\r\n                                        return options;\r\n                                    })()}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div>Số lượng phòng hiện đang rao bán (có thể đóng): {roomAvailable}</div>\r\n\r\n                            <button className=\"closeRoomContainer_btn\" onClick={handelCloseRoom}>Xác nhận đóng</button>\r\n\r\n                        </div>\r\n\r\n                        <div style={{ fontWeight: 'bold', fontSize: '20px', marginTop: '20px' }}>Lịch sử đơn đóng phòng</div>\r\n\r\n                        <div className=\"listRoomClosed\">\r\n                            {/* hàng tiêu đề */}\r\n                            <div style={{ backgroundColor: '#ccc' }} className=\"roomCloseContainer\">\r\n                                <div className=\"roomClose\">STT</div>\r\n                                <div className=\"roomClose\">Đóng từ ngày</div>\r\n                                <div className=\"roomClose\">Đến hết ngày</div>\r\n                                <div className=\"roomClose\">Số lượng phòng đóng</div>\r\n                                <div style={{ width: '20%' }} className=\"roomClose\" >Hành động</div>\r\n                            </div>\r\n\r\n                            {roomCloseData\r\n                                // lấy những cái >= ngày hiện tại\r\n                                ?.filter(roomClose => {\r\n                                    const currentDate = new Date();\r\n                                    currentDate.setHours(0, 0, 0, 0);\r\n                                    return new Date(roomClose.endClose) > currentDate;\r\n                                })\r\n                                .map((roomClose, index) => (\r\n                                    <div key={index} className=\"roomCloseContainer\">\r\n                                        <div className=\"roomClose\">{index + 1}</div>\r\n                                        <div className=\"roomClose\">{new Date(new Date(roomClose.startClose)).toLocaleDateString('vi-VN')}</div>\r\n                                        <div className=\"roomClose\">{new Date(new Date(roomClose.endClose)).toLocaleDateString('vi-VN')}</div>\r\n                                        <div className=\"roomClose\">{roomClose.quantityRoomClosed}</div>\r\n                                        <button style={{ width: '20%' }} className=\"roomNumber\" onClick={() => openHandleCancelCloseRoom(roomClose.allDatesClosed, roomClose.startClose, roomClose.endClose,\r\n                                            roomClose.quantityRoomClosed, roomClose._id)}>MỞ LẠI</button>\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RoomDetails\r\n","import React from 'react'\r\nimport './modifyRoomCount.css'\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useContext, } from \"react\";\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport { AuthContext } from '../../../context/AuthContext';\r\nimport { roomInputs } from '../../../formSource';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst ModifyRoomCount = () => {\r\n    const location = useLocation();\r\n    const idRoom = location.pathname.split(\"/\")[5];\r\n    const { data: roomTypeData, loading, error, reFetch } = useFetch(`/rooms/find/${idRoom}`);\r\n    const [roomCountToAdd, setRoomCountToAdd] = useState(0);\r\n    const [roomCountToDelete, setRoomCountToDelete] = useState(0);\r\n    const navigate = useNavigate()\r\n    const previousPath = location.state?.previousPath;\r\n    if (previousPath !== '/admin/rooms/smallRoomDetails') {\r\n        navigate('/admin/rooms');\r\n    }\r\n    const handleCloseRoom = async (roomId, currentStatus) => {\r\n        // console.log(\"Room ID to delete:\", roomId);\r\n        // Thêm logic xử lý xóa phần tử ở đây\r\n        try {\r\n            // neu trang thai hien tai la true, tức đang mở và người dùng muốn đóng\r\n            if (currentStatus) {\r\n                for (const room of roomTypeData.roomNumbers) {\r\n                    // nếu vẫn còn loại phòng xóa được\r\n                    if (canDelete(room)) {\r\n                        toast.error(\"Nếu bạn muốn giảm số lượng phòng bán,hãy xóa hết phòng trước thay vì đóng phòng\")\r\n                        return;\r\n                    }\r\n                }\r\n\r\n            }\r\n            \r\n            const res = await axios.put(`/rooms/changeStatusRoomInRoomType/${roomId}`)\r\n\r\n            if (res.status === 200) {\r\n                toast.success(\"Chỉnh thành công\") // In ra thông báo nếu thành công\r\n                reFetch();\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Có lỗi xảy ra vui lòng thử lại\")\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    // kiểm tra xem xóa đc phòng ko\r\n    const canDelete = (roomNumber) => {\r\n        if (!roomNumber.unavailableDates || roomNumber.unavailableDates.length === 0) {\r\n            // Nếu không có unavailableDates hoặc mảng rỗng, cho phép xóa\r\n            return true;\r\n        }\r\n        // Lặp qua tất cả các phần tử trong mảng unavailableDates\r\n        for (const date of roomNumber.unavailableDates) {\r\n            //VÍ DỤ HÔM NAY 1/5 14H10 THÌ XÓA ĐƯỢC PHÒNG NHỎ CÓ ĐƠN NGÀY 1/5 (>14H)\r\n            // Kiểm tra nếu ngày hiện tại không lớn hơn mọi phần tử trong mảng\r\n            if (new Date() <= new Date(date)) {\r\n                // 14h GMT\r\n                return false; // Nếu có ít nhất một ngày trong tương lai, không cho phép xóa\r\n            }\r\n        }\r\n        return true; // Nếu ngày hiện tại lớn hơn tất cả các ngày trong mảng, cho phép xóa\r\n    };\r\n\r\n    const handleRoomCountToAddChange = (event) => {\r\n        const count = parseInt(event.target.value);\r\n        setRoomCountToAdd(count);\r\n    };\r\n    const handleRoomCountToDeleteChange = (event) => {\r\n        setRoomCountToDelete(parseInt(event.target.value));\r\n    };\r\n\r\n    // hàm submit\r\n    const submitAddRoom = async (event) => {\r\n        try {\r\n            const res = await axios.put(`/rooms/addRoomToRoomType/${idRoom}`, {\r\n                roomCountToAdd: roomCountToAdd\r\n            });\r\n            if (res.status === 200) {\r\n                toast.success(\"Thêm thành công\") // In ra thông báo nếu thành công\r\n                reFetch(); // Thực hiện lại fetch dữ liệu nếu cần\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setRoomCountToAdd(0)\r\n    };\r\n\r\n    const submitDeleteRoom = async (event) => {\r\n        try {\r\n            const res = await axios.put(`/rooms/deleteRoomInRoomType/${idRoom}`, {\r\n                roomCountToDelete: roomCountToDelete\r\n            });\r\n\r\n            if (res.status === 200) {\r\n                toast.success(\"Xóa thành công\") // In ra thông báo nếu thành công\r\n                reFetch(); // Thực hiện lại fetch dữ liệu nếu cần\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.response.data.message)\r\n            reFetch();\r\n            console.log(error);\r\n        }\r\n        setRoomCountToDelete(0)\r\n    };\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n\r\n                <div className=\"ModifyRoomCountContainer\">\r\n\r\n                    <div style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '20px' }}>Loại phòng: {roomTypeData.title} (tổng số lượng phòng: {roomTypeData.roomNumbers?.length})</div>\r\n                    <div className=\"modifyRoomCount\">\r\n                        <label style={{ display: 'flex', justifyContent: 'flex-start', gap: '10px', alignItems: 'center' }}>\r\n                            Nhập lượng phòng cần thêm (tăng):\r\n                            <input\r\n                                type=\"number\"\r\n                                value={roomCountToAdd}\r\n                                onChange={handleRoomCountToAddChange}\r\n                                min={1}\r\n                            />\r\n                        </label>\r\n                        <button style={{ backgroundColor: 'rgb(91, 248, 0)' }} className=\"modifyRoomCount_btn\" onClick={submitAddRoom}>Thêm</button>\r\n                        <label style={{ display: 'flex', justifyContent: 'flex-start', gap: '10px', alignItems: 'center' }}>\r\n                            Nhập lượng phòng cần xóa (giảm):\r\n                            <input\r\n                                type=\"number\"\r\n                                value={roomCountToDelete}\r\n                                onChange={handleRoomCountToDeleteChange}\r\n                                max={roomTypeData.roomNumbers?.length} \r\n                                min={1}\r\n                            />\r\n                        </label>\r\n                        <button style={{ backgroundColor: 'red' }} className=\"modifyRoomCount_btn\" onClick={submitDeleteRoom}>Xoá</button>\r\n                    </div>\r\n\r\n                    {/* <div style={{ fontStyle: 'italic', marginBottom: '10px' }}>(Với những phòng đã có đơn đặt phòng hoặc đơn đóng phòng trong thời gian tới sẽ hiện màu đỏ,\r\n                        không thể xóa được. Trong trường hợp đó,nếu bạn muốn giảm số lượng phòng muốn bán, bạn sử dụng chức năng đóng phòng.\r\n                      )</div> */}\r\n                       <div style={{ fontStyle: 'italic', marginBottom: '10px' }}>(Với những phòng đã có đơn đặt phòng hoặc đơn đóng phòng trong thời gian tới sẽ hiện màu đỏ,\r\n                        không thể xóa được (Số lượng phòng đỏ là số lượng phòng tối thiểu cần giữ). \r\n                        Trong trường hợp đó, nếu bạn muốn giảm số lượng phòng, bạn có thể yêu cầu hủy đơn của khách hoặc sử dụng chức năng đóng phòng. \r\n                       \r\n                      )</div>\r\n                    {/*  danh sách phòng */}\r\n                    <div style={{ backgroundColor: '#ccc' }} className=\"roomNumberContainer\">\r\n                        <div className=\"roomNumber\">STT</div>\r\n                        <div className=\"roomNumber\">ID phòng</div>\r\n                        {/* <div className=\"roomNumber\">Trạng thái</div> */}\r\n                        <div style={{ width: '20%' }} className=\"roomNumber\" >Tình trạng</div>\r\n                    </div>\r\n                    {roomTypeData.roomNumbers?.map((roomNumber, index) => (\r\n                        <div key={index} className=\"roomNumberContainer\" style={{ backgroundColor: canDelete(roomNumber) ? '' : 'red' }}>\r\n\r\n                            <div className=\"roomNumber\">{index + 1}</div>\r\n                            <div className=\"roomNumber\" style={{ fontWeight: 'unset' }}>{roomNumber._id}</div>\r\n                            {/* <div className=\"roomNumber\" style={{ color: roomNumber.status ? 'green' : 'yellow' }}>\r\n                                {roomNumber.status ? 'Mở' : 'Đóng'}\r\n                            </div> */}\r\n                            {/* nếu ko xóa được  */}\r\n                            {!canDelete(roomNumber) ? (\r\n                                <div className=\"roomNumber\">\r\n                                    {/* <button className=\"roomNumber_btn\" onClick={() => handleCloseRoom(roomNumber._id, roomNumber.status)}>Đóng/Mở</button> */}\r\n                                    Đã đặt hoặc đóng\r\n                                </div>\r\n\r\n                            ) : (\r\n                                <div className=\"roomNumber\">\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n                    ))}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModifyRoomCount\r\n","import React from 'react'\r\nimport \"./statusTransaction.css\"\r\nimport Navbar from \"../../../components/navbar/Navbar\";\r\nimport Header from \"../../../components/header/Header\";\r\n\r\nconst StatusTransaction = ({ status }) => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Header type=\"list\" />\r\n            <div style={{display:'flex',justifyContent:'center',flexDirection:'column',alignItems:'center'}} className=\"statusTransactionContainer\">\r\n                {status === 'success' ? (\r\n                    <>\r\n                        <h1 style={{ color: 'green' }}>Đặt phòng thành công</h1>\r\n                        <button  style={{width:'20%'}} onClick={() => { window.location.href = '/bookings' }}>Xem đơn đặt phòng của bạn</button>\r\n                    </>\r\n                ) : status === 'fail' ? (\r\n                    <>\r\n                        <h1 style={{ color: 'red' }}>Đặt phòng thất bại</h1>\r\n                        <button onClick={() => { window.location.href = '/' }}>Quay về trang chủ</button>\r\n                    </>\r\n                ) : (\r\n                    <h1>Trạng thái không hợp lệ</h1>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusTransaction\r\n","import React from 'react'\r\nimport \"./modifyUser.css\"\r\nimport { useState, useContext } from \"react\";\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nconst ModifyUser = ({ modify }) => {\r\n    const [credentials, setCredentials] = useState({\r\n        oldPassword: undefined,\r\n        newPassword: undefined,\r\n        newPasswordRepeat: undefined // Thêm trường passwordRepeat vào state, trường này khi đẩy vào API ko dùng\r\n    });\r\n    const handleChange = (e) => {\r\n        setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n    };\r\n    console.log(credentials)\r\n    const handleChangePassword = async (e) =>{\r\n        e.preventDefault();\r\n        if ((credentials.newPassword !== credentials.newPasswordRepeat) || !credentials.newPassword || !credentials.oldPassword) {\r\n            toast.error(\"Mật khẩu không khớp hoặc bạn chưa điền đủ từ\");\r\n            return;\r\n          }\r\n          try{\r\n            const res = await axios.post(\"/auth/changePassword\", credentials);\r\n            if(res.status===200){\r\n                toast.success(\"Đổi mật khẩu thành công\")\r\n            } \r\n          }catch(error){\r\n              console.log(error)\r\n          }\r\n    }\r\n    return (\r\n        <div className=\"listAdmin\">\r\n            <Sidebar />\r\n            <div className=\"listContainerAdmin\">\r\n                <NavbarAdmin />\r\n\r\n                {/*  doi mat khau */}\r\n                {modify === 'changePassword' ? (\r\n                <div className=\"modifyUserContainer\">\r\n                    <h1>Đổi mật khẩu</h1>\r\n                    <div className=\"modifyUserContainer_changePassword\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Nhập mật khẩu cũ\"\r\n                            id=\"oldPassword\"\r\n                            onChange={handleChange}\r\n                            \r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Nhập mật khẩu mới\"\r\n                            id=\"newPassword\"\r\n                            onChange={handleChange}\r\n                            \r\n                        />\r\n\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Nhập lại mật khẩu mới\"\r\n                            id=\"newPasswordRepeat\"\r\n                            onChange={handleChange}\r\n                            \r\n                        />\r\n\r\n                        <button onClick={handleChangePassword}>Đổi mật khẩu</button>\r\n                    </div>\r\n                </div>\r\n\r\n                // update payment info\r\n                ) : modify === 'updatePaymentInfo' ? (\r\n                    <>\r\n                        <h1>dfdsf</h1>\r\n                    </>\r\n                ) : (\r\n                    <h1>Trạng thái không hợp lệ</h1>\r\n                )}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ModifyUser\r\n","\r\nimport React from 'react'\r\nimport \"./updatePaymentInfo.css\"\r\nimport Sidebar from '../../../components/adminComponents/sidebar/Sidebar'\r\nimport NavbarAdmin from '../../../components/adminComponents/navbarAdmin/NavbarAdmin'\r\nimport useFetch from '../../../hooks/useFetch'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nconst UpdatePaymentInfo = () => {\r\n  const { data: dataUser, loading, error } = useFetch(`/users/getUserByTokenId`);\r\n  const [info, setInfo] = useState(dataUser);\r\n  const handleChange = (e) => {\r\n    setInfo((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n  const submitChange = async (e) => {\r\n    e.preventDefault();\r\n    const Success = await axios.put(`/users`, info);\r\n    if (Success) {\r\n      toast.success('Thành công chỉnh sửa!');\r\n    } else {\r\n      toast.error(\"Error.Please try again\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (dataUser) {\r\n      setInfo(dataUser);\r\n    }\r\n  }, [dataUser]);\r\n  return (\r\n    <div className=\"listAdmin\">\r\n      <Sidebar />\r\n      <div className=\"listContainerAdmin\">\r\n        <NavbarAdmin />\r\n\r\n        <div className=\"updatePaymentContainer\">\r\n          <h1>Cập nhật thông tin tài khoản nhận thanh toán</h1>\r\n\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <div className=\"updatePaymentContainer_input\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"paymentInfo\"\r\n                value={info.paymentInfo}\r\n                onChange={handleChange}\r\n              />\r\n              <button onClick={submitChange}>Cập nhật</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdatePaymentInfo\r\n\r\n","import React from 'react'\r\nimport \"./policy.css\"\r\nimport Navbar from '../../../components/navbar/Navbar'\r\nimport Header from '../../../components/header/Header'\r\nconst Policy = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Header type=\"list\" />\r\n            <div className=\"policyContainer\">\r\n                <h1>Các chính sách</h1>\r\n                <h2>Chính sách hủy</h2>\r\n                <p>Để tránh các vấn đề đặt phòng do nhầm lẫn, chúng tôi tự động miễn phí hủy cho các khách\r\n                    hủy trong vòng 24 giờ kể từ thời điểm đặt. <br />\r\n                    Trong khoảng thời gian 3 ngày trước ngày nhận phòng, quý khách sẽ bị tính phí cho giá đêm đầu nếu hủy đơn đặt phòng.\r\n                    Quý khách vui lòng cân nhắc kỹ trước khi quyết định hủy đơn đặt phòng.<br />\r\n                    Đối với chủ chỗ nghỉ, nếu vì một lý do đặc biệt (như phòng bất chợt bị hỏng hóc không thể phục vụ khách), quý vị có thể\r\n                    yêu cầu khách hủy đơn đặt phòng trong mục \"Đơn đặt phòng\" và bấm vào nút \"Yêu cầu hủy\". Khách sẽ nhận được email thông báo\r\n                    về yêu cầu hủy của quý khách. Tuy nhiên lưu ý rằng đơn đặt phòng vẫn sẽ có hiệu lực cho đến khi khách xác nhận hủy đơn đặt phòng.\r\n                    Trong trường hợp khách này nếu khách đồng ý hủy đơn đặt phòng, khách sẽ không mất phí hủy và quý vị không nhận được phí hủy.\r\n                </p>\r\n\r\n                {/* <h2>Chính sách thanh toán</h2>\r\n                <p>Để đặt phòng, quý khách có thể chọn 2 phương thức thanh toán: thanh toán qua thẻ ATM nội địa hoặc thanh toán qua thẻ\r\n                    VISA. Đối với những đơn đặt phòng đã hủy, tiền sẽ được hoàn lại vào tài khoản của quý khách trong khoảng thời gian 30 ngày\r\n                    kể từ ngày đặt.\r\n                </p> */}\r\n\r\n                <h2>Chính sách hoa hồng</h2>\r\n                <p>Đối với đối tác của chúng tôi(chủ những khách sạn và chỗ nghỉ), chúng tôi sẽ tính phí 10% hoa hồng cho mỗi đơn đặt phòng thành\r\n                    công của quý khách. Phí hoa hồng này cũng được áp dụng cho phí hủy của những đơn hủy không trong diện hủy miễn phí. Tiền của quý vị\r\n                    sẽ được thanh toán trong 10 ngày đầu tiên của mỗi tháng, quý khách có thể cập nhật tài khoản nhận thanh toán của quý khách\r\n                    tại đây     <a href=\"/admin/updatePaymentInfo\">Cập nhật thông tin thanh toán</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Policy\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/clientPages/home/Home\";\r\nimport List from \"./pages/clientPages/list/List\";\r\nimport Hotel from \"./pages/clientPages/hotel/Hotel\";\r\nimport Login from \"./pages/clientPages/login/Login\";\r\nimport Register from \"./pages/clientPages/register/Register\";\r\nimport AdminHome from \"./pages/adminPages/adminHome/AdminHome\";\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport ListHotel from \"./pages/adminPages/ListHotel/ListHotel\";\r\nimport NewHotel from \"./pages/adminPages/newHotel/NewHotel\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ModifyHotel from \"./pages/adminPages/ModifyHotel/ModifyHotel\";\r\nimport ListRoom from \"./pages/adminPages/ListRoom/ListRoom\";\r\nimport ListBooking from \"./pages/clientPages/listBooking/ListBooking\";\r\nimport Reserve from \"./pages/clientPages/reserve/Reserve\";\r\nimport NewRoom from \"./pages/adminPages/newRoom/NewRoom\";\r\nimport ModifyRoom from \"./pages/adminPages/ModifyRoom/ModifyRoom\";\r\nimport ListReservation from \"./pages/adminPages/ListReservation/ListReservation\";\r\nimport HotelStatistics from \"./pages/adminPages/HotelStatistics/HotelStatistics\";\r\nimport Administrator from \"./pages/administratorPages/administrator/Administrator\";\r\nimport AllHotelPayment from \"./pages/administratorPages/AllHotelPayment/AllHotelPayment\";\r\nimport { getCookie } from 'react-use-cookie';\r\nimport RoomDetails from \"./pages/adminPages/RoomDetails/RoomDetails\";\r\nimport ModifyRoomCount from \"./pages/adminPages/ModifyRoomCount/ModifyRoomCount\";\r\nimport StatusTransaction from \"./pages/clientPages/StatusTransaction/StatusTransaction\";\r\nimport ModifyUser from \"./pages/adminPages/modifyUser/ModifyUser\";\r\nimport UpdatePaymentInfo from \"./pages/adminPages/UpdatePaymentInfo/UpdatePaymentInfo\";\r\nimport Policy from \"./pages/clientPages/Policy/Policy\";\r\nimport axios from 'axios';\r\nfunction App() {\r\n\r\n  // phải có access token ms đc vào\r\n  const ProtectedRoute = ({ children }) => {\r\n    // const { user } = useContext(AuthContext);\r\n    // const userToken = getCookie('access_token');\r\n    // // console.log(userToken)\r\n    // // chua dang nhap (user sẽ mảng rỗng) thi tu dong nhay sang trang login, có user sẵn trong localSto và token trong cookie thì k cần login\r\n    // if (!user.username || !userToken) {\r\n    //   return <Navigate to=\"/login\" />;\r\n    // }\r\n\r\n    // return children;\r\n\r\n    // check api\r\n    const [loading, setLoading] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n      const checkAccessToken = async () => {\r\n        try {\r\n          const response = await fetch('/auth/checkHasAccessToken');\r\n          if (response.status === 200) {\r\n            setIsLoggedIn(true);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error checking access token:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      checkAccessToken();\r\n    }, []);\r\n\r\n    if (loading) {\r\n      return <h1>Loading ....</h1>;\r\n    }\r\n    if (isLoggedIn) {\r\n      return children;\r\n    } else {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n  };\r\n\r\n  const ProtectedAdministratorRoute = ({ children }) => {\r\n    // const { user } = useContext(AuthContext);\r\n    // đang bỏ tạm \r\n    // const userToken = getCookie('access_token');\r\n    // console.log(user)\r\n    // if (!user||!user.isAdmin) {\r\n    //   return <Navigate to=\"/login\" />;\r\n    // }\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n    useEffect(() => {\r\n      const checkAccessToken = async () => {\r\n        try {\r\n          const response = await fetch('/auth/checkHasAccessTokenAdministrator');\r\n          if (response.status === 200) {\r\n            setIsLoggedIn(true);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error checking access token:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      checkAccessToken();\r\n    }, []);\r\n\r\n    if (loading) {\r\n      return <h1>Loading ....</h1>;\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n      return children;\r\n    } else {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/hotels\" element={<List />} />\r\n        <Route path=\"/hotels/:id\" element={<Hotel />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/bookings\" element={<ProtectedRoute><ListBooking /></ProtectedRoute>} />\r\n        <Route path=\"/reserve\" element={<ProtectedRoute><Reserve /></ProtectedRoute>} />\r\n        <Route path=\"/policy\" element={<Policy />} />\r\n        <Route path=\"/statusTransaction/success\" element={<StatusTransaction status=\"success\" />} />\r\n        <Route path=\"/statusTransaction/fail\" element={<StatusTransaction status=\"fail\" />} />\r\n\r\n        {/* tổng doanh thu all hotel */}\r\n        <Route path=\"/administrator\" element={<ProtectedAdministratorRoute><Administrator /></ProtectedAdministratorRoute>} />\r\n        <Route path=\"/administrator/allHotelPayments\" element={<ProtectedAdministratorRoute><AllHotelPayment /></ProtectedAdministratorRoute>} />\r\n\r\n\r\n        {/* cho admin */}\r\n        <Route path=\"/admin/\">\r\n          <Route index element={\r\n            <ProtectedRoute>\r\n              <AdminHome />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"changePassword\" element={\r\n            <ProtectedRoute>\r\n              <ModifyUser modify=\"changePassword\" />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"updatePaymentInfo\" element={\r\n            <ProtectedRoute>\r\n              <UpdatePaymentInfo />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"hotels\" element={\r\n            <ProtectedRoute>\r\n              <ListHotel />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"hotels/new\" element={\r\n            <ProtectedRoute>\r\n              <NewHotel />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"hotels/:id\" element={\r\n            <ProtectedRoute>\r\n              <ModifyHotel />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"hotels/revenue/:id\" element={\r\n            <ProtectedRoute>\r\n              <HotelStatistics />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"rooms\" element={\r\n            <ProtectedRoute>\r\n              <ListRoom />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"rooms/new\" element={\r\n            <ProtectedRoute>\r\n              <NewRoom />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"rooms/:id\" element={\r\n            <ProtectedRoute>\r\n              <ModifyRoom />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"rooms/smallRoomDetails/:id\" element={\r\n            <ProtectedRoute>\r\n              <RoomDetails />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"rooms/smallRoomDetails/modifyRoomCount/:id\" element={\r\n            <ProtectedRoute>\r\n              <ModifyRoomCount />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n          <Route path=\"reservations\" element={\r\n            <ProtectedRoute>\r\n              <ListReservation />\r\n            </ProtectedRoute>\r\n          } />\r\n\r\n\r\n\r\n        </Route>\r\n      </Routes>\r\n      <ToastContainer />\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { SearchContextProvider } from './context/SearchContext';\r\nimport { AuthContextProvider } from './context/AuthContext';\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <AuthContextProvider>\r\n\r\n    <SearchContextProvider>\r\n    <App />\r\n  </SearchContextProvider>\r\n</AuthContextProvider>\r\n\r\n);\r\n\r\n\r\n"],"sourceRoot":""}